{"version":3,"sources":["api/AuthenticationUtil.js","app/ProtectedRoute.jsx","model/DeviceInfo.js","model/StreamInfo.js","general/DynamicBreadcrumb.jsx","general/Buttons/StreamButton.jsx","general/TitleButtons.jsx","general/Title.jsx","api/AuthenticationApi.js","general/LogoutMenu/LogoutMenu.jsx","general/LogoutMenu/LogoutMenuOpener.jsx","general/HeaderBar.jsx","general/Page.jsx","login/LoginFailedDialog.jsx","login/LoginConsole.jsx","login/LoginPageContents.jsx","login/LoginPage.jsx","general/dashboard/GridColumn.jsx","general/dashboard/ButtonInfo.js","general/dashboard/SmallCardButton.jsx","general/dashboard/DashboardCard.jsx","general/dashboard/DashboardButton.jsx","streamlist/StreamsTable.jsx","model/OutputChannelInfo.js","model/InputChannelInfo.js","model/LogInfo.js","model/StreamStatistics/StreamStatisticsInfo.js","model/StreamStatistics/StreamStatsSendInfo.js","model/StreamStatistics/StreamStatsReceiveInfo.js","model/StreamStatistics/StreamStatsLinkInfo.js","model/StreamStatistics/StreamStatsWindowInfo.js","model/ConvertDataFormat.js","api/SampleData.js","streamlist/StreamsTableWrapper.jsx","general/StatusIndicator.jsx","streamlist/StreamDetailsButton.jsx","api/StreamApi.js","streamlist/SimpleStreamsTableWrapper.jsx","homepage/ActiveStreamCard.jsx","homepage/ActivityLogCard.jsx","homepage/DevicesCard.jsx","homepage/AdminPanelCard.jsx","homepage/HomePageContents.jsx","homepage/HomePage.jsx","api/DeviceApi.js","devicelist/StyledInput.jsx","devicelist/DeviceTableTitle.jsx","devicelist/ChannelDetailsTableHead.jsx","devicelist/ChannelDetailsTableRow.jsx","devicelist/ChannelDetailsTable.jsx","general/SnackbarMessage.jsx","general/Buttons/DeleteDeviceButton.jsx","devicelist/ActionMenu.jsx","devicelist/DevicesTable.jsx","devicelist/DeviceListPageContents.jsx","devicelist/DeviceListPage.jsx","deviceDetailsPage/EditableName.jsx","deviceDetailsPage/StaticName.jsx","deviceDetailsPage/DeviceName.jsx","deviceDetailsPage/DeviceInfoTable/DeviceInfoRow.jsx","deviceDetailsPage/DeviceInfoTable/DeviceInfoTable.jsx","deviceDetailsPage/DeviceDetailsInfoTable.jsx","deviceDetailsPage/cards/DeviceInfoCard.jsx","model/StreamLogInfo.js","loglist/LogsTable.jsx","deviceDetailsPage/DeviceLogTableWrapper.jsx","api/LogApi.js","deviceDetailsPage/cards/DeviceLogCard.jsx","deviceDetailsPage/cards/DeviceChannelCard.jsx","general/dialog/DialogBody.jsx","general/dialog/DialogButtons.jsx","general/dialog/Dialog.jsx","deviceDetailsPage/DeleteDeviceDialog/DeleteDeviceDialog.jsx","deviceDetailsPage/DeleteDeviceDialog/DeleteDeviceDialogOpener.jsx","deviceDetailsPage/configuration/UploadConfigDialog.jsx","deviceDetailsPage/configuration/UploadConfigDialogOpenButton.jsx","deviceDetailsPage/configuration/DownloadConfigButton.jsx","deviceDetailsPage/cards/DeviceConfigActionsCard.jsx","deviceDetailsPage/DeviceDetailsPageContents.jsx","deviceDetailsPage/DeviceDetailsPage.jsx","streamlist/DetailedStreamsTableWrapper.jsx","streamlist/StreamListPage.jsx","createStream/SelectDeviceDialog/SelectTable.jsx","createStream/SelectDeviceDialog/SelectDeviceTable.jsx","createStream/SelectDeviceDialog/SelectChannelTable.jsx","general/simpleTable/SimpleTableRow.jsx","general/simpleTable/SimpleTable.jsx","general/StreamDeviceCard.jsx","createStream/SwipeableSteps/StepperNextButton.jsx","createStream/SwipeableSteps/StepperBackButton.jsx","createStream/SwipeableSteps/SelectDeviceSwipeableSteps.jsx","createStream/SelectDeviceDialog/SelectDeviceDialog.jsx","createStream/cards/SelectedDeviceCard.jsx","createStream/cards/UnselectedDeviceCard.jsx","createStream/cards/CreateStreamCardToggler.jsx","createStream/CreateStreamDeviceCardWrapper.jsx","createStream/CreateStreamPageContents.jsx","createStream/CreateStreamPage.jsx","loglist/LogsTableWrapper.jsx","loglist/LogListPage.jsx","general/userForm/FormFailedDialog.jsx","api/UserManagementApi.js","general/userForm/FormConsole.jsx","admin/createUser/CreateUserFormConsole.jsx","admin/createUser/CreateUserPageContents.jsx","admin/createUser/CreateUserPage.jsx","streamDetails/StreamDetailsDeviceCard.jsx","streamDetails/DeleteStreamDialog.jsx","streamDetails/DeleteStreamDialogOpener.jsx","streamDetails/StreamStatisticsCard.jsx","streamDetails/StreamLogTableWrapper.jsx","streamDetails/cards/StreamLogCard.jsx","streamDetails/StreamDetailsPageContents.jsx","streamDetails/StreamDetailsPage.jsx","general/PathNotFoundPage.jsx","streamDetails/DetailedStreamStatistics/StatisticsOverviewCard.jsx","streamDetails/DetailedStreamStatistics/StatisticsSendingCard.jsx","streamDetails/DetailedStreamStatistics/StatisticsReceivingCard.jsx","streamDetails/DetailedStreamStatistics/StreamStatisticsPageContents.jsx","streamDetails/DetailedStreamStatistics/StreamStatisticsPage.jsx","app/AppRouter.jsx","index.jsx"],"names":["parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","component","charCodeAt","toString","slice","join","JSON","parse","saveToken","tokenPayload","expiryDate","Date","exp","Cookies","set","expires","SameSite","getAuthorizationHeader","get","headers","Authorization","isAuthenticated","isAdmin","role","ProtectedRoute","props","bind","location","this","authenticationRequired","render","authenticated","to","pathname","path","exact","React","Component","defaultProps","DeviceInfo","serial","lastCommunication","publicIpAddress","privateIpAddress","displayName","status","channels","deviceType","extras","serialNumber","publicIp","privateIp","name","StreamInfo","id","sender","receiver","outputChannel","inputChannel","date","type","time","DynamicBreadcrumb","breadcrumbs","Box","padding","Breadcrumbs","aria-label","separator","NavigateNext","fontSize","crumb","Link","NavLink","state","Typography","color","StreamButton","StyledButton","withStyles","root","background","borderRadius","border","height","margin","label","textTransform","Button","className","SwapHoriz","TitleButtons","activeClassName","Title","title","hasStreamButton","unknownErrorMessage","incorrectCredentialsMessage","credentials","a","authorizationHeader","auth","username","password","axios","process","then","response","AuthenticationUtil","authorization","catch","error","message","Promise","reject","Error","LogoutMenu","anchor","open","handleClose","handleLogout","Popper","anchorEl","transition","disablePortal","Grow","in","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","MenuItem","disabled","onClick","LogoutMenuOpener","anchorElement","createRef","handleOpen","setState","IconButton","ref","AccountCircle","current","HeaderBar","classes","makeStyles","theme","menuButton","marginRight","spacing","history","remove","push","AppBar","position","Toolbar","edge","Home","withRouter","Page","children","Container","useStyles","LoginFailedDialog","setOpen","closeDialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","paper","marginTop","display","flexDirection","alignItems","form","width","submit","LoginConsole","handleSubmit","useState","setUsername","setPassword","maxWidth","noValidate","onSubmit","event","preventDefault","TextField","variant","required","fullWidth","autoComplete","autoFocus","onChange","target","value","LoginPageContents","dialogOpen","dialogMessage","setDialogOpen","setDialogMessage","logIn","LoginPage","useHistory","GridColumn","Grid","item","xs","container","ButtonInfo","referenceObject","buttonText","SmallCardButton","button","size","DashboardCard","elevation","gutterBottom","justify","direction","DashboardButton","href","minWidth","undefined","StreamsTable","options","toolbar","headerStyle","backgroundColor","fontWeight","filtering","draggable","icons","SortArrow","ArrowDownward","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","streams","columns","TableContainer","data","getOptions","getIcons","OutputChannelInfo","port","encoder","InputChannelInfo","decoder","LogInfo","dateTime","level","StreamStatisticsInfo","window","link","send","receive","StreamStatsSendInfo","sending","packets","packetsLost","packetsDropped","packetsRetransmitted","bytes","bytesDropped","mbitRate","StreamStatsReceiveInfo","receiving","packetsBelated","bytesLost","StreamStatsLinkInfo","rtt","bandwidth","maxBandwidth","StreamStatsWindowInfo","flow","congestion","flight","convertDeviceToDataObject","databaseDevice","device","inputs","outputs","convertStatsToDataObject","databaseStats","recv","sampleInputChannels","InChannelInfo","sampleOutputChannels","OutChannelInfo","getSampleSender","StreamsTableWrapper","dataSource","handleStreamsChange","getAllStreams","sampleSenders","sampleReceivers","StatusIndicator","getStatusStyle","StreamDetailsButton","streamInfo","stream","Tooltip","Description","getStream","streamId","channel","all","deleteStream","delete","createStream","selectedReceiverID","selectedSenderID","post","inputChannelId","outputChannelId","getStreamStatistics","SimpleStreamsTableWrapper","simpleColumns","field","rowData","sorting","align","export","streamDataSource","getSimpleColumns","ActiveStreamCard","ActivityLogCard","DevicesCard","AdminPanelCard","HomePageContents","HomePage","getStatus","lastCommunicationString","lastCommunicationDate","now","getTime","getSenders","callback","senders","output","configurationInstance","SampleData","getReceivers","receivers","input","deleteDevice","deviceId","updatedName","put","configFile","FormData","append","letterSpacing","lineHeight","borderColor","boxShadow","InputBase","DeviceTableTitle","handleChange","index","Select","StyledInput","ChannelDetailsTableHead","TableRow","TableCell","ChannelDetailsTableRow","ChannelDetailsTable","Table","TableHead","TableBody","openSnackbar","SnackbarMessage","reason","stat","msg","isSuccess","Snackbar","contentprops","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","CheckCircle","action","Close","snackbar","renderDeleteButton","openDeleteDialog","renderDeleteMenuItem","DeleteDeviceButton","deleteId","cancelDelete","aria-labelledby","aria-describedby","DeviceApi","endsWith","go","ActionMenu","setAnchorElement","handleClick","currentTarget","element","aria-controls","aria-haspopup","MoreVert","Menu","keepMounted","Boolean","DevicesTable","devices","maxHeight","components","lookup","Online","Pending","Offline","detailPanel","icon","ExpandMore","openIcon","ExpandLess","tooltip","search","exportButton","Filter","FilterList","Search","ResetSearch","Clear","Export","SaveAlt","DeviceListPageContents","selected","getDevices","getTitle","handleSendersChange","handleReceiversChange","concat","DeviceListPage","EditableName","confirmEditing","deviceName","setName","cancelEditing","defaultValue","Cancel","Save","StaticName","startEditing","Edit","DeviceName","editing","startEdit","newName","oldName","forceUpdate","DeviceInfoRow","getPropertyDisplayName","createInnerTable","createTableCellContents","DeviceInfoTable","properties","property","DeviceDetailsInfoTable","DeviceInfoCard","StreamLogInfo","LogsTable","showTitle","maxBodyHeight","minBodyHeight","logs","DeviceLogTableWrapper","defaultSort","handleDeviceLogsChange","getDeviceLogs","getColumnInfo","getLogs","endpoint","resolve","log","getAllLogs","deviceSerialNumber","getStreamLogs","logEntity","DeviceLogCard","deviceLogsDataSource","DeviceChannelCard","DialogBody","DialogButtons","button1","button2","Dialog","openDialog","actionButton","isError","DeleteDeviceDialog","dialogElement","confirmDelete","DeleteDeviceDialogOpener","startIcon","UploadConfigDialog","file","handleUpload","files","uploadConfiguration","finally","Input","disableUnderline","UploadConfigDialogOpenButton","CloudUpload","DownloadConfigButton","handleDownload","filename","document","createElement","setAttribute","body","appendChild","click","removeChild","GetApp","DeviceConfigActionsCard","DeviceDetailsPageContents","DeviceDetailsPage","DetailedStreamsTableWrapper","detailedColumns","getDetailedColumns","StreamListPage","SelectTable","handleListItemClick","setIndex","selectedIndex","items","List","ListItem","ListItemText","primary","SelectDeviceTable","deviceNames","deviceList","SelectChannelTable","channelNames","deviceIndex","SimpleTableRow","alignment","SimpleTable","propertiesArr","Object","keys","propertyName","propertyPair","StreamDeviceCard","Name","Channel","StepperNextButton","isLast","handleNext","KeyboardArrowRight","StepperBackButton","isFirst","handleBack","KeyboardArrowLeft","SelectDeviceSwipeableSteps","activeStep","steps","getNextButton","getBackButton","previousStep","maxSteps","length","disableNext","channelIndex","setDeviceIndex","setChannelIndex","axis","enableMouseEvents","MobileStepper","nextButton","backButton","SelectDeviceDialog","SelectedDeviceCard","channelId","UnselectedDeviceCard","CreateStreamCardToggler","CreateStreamDeviceCardWrapper","CreateStreamPageContents","senderDeviceIndex","senderChannelIndex","receiverDeviceIndex","receiverChannelIndex","setSenders","setReceivers","setSenderDeviceIndex","setReceiverDeviceIndex","setSenderChannelIndex","setReceiverChannelIndex","recieverChannel","senderChannel","textAlign","Forward","CreateStreamPage","LogsTableWrapper","cellStyle","logsDataSource","handleLogsChange","LogListPage","FormFailedDialog","errorMessage","userRole","FormConsole","passwordErrorCondition","setPasswordError","passwordOnChange","passwordError","upperbound","lowerbound","buttonName","isValidate","passwordInputProps","passwordHelperText","inputProps","helperText","CreateUserFormConsole","maxLength","minLength","CreateUserPageContents","createUser","CreateUserPage","StreamDetailsDeviceCard","cardTitle","DeleteStreamDialog","DeleteStreamDialogOpener","StreamStatisticsCard","stats","handleStatsChange","getProperties","getButton","Time","statistics","StreamLogTableWrapper","handleStreamLogsChange","StreamLogCard","streamLogsDataSource","StreamDetailsPageContents","StreamDetailsPage","PathNotFoundPage","StatisticsOverviewCard","Flow","Congestion","Flight","Latency","Bandwidth","StatisticsSendingCard","Packets","Bytes","StatisticsReceivingCard","StreamStatisticsPageContents","StreamStatisticsPage","AppRouter","ReactDOM","getElementById"],"mappings":"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Be,EAASf,kBACL,QACAe,EAASf,kBACf,OAAO,IAAIF,EACTiB,EAASP,aACTR,EACAe,EAASwO,OAAOtP,gBAChBc,EAASwO,OAAOrP,iBAChBa,EAASwO,OAAOpP,YAChBwS,GAAU5R,EAASf,mBACnBK,EACA,UACAU,EAASwO,OAAO6D,8BAKvB/O,OAAM,YZ0CJ,SAAsB4O,GA0M3BA,EAzMwB,CACtB,IAAInT,EACF,eACA,KACA,gBACA,UACA,aACA,SACA+P,GACA,UACAtP,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,QACA+P,GACA,UACAtP,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,UACA+P,GACA,UACAtP,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,UACA+P,GACA,UACAtP,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,SACA+P,GACA,UACAtP,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,QACA+P,GACA,UACAtP,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,UACA+P,GACA,UACAtP,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,UACA+P,GACA,UACAtP,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,SACA+P,GACA,UACAtP,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,cACA,SACA+P,GACA,UACAtP,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,cACA,QACA+P,GACA,UACAtP,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,cACA,UACA+P,GACA,UACAtP,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,cACA,UACA+P,GACA,UACAtP,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,cACA,SACA+P,GACA,UACAtP,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,cACA,QACA+P,GACA,UACAtP,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,cACA,UACA+P,GACA,UACAt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","file":"static/js/main.6ebd24a4.chunk.js","sourcesContent":["import Cookies from \"js-cookie\";\n\nfunction parseJwt(token) {\n  const base64Url = token.split(\".\")[1];\n  const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  const jsonPayload = decodeURIComponent(\n    atob(base64)\n      .split(\"\")\n      .map((c) => {\n        const component = `00${c.charCodeAt(0).toString(16)}`;\n        return `%${component.slice(-2)}`;\n      })\n      .join(\"\")\n  );\n\n  return JSON.parse(jsonPayload);\n}\n\nexport function saveToken(token) {\n  const tokenPayload = parseJwt(token.split(\" \")[1]);\n  const expiryDate = new Date(tokenPayload.exp * 1000);\n  Cookies.set(\"authToken\", token, { expires: expiryDate, SameSite: \"Strict\" });\n}\n\nexport function getAuthorizationHeader() {\n  const token = Cookies.get(\"authToken\");\n  return {\n    headers: { Authorization: `${token}` }\n  };\n}\n\nexport function isAuthenticated() {\n  return !!Cookies.get(\"authToken\");\n}\n\nexport function isAdmin() {\n  const token = Cookies.get(\"authToken\");\n  const tokenPayload = parseJwt(token.split(\" \")[1]);\n  return tokenPayload.role === \"ADMIN\" || tokenPayload.role === \"SUPERUSER\";\n}\n\nexport default {\n  saveToken,\n  getAuthorizationHeader\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\n\nexport default class ProtectedRoute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.component = this.component.bind(this);\n  }\n\n  component(location) {\n    const { authenticationRequired, render } = this.props;\n    const authenticated = isAuthenticated();\n\n    if (authenticationRequired) {\n      if (authenticated) {\n        return render(location);\n      }\n\n      return <Redirect to={{ pathname: \"/Login\" }} />;\n    }\n\n    if (authenticated) {\n      return <Redirect to={{ pathname: \"/Home\" }} />;\n    }\n\n    return render(location);\n  }\n\n  render() {\n    const { path } = this.props;\n    return (\n      <Route\n        exact\n        path={path}\n        render={({ location }) => this.component(location)}\n      />\n    );\n  }\n}\n\nProtectedRoute.propTypes = {\n  path: PropTypes.string.isRequired,\n  authenticationRequired: PropTypes.bool,\n  render: PropTypes.func.isRequired\n};\n\nProtectedRoute.defaultProps = {\n  authenticationRequired: false\n};\n","export default class DeviceInfo {\n  constructor(\n    serial,\n    lastCommunication,\n    publicIpAddress,\n    privateIpAddress,\n    displayName,\n    status,\n    channels,\n    deviceType,\n    extras\n  ) {\n    this.serialNumber = serial;\n    this.lastCommunication = lastCommunication;\n    this.publicIp = publicIpAddress;\n    this.privateIp = privateIpAddress;\n    this.name = displayName;\n    this.status = status;\n    this.channels = channels;\n    this.deviceType = deviceType;\n    this.extras = extras;\n  }\n}\n","export default class StreamInfo {\n  // to be used once backend has date, status, type, and time fields\n  // constructor(id, date, sender, receiver, status, type, time, extras) {\n  //     this.id = id;\n  //     this.date = new Date(date).toString().split(\" \").slice(0, 5).join(\" \");\n  //     this.sender = sender;\n  //     this.receiver = receiver;\n  //     this.status = status;\n  //     this.type = type;\n  //     this.time = time;\n  //     this.extras = extras;\n  // }\n\n  // temporary with static fields until backend is up to snuff\n  constructor(id, sender, receiver, outputChannel, inputChannel) {\n    this.id = id;\n    this.date = \"2020-10-31T08:15:30\";\n    this.sender = sender;\n    this.receiver = receiver;\n    this.outputChannel = outputChannel;\n    this.inputChannel = inputChannel;\n    this.status = \"Online\";\n    this.type = \"Type 1\";\n    this.time = \"00:34:44\";\n  }\n}\n","import React from \"react\";\nimport { Box, Breadcrumbs, Link, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport { NavigateNext } from \"@material-ui/icons\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default function DynamicBreadcrumb(props) {\n  const { breadcrumbs } = props;\n  return (\n    <Box padding=\"2em 0em 0em\">\n      <Breadcrumbs\n        aria-label=\"breadcrumb\"\n        separator={<NavigateNext fontSize=\"medium\" />}\n      >\n        {breadcrumbs.map((crumb) => {\n          return (\n            <Link\n              component={NavLink}\n              to={{\n                pathname: crumb[1],\n                state: crumb[2] ? crumb[2] : null\n              }}\n              key={`breadcrumb ${crumb[0]}`}\n            >\n              <Typography color=\"textPrimary\">{crumb[0]}</Typography>\n            </Link>\n          );\n        })}\n      </Breadcrumbs>\n    </Box>\n  );\n}\nDynamicBreadcrumb.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.objectOf(\n          PropTypes.oneOfType([\n            PropTypes.instanceOf(DeviceInfo),\n            PropTypes.instanceOf(StreamInfo)\n          ])\n        )\n      ])\n    )\n  ).isRequired\n};\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { SwapHoriz } from \"@material-ui/icons/\";\n\nexport default function StreamButton(props) {\n  const { type } = props;\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      padding: \"0 5px\",\n      margin: \"1em\"\n    },\n    label: {\n      textTransform: \"\"\n    }\n  })(Button);\n\n  return (\n    <StyledButton type={type}>\n      <div className=\"buttonText\">\n        <SwapHoriz />\n        Stream\n      </div>\n    </StyledButton>\n  );\n}\n\nStreamButton.propTypes = {\n  type: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport StreamButton from \"./Buttons/StreamButton\";\n\nexport default function TitleButtons() {\n  return (\n    <div className=\"alignRightFloat\">\n      <NavLink\n        to=\"/Streams/New\"\n        activeClassName=\"hideLinkStyle\"\n        className=\"hideLinkStyle\"\n        exact\n      >\n        <StreamButton type=\"submit\" />\n      </NavLink>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TitleButtons from \"./TitleButtons\";\n\nexport default function Title(props) {\n  const { title, hasStreamButton } = props;\n  return (\n    <Box className=\"flexContents headerAreaUnderline\">\n      <div className=\"title\">{title}</div>\n      {hasStreamButton ? <TitleButtons /> : <></>}\n    </Box>\n  );\n}\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  hasStreamButton: PropTypes.bool.isRequired\n};\n","import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport * as AuthenticationUtil from \"./AuthenticationUtil\";\n\nexport const unknownErrorMessage =\n  \"An unknown error occurred. Please try again later.\";\nexport const incorrectCredentialsMessage =\n  \"Incorrect username and/or password. Please enter the correct credentials and try again.\";\n\nexport async function logIn(credentials) {\n  const authorizationHeader = {\n    auth: {\n      username: credentials.username,\n      password: credentials.password\n    }\n  };\n\n  return axios\n    .get(process.env.REACT_APP_TOKEN, authorizationHeader)\n    .then((response) => {\n      AuthenticationUtil.saveToken(response.headers.authorization);\n    })\n    .catch((error) => {\n      let message = unknownErrorMessage;\n      if (error.response && error.response.status === \"403\") {\n        message = incorrectCredentialsMessage;\n      }\n      return Promise.reject(new Error(message));\n    });\n}\n\nexport function logOut() {\n  Cookies.remove(\"authToken\");\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ClickAwayListener,\n  Grow,\n  MenuItem,\n  MenuList,\n  Paper,\n  Popper,\n  Typography\n} from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function LogoutMenu(props) {\n  const { anchor, open, handleClose, handleLogout } = props;\n\n  return (\n    <Popper open={open} anchorEl={anchor} transition disablePortal>\n      <Grow in={open} style={{ transformOrigin: \"center top\" }}>\n        <Paper>\n          <ClickAwayListener onClickAway={handleClose}>\n            <MenuList autoFocusItem={open} id=\"menu-list-grow\">\n              <MenuItem disabled>\n                <Typography color=\"textSecondary\">Quick Actions</Typography>\n              </MenuItem>\n              <NavLink to=\"/Home\" className=\"hideLinkStyle\">\n                <MenuItem>\n                  <Typography color=\"textPrimary\">Dashboard</Typography>\n                </MenuItem>\n              </NavLink>\n              <NavLink to=\"/Devices\" className=\"hideLinkStyle\">\n                <MenuItem>\n                  <Typography color=\"textPrimary\">My Devices</Typography>\n                </MenuItem>\n              </NavLink>\n              <MenuItem onClick={handleLogout}>\n                <Typography color=\"error\">Logout</Typography>\n              </MenuItem>\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Grow>\n    </Popper>\n  );\n}\n\nLogoutMenu.propTypes = {\n  anchor: PropTypes.node.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleLogout: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton } from \"@material-ui/core\";\n\nimport { AccountCircle } from \"@material-ui/icons/\";\nimport LogoutMenu from \"./LogoutMenu\";\n\nexport default class LogoutMenuOpener extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n\n    this.anchorElement = React.createRef();\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleOpen() {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    const { open } = this.state;\n    const { disabled, handleLogout } = this.props;\n    return (\n      <>\n        <IconButton\n          ref={this.anchorElement}\n          id=\"acctBtn\"\n          color=\"inherit\"\n          disabled={disabled}\n          onClick={this.handleOpen}\n        >\n          <AccountCircle />\n        </IconButton>\n        <LogoutMenu\n          anchor={this.anchorElement.current}\n          open={open}\n          handleLogout={handleLogout}\n          handleClose={this.handleClose}\n        />\n      </>\n    );\n  }\n}\n\nLogoutMenuOpener.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  handleLogout: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport { AppBar, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\nimport { Home } from \"@material-ui/icons/\";\n\nimport { logOut } from \"../api/AuthenticationApi\";\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\nimport LogoutMenuOpener from \"./LogoutMenu/LogoutMenuOpener\";\n\nclass HeaderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      menuButton: {\n        marginRight: theme.spacing(2)\n      }\n    }));\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout() {\n    const { history } = this.props;\n    logOut();\n    history.push(\"/Login\");\n  }\n\n  render() {\n    return (\n      <div className=\"headerBar\">\n        <AppBar position=\"static\">\n          <Toolbar className=\"darkGrey\">\n            <div className=\"headerTitle\">\n              <NavLink to=\"/Home\" className=\"headerTitle\">\n                <IconButton\n                  edge=\"start\"\n                  className={this.classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"home\"\n                >\n                  <Home />\n                </IconButton>\n              </NavLink>\n              Switchboard\n            </div>\n            <LogoutMenuOpener\n              disabled={!isAuthenticated()}\n              handleLogout={this.handleLogout}\n            />\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\nexport default withRouter(HeaderBar);\n\nHeaderBar.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"@material-ui/core\";\nimport DynamicBreadcrumb from \"./DynamicBreadcrumb\";\nimport Title from \"./Title\";\nimport HeaderBar from \"./HeaderBar\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default function Page(props) {\n  const { breadcrumbs, title, hasStreamButton, children } = props;\n  return (\n    <>\n      <HeaderBar />\n      <Container>\n        <DynamicBreadcrumb breadcrumbs={breadcrumbs} />\n        <Title title={title} hasStreamButton={hasStreamButton} />\n        {children}\n      </Container>\n    </>\n  );\n}\n\nPage.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.objectOf(\n          PropTypes.oneOfType([\n            PropTypes.instanceOf(DeviceInfo),\n            PropTypes.instanceOf(StreamInfo)\n          ])\n        )\n      ])\n    )\n  ).isRequired,\n  title: PropTypes.string.isRequired,\n  hasStreamButton: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\nPage.defaultProps = {\n  hasStreamButton: false\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    color: \"#ef5350\"\n  }\n}));\n\nexport default function LoginFailedDialog(props) {\n  const classes = useStyles();\n  const { open, setOpen, message } = props;\n\n  const closeDialog = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Dialog open={open} onClose={closeDialog}>\n        <DialogTitle id=\"login-failed-dialog-title\" className={classes.title}>\n          Login Failed\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"login-failed-dialog-description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nLoginFailedDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired\n};\n","import React, { useState } from \"react\";\nimport { Button, Container, makeStyles, TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function LoginConsole(props) {\n  const { handleSubmit } = props;\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit(username, password);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nLoginConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport LoginFailedDialog from \"./LoginFailedDialog\";\nimport LoginConsole from \"./LoginConsole\";\nimport { logIn } from \"../api/AuthenticationApi\";\n\nexport default class LoginPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogOpen: false,\n      dialogMessage: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setDialogOpen = this.setDialogOpen.bind(this);\n    this.setDialogMessage = this.setDialogMessage.bind(this);\n  }\n\n  handleSubmit(username, password) {\n    const { history } = this.props;\n    logIn({ username, password })\n      .then(() => {\n        history.push(\"/Home\");\n      })\n      .catch((error) => {\n        this.setState({\n          dialogOpen: true,\n          dialogMessage: error.message\n        });\n      });\n  }\n\n  setDialogOpen(open) {\n    this.setState({\n      dialogOpen: open\n    });\n  }\n\n  setDialogMessage(message) {\n    this.setState({\n      dialogMessage: message\n    });\n  }\n\n  render() {\n    const { dialogOpen, dialogMessage } = this.state;\n    return (\n      <>\n        <LoginConsole handleSubmit={this.handleSubmit} />\n        <LoginFailedDialog\n          open={dialogOpen}\n          setOpen={this.setDialogOpen}\n          message={dialogMessage}\n        />\n      </>\n    );\n  }\n}\n\nLoginPageContents.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Page from \"../general/Page\";\nimport LoginPageContents from \"./LoginPageContents\";\n\nexport default function LoginPage() {\n  const history = useHistory();\n\n  return (\n    <Page title=\"Login\" breadcrumbs={[]}>\n      <LoginPageContents history={history} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function GridColumn(props) {\n  const { width, spacing, children } = props;\n  return (\n    <Grid item xs={width}>\n      <Grid container spacing={spacing}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\nGridColumn.propTypes = {\n  width: PropTypes.number.isRequired,\n  spacing: PropTypes.number,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nGridColumn.defaultProps = {\n  spacing: 3\n};\n","export default class ButtonInfo {\n  constructor(pathname, referenceObject, buttonText, onClick) {\n    this.pathname = pathname;\n    this.referenceObject = referenceObject;\n    this.buttonText = buttonText;\n    this.onClick = onClick;\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport ButtonInfo from \"./ButtonInfo\";\n\nexport default function SmallCardButton(props) {\n  const {\n    button: { pathname, referenceObject, buttonText, onClick }\n  } = props;\n\n  if (onClick) {\n    return (\n      <Button variant=\"contained\" size=\"small\" onClick={onClick}>\n        {buttonText}\n      </Button>\n    );\n  }\n\n  return (\n    <NavLink\n      activeClassName=\"hideLinkStyle\"\n      className=\"hideLinkStyle\"\n      to={{\n        pathname,\n        state: referenceObject\n      }}\n    >\n      <Button variant=\"contained\" size=\"small\">\n        {buttonText}\n      </Button>\n    </NavLink>\n  );\n}\n\nSmallCardButton.propTypes = {\n  button: PropTypes.instanceOf(ButtonInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Typography, Paper, Grid, Box } from \"@material-ui/core\";\nimport SmallCardButton from \"./SmallCardButton\";\nimport ButtonInfo from \"./ButtonInfo\";\n\nexport default function DashboardCard(props) {\n  const { title, children, button } = props;\n  return (\n    <Paper className=\"dashboardCard\" elevation={2}>\n      <Typography variant=\"h5\" gutterBottom>\n        {title}\n      </Typography>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        {children}\n        {button ? (\n          <Grid item xs={12}>\n            <Box className=\"alignRightFloatPadded\">\n              <SmallCardButton button={button} />\n            </Box>\n          </Grid>\n        ) : null}\n      </Grid>\n    </Paper>\n  );\n}\n\nDashboardCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]),\n  button: PropTypes.instanceOf(ButtonInfo)\n};\n\nDashboardCard.defaultProps = {\n  children: \"\",\n  button: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Link, Button, withStyles } from \"@material-ui/core\";\n\nexport default function DashboardButton(props) {\n  const { href, children } = props;\n\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      minWidth: 100,\n      maxWidth: 200,\n      padding: \"0 5px\",\n      textTransform: \"none\"\n    }\n  })(Button);\n  return (\n    <Link color=\"inherit\" href={href}>\n      <StyledButton>{children}</StyledButton>\n    </Link>\n  );\n}\n\nDashboardButton.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  ArrowDownward,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default class StreamsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = {\n      toolbar: false,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: false,\n      draggable: false\n    };\n    this.icons = {\n      SortArrow: ArrowDownward,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  getIcons() {\n    return this.icons;\n  }\n\n  render() {\n    const { streams, columns } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer>\n            <MaterialTable\n              columns={columns}\n              data={streams}\n              options={this.getOptions()}\n              icons={this.getIcons()}\n            />\n          </TableContainer>\n        </Box>\n      </>\n    );\n  }\n}\n\nStreamsTable.propTypes = {\n  streams: PropTypes.arrayOf(PropTypes.instanceOf(StreamInfo)).isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      field: PropTypes.string.isRequired,\n      filtering: PropTypes.bool,\n      sorting: PropTypes.bool,\n      render: PropTypes.func,\n      align: PropTypes.string,\n      export: PropTypes.bool\n    })\n  ).isRequired\n};\n","export default class OutputChannelInfo {\n  constructor(id, name, port, encoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.encoder = encoder;\n  }\n}\n","export default class InputChannelInfo {\n  constructor(id, name, port, decoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.decoder = decoder;\n  }\n}\n","export default class LogInfo {\n  constructor(id, dateTime, level, message) {\n    this.id = id;\n    this.dateTime = dateTime;\n    this.level = level;\n    this.message = message;\n  }\n}\n","export default class StreamStatisticsInfo {\n  constructor(id, time, window, link, send, receive) {\n    this.id = id;\n    this.time = time;\n    this.window = window;\n    this.link = link;\n    this.send = send;\n    this.receive = receive;\n  }\n}\n","export default class StreamStatsSendInfo {\n  constructor(sending) {\n    this.packets = sending.packets;\n    this.packetsLost = sending.packetsLost;\n    this.packetsDropped = sending.packetsDropped;\n    this.packetsRetransmitted = sending.packetsRetransmitted;\n    this.bytes = sending.bytes;\n    this.bytesDropped = sending.bytesDropped;\n    this.mbitRate = sending.mbitRate;\n  }\n}\n","export default class StreamStatsReceiveInfo {\n  constructor(receiving) {\n    this.packets = receiving.packets;\n    this.packetsLost = receiving.packetsLost;\n    this.packetsDropped = receiving.packetsDropped;\n    this.packetsRetransmitted = receiving.packetsRetransmitted;\n    this.packetsBelated = receiving.packetsBelated;\n    this.bytes = receiving.bytes;\n    this.bytesLost = receiving.bytesLost;\n    this.bytesDropped = receiving.bytesDropped;\n    this.mbitRate = receiving.mbitRate;\n  }\n}\n","export default class StreamStatsLinkInfo {\n  constructor(link) {\n    this.rtt = link.rtt;\n    this.bandwidth = link.bandwidth;\n    this.maxBandwidth = link.maxBandwidth;\n  }\n}\n","export default class StreamStatsWindowInfo {\n  constructor(window) {\n    this.flow = window.flow;\n    this.congestion = window.congestion;\n    this.flight = window.flight;\n  }\n}\n","import DeviceInfo from \"./DeviceInfo\";\nimport StreamStatisticsInfo from \"./StreamStatistics/StreamStatisticsInfo\";\nimport StreamStatsSendInfo from \"./StreamStatistics/StreamStatsSendInfo\";\nimport StreamStatsReceiveInfo from \"./StreamStatistics/StreamStatsReceiveInfo\";\nimport StreamStatsLinkInfo from \"./StreamStatistics/StreamStatsLinkInfo\";\nimport StreamStatsWindowInfo from \"./StreamStatistics/StreamStatsWindowInfo\";\n\nexport function convertDeviceToDataObject(databaseDevice) {\n  return new DeviceInfo(\n    databaseDevice.serialNumber,\n    databaseDevice.lastCommunication,\n    databaseDevice.device.publicIpAddress,\n    databaseDevice.device.privateIpAddress,\n    databaseDevice.device.displayName,\n    databaseDevice.device.status,\n    databaseDevice.inputs || databaseDevice.outputs,\n    databaseDevice.inputs ? \"receiver\" : \"sender\"\n  );\n}\n\nexport function convertStatsToDataObject(databaseStats) {\n  return new StreamStatisticsInfo(\n    databaseStats.id,\n    databaseStats.time,\n    new StreamStatsWindowInfo(databaseStats.window),\n    new StreamStatsLinkInfo(databaseStats.link),\n    new StreamStatsSendInfo(databaseStats.send),\n    new StreamStatsReceiveInfo(databaseStats.recv)\n  );\n}\n\nexport function convertToServiceObject(deviceInfo) {\n  const serviceObject = {\n    serialNumber: deviceInfo.serialNumber,\n    lastCommunication: deviceInfo.lastCommunication,\n    device: {\n      serialNumber: deviceInfo.serialNumber,\n      publicIpAddress: deviceInfo.publicIp,\n      privateIpAddress: deviceInfo.privateIp,\n      displayName: deviceInfo.name,\n      status: deviceInfo.status\n    }\n  };\n  if (deviceInfo.deviceType === \"sender\") {\n    serviceObject.outputs = deviceInfo.channels;\n  } else {\n    serviceObject.inputs = deviceInfo.channels;\n  }\n  return serviceObject;\n}\n","import DeviceInfo from \"../model/DeviceInfo\";\nimport OutChannelInfo from \"../model/OutputChannelInfo\";\nimport InChannelInfo from \"../model/InputChannelInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport LogInfo from \"../model/LogInfo\";\nimport { convertStatsToDataObject } from \"../model/ConvertDataFormat\";\n\nconst extras = [\"Additional Device details go here\"];\nconst sampleInputChannels = [\n  new InChannelInfo(1, \"Input ch 1\", 500, null),\n  new InChannelInfo(2, \"Input ch 2\", 456, null),\n  new InChannelInfo(3, \"Input ch 3\", 800, null)\n];\nconst sampleOutputChannels = [\n  new OutChannelInfo(1, \"Output ch 1\", 500, null),\n  new OutChannelInfo(2, \"Output ch 2\", 456, null),\n  new OutChannelInfo(3, \"Output ch 3\", 800, null)\n];\n\nexport function getSenders(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:30:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 3\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:40:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 4\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:50:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 5\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:60:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 6\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:70:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 7\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:80:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 8\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:90:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 9\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n\n  callback(sampleSenders);\n}\n\nexport function getSampleSender() {\n  return new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n}\n\nexport function getReceivers(callback) {\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:03:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 3\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:04:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 4\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:05:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 5\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:06:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 6\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:07:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 7\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:08:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 8\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:09:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 9\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:11:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 11\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:21:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 12\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:31:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 13\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:41:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 14\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:51:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 15\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:61:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 16\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:71:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 17\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:81:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 18\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:91:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 19\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  callback(sampleReceivers);\n}\n\nexport function getAllStreams() {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  return [\n    new StreamInfo(1, sampleSenders[0], sampleReceivers[0], 1, 2),\n    new StreamInfo(2, sampleSenders[1], sampleReceivers[1], 3, 4),\n    new StreamInfo(3, sampleSenders[1], sampleReceivers[0], 5, 6)\n  ];\n}\n\nexport function getSampleStream() {\n  const sampleSender = new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n\n  const sampleReceiver = new DeviceInfo(\n    \"1:22:333:989\",\n    null,\n    \"145:396\",\n    \"Receiver 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"decoder\",\n    extras\n  );\n\n  return new StreamInfo(\n    1,\n    sampleSender,\n    sampleReceiver,\n    sampleSender.channels[0].port,\n    sampleReceiver.channels[1].port\n  );\n}\n\nexport function getAllLogs(callback) {\n  const dates = [\n    \"2020-10-31T15:53:23\",\n    \"2020-11-13T12:36:30\",\n    \"2020-11-13T08:24:30\"\n  ];\n\n  const sampleLogs = [\n    new LogInfo(1, dates[0], \"Info\", \"Log 1 info\"),\n    new LogInfo(2, dates[1], \"Info\", \"Log 2 info\"),\n    new LogInfo(3, dates[2], \"Info\", \"Log 3 info\")\n  ];\n\n  callback(sampleLogs);\n}\n\nexport function getSampleStreamStats() {\n  const sampleDbStreamStats = {\n    id: 1,\n    time: 2,\n    window: {\n      flow: 31,\n      congestion: 32,\n      flight: 33\n    },\n    link: {\n      rtt: 41,\n      bandwidth: 42,\n      maxBandwidth: 43\n    },\n    send: {\n      packets: 51,\n      packetsLost: 52,\n      packetsDropped: 53,\n      packetsRetransmitted: 54,\n      bytes: 55,\n      bytesDropped: 56,\n      mbitRate: 57\n    },\n    recv: {\n      packets: 61,\n      packetsLost: 62,\n      packetsDropped: 63,\n      packetsRetransmitted: 64,\n      packetsBelated: 65,\n      bytes: 66,\n      bytesLost: 67,\n      bytesDropped: 68,\n      mbitRate: 69\n    }\n  };\n\n  return convertStatsToDataObject(sampleDbStreamStats);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StreamsTable from \"./StreamsTable\";\nimport { getAllStreams } from \"../api/SampleData\";\n\nexport default class StreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: []\n    };\n    this.dataSource = props.dataSource;\n    this.handleStreamsChange = this.handleStreamsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource\n      .getAllStreams()\n      .then(this.handleStreamsChange)\n      .catch(() => {\n        this.handleStreamsChange(getAllStreams());\n      });\n  }\n\n  handleStreamsChange(streams) {\n    this.setState({\n      streams\n    });\n  }\n\n  render() {\n    const { streams } = this.state;\n    const { columns } = this.props;\n    return <StreamsTable streams={streams} columns={columns} />;\n  }\n}\n\nStreamsTableWrapper.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      field: PropTypes.string.isRequired,\n      filtering: PropTypes.bool,\n      sorting: PropTypes.bool,\n      render: PropTypes.func,\n      align: PropTypes.string,\n      export: PropTypes.bool\n    })\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class StatusIndicator extends React.Component {\n  getStatusStyle() {\n    const { status } = this.props;\n    switch (status) {\n      case \"Online\":\n        return \"green statusIndicatorBody statusTextOnline \";\n      case \"Pending\":\n        return \"yellow statusIndicatorBody statusTextOnline\";\n      case \"Error\":\n        return \"red statusIndicatorBody statusTextOnline\";\n      default:\n        return \"lightGrey statusIndicatorBody statusTextOffline\";\n    }\n  }\n\n  render() {\n    const { status } = this.props;\n    return <div className={this.getStatusStyle()}>{status}</div>;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.oneOf([\"Online\", \"Offline\", \"Error\", \"Pending\"]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { Description } from \"@material-ui/icons\";\nimport { NavLink } from \"react-router-dom\";\n\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default function StreamDetailsButton(props) {\n  const { streamInfo } = props;\n\n  return (\n    <>\n      <NavLink\n        to={{\n          pathname: `/Streams/Details/${streamInfo.id}`,\n          state: { stream: streamInfo }\n        }}\n      >\n        <Tooltip title=\"View Stream Details\">\n          <IconButton>\n            <Description />\n          </IconButton>\n        </Tooltip>\n      </NavLink>\n    </>\n  );\n}\n\nStreamDetailsButton.propTypes = {\n  streamInfo: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","import axios from \"axios\";\nimport {\n  convertDeviceToDataObject,\n  convertStatsToDataObject\n} from \"../model/ConvertDataFormat\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nexport async function getStream(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAM}/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      const stream = response.data;\n      return new StreamInfo(\n        stream.id,\n        convertDeviceToDataObject(stream.outputChannel.encoder),\n        convertDeviceToDataObject(stream.inputChannel.decoder),\n        stream.outputChannel.channel.port,\n        stream.inputChannel.channel.port\n      );\n    });\n}\n\nexport async function getAllStreams() {\n  return axios\n    .get(process.env.REACT_APP_STREAM, getAuthorizationHeader())\n    .then((streams) => {\n      return Promise.all(\n        streams.data.map((streamId) => {\n          return getStream(streamId);\n        })\n      );\n    });\n}\n\nexport async function deleteStream(streamId) {\n  return axios.delete(\n    `${process.env.REACT_APP_STREAM}/${streamId}`,\n    getAuthorizationHeader()\n  );\n}\n\nexport async function createStream(selectedReceiverID, selectedSenderID) {\n  return axios.post(\n    process.env.REACT_APP_STREAM,\n    {\n      inputChannelId: selectedReceiverID,\n      outputChannelId: selectedSenderID\n    },\n    getAuthorizationHeader()\n  );\n}\n\nexport async function getStreamStatistics(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAM}/statistics/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      const stats = response.data;\n      return convertStatsToDataObject(stats);\n    });\n}\n","import React from \"react\";\nimport StreamsTableWrapper from \"./StreamsTableWrapper\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport StreamDetailsButton from \"./StreamDetailsButton\";\nimport * as streamDataSource from \"../api/StreamApi\";\n\nexport default class SimpleStreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.simpleColumns = [\n      {\n        title: \"Sender\",\n        field: \"sender.name\"\n      },\n      {\n        title: \"Receiver\",\n        field: \"receiver.name\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        }\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <StreamDetailsButton streamInfo={rowData} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n  }\n\n  getSimpleColumns() {\n    return this.simpleColumns;\n  }\n\n  render() {\n    return (\n      <StreamsTableWrapper\n        dataSource={streamDataSource}\n        columns={this.getSimpleColumns()}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\nimport SimpleStreamsTableWrapper from \"../streamlist/SimpleStreamsTableWrapper\";\n\nexport default function ActiveStreamCard() {\n  return (\n    <DashboardCard title=\"Active Streams\" style={{ height: \"100%\" }}>\n      <Grid item xs={12}>\n        <SimpleStreamsTableWrapper />\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Streams\">See More</DashBoardButton>\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Streams/New\">Start Stream</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function ActivityLogCard() {\n  return (\n    <DashboardCard title=\"Activity Logs\">\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Logs\">View All</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function DevicesCard() {\n  return (\n    <DashboardCard title=\"Devices\">\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Devices\">View Senders</DashBoardButton>\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Devices\">View Receivers</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function AdminPanelCard() {\n  return (\n    <DashboardCard title=\"Admin Panel\">\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Admin\">View Users</DashBoardButton>\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Admin/New\">Create a User</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport GridColumn from \"../general/dashboard/GridColumn\";\nimport ActiveStreamCard from \"./ActiveStreamCard\";\nimport ActivityLogCard from \"./ActivityLogCard\";\nimport DevicesCard from \"./DevicesCard\";\nimport AdminPanelCard from \"./AdminPanelCard\";\n\nimport { isAdmin } from \"../api/AuthenticationUtil\";\n\nexport default function HomePageContents() {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"stretch\"\n      direction=\"row\"\n      spacing={3}\n    >\n      <Grid item xs={6}>\n        <Grid style={{ height: \"100%\" }}>\n          <ActiveStreamCard />\n        </Grid>\n      </Grid>\n      <GridColumn width={6}>\n        <Grid item xs={12}>\n          <DevicesCard />\n        </Grid>\n        <Grid item xs={12}>\n          <ActivityLogCard />\n        </Grid>\n        {isAdmin() ? (\n          <Grid item xs={12}>\n            <AdminPanelCard />\n          </Grid>\n        ) : (\n          <div />\n        )}\n      </GridColumn>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport HomePageContents from \"./HomePageContents\";\n\nexport default function HomePage() {\n  return (\n    <Page title=\"Dashboard\" breadcrumbs={[[\"Home\", \"\"]]}>\n      <HomePageContents />\n    </Page>\n  );\n}\n","import axios from \"axios\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport * as SampleData from \"./SampleData\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nfunction getStatus(lastCommunicationString) {\n  if (!lastCommunicationString) {\n    return \"Pending\";\n  }\n\n  const lastCommunicationDate = new Date(`${lastCommunicationString}Z`);\n  const diff = Date.now() - lastCommunicationDate.getTime();\n  const tenMinutes = 10 * 60 * 1000;\n  if (diff < tenMinutes) {\n    return \"Online\";\n  }\n  return \"Offline\";\n}\n\nexport function getSenders(callback) {\n  axios\n    .get(process.env.REACT_APP_ENCODER, getAuthorizationHeader())\n    .then((senders) => {\n      callback(\n        senders.data.map((sender) => {\n          let channels = [];\n          if (sender.output) {\n            channels = sender.output.map((output) => {\n              return new OutputChannelInfo(\n                output.id,\n                output.channel.name,\n                output.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            sender.lastCommunication == null\n              ? \"Never\"\n              : sender.lastCommunication;\n          return new DeviceInfo(\n            sender.serialNumber,\n            lastCommunication,\n            sender.device.publicIpAddress,\n            sender.device.privateIpAddress,\n            sender.device.displayName,\n            getStatus(sender.lastCommunication),\n            channels,\n            \"encoder\",\n            sender.device.configurationInstance\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getSenders(callback);\n    });\n}\n\nexport function getReceivers(callback) {\n  axios\n    .get(process.env.REACT_APP_DECODER, getAuthorizationHeader())\n    .then((receivers) => {\n      callback(\n        receivers.data.map((receiver) => {\n          let channels = [];\n          if (receiver.input) {\n            channels = receiver.input.map((input) => {\n              return new InputChannelInfo(\n                input.id,\n                input.channel.name,\n                input.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            receiver.lastCommunication == null\n              ? \"Never\"\n              : receiver.lastCommunication;\n          return new DeviceInfo(\n            receiver.serialNumber,\n            lastCommunication,\n            receiver.device.publicIpAddress,\n            receiver.device.privateIpAddress,\n            receiver.device.displayName,\n            getStatus(receiver.lastCommunication),\n            channels,\n            \"decoder\",\n            receiver.device.configurationInstance\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getReceivers(callback);\n    });\n}\n\nexport function deleteDevice(deviceId) {\n  return axios.delete(\n    `${process.env.REACT_APP_DEVICE}/${deviceId}`,\n    getAuthorizationHeader()\n  );\n}\n\nexport async function updateDeviceName(deviceId, updatedName) {\n  return axios.put(\n    process.env.REACT_APP_DEVICE,\n    {\n      serialNumber: deviceId,\n      displayName: updatedName\n    },\n    getAuthorizationHeader()\n  );\n}\n\n// https://programmingwithmosh.com/javascript/react-file-upload-proper-server-side-nodejs-easy/\nexport async function uploadConfiguration(deviceId, configFile) {\n  const data = new FormData();\n  data.append(\"configuration\", configFile);\n  const headers = getAuthorizationHeader();\n  // eslint-disable-next-line\n  headers.headers[\"Content-Type\"] = `multipart/form-data; boundary=${data[\"_boundary\"]}` ;\n  return axios.put(\n    `${process.env.REACT_APP_DEVICE}/config/${deviceId}`,\n    data,\n    headers\n  );\n}\n","import { InputBase, withStyles } from \"@material-ui/core\";\n\nexport default withStyles({\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    fontWeight: 500,\n    letterSpacing: \"0.0075em\",\n    lineHeight: \"1.6\",\n    fontSize: \"1.25rem\",\n    padding: \"10px 26px 10px 12px\",\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  }\n})(InputBase);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MenuItem, Select } from \"@material-ui/core\";\nimport StyledInput from \"./StyledInput\";\n\nexport default class DeviceTableTitle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { handleChange } = this.props;\n    handleChange(event.target.value);\n  }\n\n  render() {\n    const { index } = this.props;\n    return (\n      <Select\n        id=\"device-table-title-select\"\n        value={index}\n        onChange={this.handleChange}\n        input={<StyledInput />}\n      >\n        <MenuItem value={0}>All Devices</MenuItem>\n        <MenuItem value={1}>Senders</MenuItem>\n        <MenuItem value={2}>Receivers</MenuItem>\n      </Select>\n    );\n  }\n}\n\nDeviceTableTitle.propTypes = {\n  index: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function ChannelDetailsTableHead() {\n  return (\n    <TableRow>\n      <TableCell className=\"lightGrey\">ID</TableCell>\n      <TableCell className=\"lightGrey\">Name</TableCell>\n      <TableCell className=\"lightGrey\">Port</TableCell>\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\n\nexport default function ChannelDetailsTableRow(props) {\n  const {\n    channel: { id, name, port }\n  } = props;\n  return (\n    <TableRow>\n      <TableCell>{id}</TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{port}</TableCell>\n    </TableRow>\n  );\n}\nChannelDetailsTableRow.propTypes = {\n  channel: PropTypes.oneOfType([\n    PropTypes.instanceOf(InputChannelInfo),\n    PropTypes.instanceOf(OutputChannelInfo)\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Table, TableBody, TableHead } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport ChannelDetailsTableHead from \"./ChannelDetailsTableHead\";\nimport ChannelDetailsTableRow from \"./ChannelDetailsTableRow\";\n\nexport default function ChannelDetailsTable(props) {\n  const { channels } = props;\n  return (\n    <Table className=\"flexContents\">\n      <TableHead>\n        <ChannelDetailsTableHead />\n      </TableHead>\n      <TableBody>\n        {channels.map((channel) => {\n          return (\n            <ChannelDetailsTableRow channel={channel} key={channel.name} />\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\nChannelDetailsTable.propTypes = {\n  channels: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.instanceOf(InputChannelInfo),\n      PropTypes.instanceOf(OutputChannelInfo)\n    ])\n  ).isRequired\n};\n","import React from \"react\";\nimport { Snackbar, SnackbarContent, IconButton, Box } from \"@material-ui/core\";\nimport { CheckCircle, Error, Close } from \"@material-ui/icons\";\n\nlet openSnackbar;\n\nexport default class SnackbarMessage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      status: \"\",\n      message: \"\"\n    };\n    this.openSnackbar = this.openSnackbar.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  componentDidMount() {\n    openSnackbar = this.openSnackbar;\n  }\n\n  handleClose(event, reason) {\n    if (reason !== \"clickaway\") {\n      this.setState({\n        open: false\n      });\n    }\n  }\n\n  openSnackbar(stat, msg) {\n    this.setState({\n      open: true,\n      status: stat,\n      message: msg\n    });\n  }\n\n  render() {\n    const { open, status, message } = this.state;\n    const isSuccess = status === \"success\";\n    return (\n      <>\n        <Snackbar\n          contentprops={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={open}\n          autoHideDuration={3000}\n          onClose={this.handleClose}\n        >\n          <SnackbarContent\n            style={{\n              backgroundColor: isSuccess ? \"#4caf50\" : \"#f44336\"\n            }}\n            // prettier-ignore\n            message={(\n              <Box id='message-id' className=\"snackMessage\">\n                {isSuccess ? \n                  <CheckCircle className=\"iconPadding\" /> : \n                  <Error className=\"iconPadding\" />}\n                {message}\n              </Box>\n            )}\n            action={[\n              <IconButton\n                key=\"close\"\n                aria-label=\"Close\"\n                color=\"inherit\"\n                onClick={this.handleClose}\n              >\n                <Close />\n              </IconButton>\n            ]}\n          />\n        </Snackbar>\n      </>\n    );\n  }\n}\n\nexport function snackbar(status, message) {\n  openSnackbar(status, message);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { MenuItem } from \"@material-ui/core\";\n\nimport * as DeviceApi from \"../../api/DeviceApi\";\nimport { snackbar } from \"../SnackbarMessage\";\n\nfunction renderDeleteButton(openDeleteDialog) {\n  return (\n    <Button\n      id=\"deleteBtn\"\n      variant=\"outlined\"\n      color=\"secondary\"\n      onClick={openDeleteDialog}\n    >\n      Delete\n    </Button>\n  );\n}\n\nfunction renderDeleteMenuItem(openDeleteDialog) {\n  return (\n    <MenuItem onClick={openDeleteDialog}>\n      <span className=\"warningText\">Delete</span>\n    </MenuItem>\n  );\n}\n\nexport default function DeleteDeviceButton(props) {\n  const { button, deleteId } = props;\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n\n  const openDeleteDialog = () => {\n    return setOpen(true);\n  };\n  const cancelDelete = () => {\n    return setOpen(false);\n  };\n\n  const confirmDelete = () => {\n    DeviceApi.deleteDevice(deleteId)\n      .then(() => {\n        if (history.location.pathname.endsWith(\"Devices\")) {\n          history.go(0);\n        } else {\n          history.push(\"/Devices\");\n        }\n      })\n      .catch(() => {\n        snackbar(\n          \"error\",\n          `Could not delete device (Serial Number: ${deleteId})`\n        );\n      });\n    return setOpen(false);\n  };\n\n  return (\n    <>\n      {button\n        ? renderDeleteButton(openDeleteDialog)\n        : renderDeleteMenuItem(openDeleteDialog)}\n      <Dialog\n        open={open}\n        onClose={cancelDelete}\n        aria-labelledby=\"delete-stream-dialog-title\"\n        aria-describedby=\"delete-stream-dialog-description\"\n        id=\"delete-stream-dialog\"\n      >\n        <DialogTitle id=\"delete-stream-dialog-title\">\n          Confirm Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"delete-stream-dialog-description\">\n            Are you sure you want to delete this device?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button id=\"cancelDeleteBtn\" onClick={cancelDelete} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            id=\"confirmDeleteBtn\"\n            onClick={confirmDelete}\n            color=\"secondary\"\n            autoFocus\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nDeleteDeviceButton.propTypes = {\n  button: PropTypes.bool.isRequired,\n  deleteId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { MoreVert } from \"@material-ui/icons/\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeleteDeviceButton from \"../general/Buttons/DeleteDeviceButton\";\n\nexport default class ActionMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorElement: null\n    };\n\n    this.setAnchorElement = this.setAnchorElement.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick(event) {\n    this.setAnchorElement(event.currentTarget);\n  }\n\n  handleClose() {\n    this.setAnchorElement(null);\n  }\n\n  setAnchorElement(element) {\n    this.setState({\n      anchorElement: element\n    });\n  }\n\n  render() {\n    const { anchorElement } = this.state;\n    const { device } = this.props;\n    return (\n      <>\n        <IconButton\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n          size=\"small\"\n        >\n          <MoreVert />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorElement}\n          keepMounted\n          open={Boolean(anchorElement)}\n          onClose={this.handleClose}\n          anchorOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n          transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        >\n          <MenuItem onClick={this.handleClose}>\n            <NavLink\n              to={{\n                pathname: `/Devices/Details/${device.serialNumber}`,\n                state: { device }\n              }}\n              className=\"hideLinkStyle\"\n            >\n              View Details\n            </NavLink>\n          </MenuItem>\n          <DeleteDeviceButton button={false} deleteId={device.serialNumber} />\n        </Menu>\n      </>\n    );\n  }\n}\n\nActionMenu.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  FilterList,\n  Search,\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable, { MTableToolbar } from \"material-table\";\n\nimport ChannelDetailsTable from \"./ChannelDetailsTable\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport ActionMenu from \"./ActionMenu\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nfunction getComponents() {\n  return {\n    /*  eslint-disable react/jsx-props-no-spreading */\n    Toolbar: function Components(props) {\n      return (\n        <div className=\"lightestGrey\">\n          <MTableToolbar {...props} />\n        </div>\n      );\n    }\n  };\n}\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"Name\",\n      field: \"name\"\n    },\n    {\n      title: \"Serial Number\",\n      field: \"serialNumber\"\n    },\n    {\n      title: \"Status\",\n      field: \"status\",\n      render: function Status(rowData) {\n        return <StatusIndicator status={rowData.status} />;\n      },\n      lookup: {\n        Online: \"Online\",\n        Pending: \"Pending\",\n        Error: \"Error\",\n        Offline: \"Offline\"\n      }\n    },\n    {\n      title: \"Private IP Address\",\n      field: \"privateIp\"\n    },\n    {\n      title: \"Public IP Address\",\n      field: \"publicIp\"\n    },\n    {\n      title: \"Actions\",\n      field: \"action\",\n      filtering: false,\n      sorting: false,\n      render: function Actions(rowData) {\n        return <ActionMenu device={rowData} />;\n      },\n      align: \"center\",\n      export: false\n    }\n  ];\n}\n\nfunction getDetailPanel() {\n  return [\n    {\n      icon: ExpandMore,\n      openIcon: ExpandLess,\n      tooltip: \"Show Device Details\",\n      render: function DetailPanel(rowData) {\n        return (\n          <div className=\"lightestGrey\" style={{ padding: \"1.5em\" }}>\n            <Typography variant=\"h6\">Channels</Typography>\n            <ChannelDetailsTable channels={rowData.channels} />\n          </div>\n        );\n      }\n    }\n  ];\n}\n\nfunction getOptions() {\n  return {\n    toolbar: true,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: true,\n    draggable: false\n  };\n}\n\nfunction getIcons() {\n  return {\n    Filter: FilterList,\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function DevicesTable(props) {\n  const { title, devices } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer style={{ maxHeight: 570 }}>\n          <MaterialTable\n            title={title}\n            components={getComponents()}\n            columns={getColumnInfo()}\n            data={devices}\n            detailPanel={getDetailPanel()}\n            options={getOptions()}\n            icons={getIcons()}\n          />\n        </TableContainer>\n      </Box>\n    </>\n  );\n}\n\nDevicesTable.propTypes = {\n  title: PropTypes.node.isRequired,\n  devices: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\n\nimport { getSenders, getReceivers } from \"../api/DeviceApi\";\nimport DeviceTableTitle from \"./DeviceTableTitle\";\nimport DevicesTable from \"./DevicesTable\";\n\nexport default class DeviceListPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 0,\n      senders: [],\n      receivers: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.getDevices = this.getDevices.bind(this);\n    this.getTitle = this.getTitle.bind(this);\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n  }\n\n  componentDidMount() {\n    getSenders(this.handleSendersChange);\n    getReceivers(this.handleReceiversChange);\n  }\n\n  handleChange(value) {\n    this.setState({\n      selected: value\n    });\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  getDevices() {\n    const { receivers, senders, selected } = this.state;\n    switch (selected) {\n      case 1:\n        return senders;\n      case 2:\n        return receivers;\n      default:\n        return senders.concat(receivers);\n    }\n  }\n\n  getTitle() {\n    const { selected } = this.state;\n    return (\n      <DeviceTableTitle index={selected} handleChange={this.handleChange} />\n    );\n  }\n\n  render() {\n    return <DevicesTable devices={this.getDevices()} title={this.getTitle()} />;\n  }\n}\n","import React from \"react\";\n\nimport Page from \"../general/Page\";\nimport DeviceListPageContents from \"./DeviceListPageContents\";\n\nexport default function DeviceListPage() {\n  const breadcrumb = [\n    [\"Home\", \"/Home\"],\n    [\"My Devices\", \"/Devices\"]\n  ];\n  return (\n    <Page title=\"My Devices\" breadcrumbs={breadcrumb} hasStreamButton>\n      <DeviceListPageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\nimport { Cancel, Save } from \"@material-ui/icons\";\n\nexport default function EditableName(props) {\n  const { confirmEditing, deviceName, setName, cancelEditing } = props;\n  return (\n    <form className=\"deviceNameEditForm\" onSubmit={confirmEditing}>\n      <Box className=\"flexContents\">\n        <TextField\n          id=\"deviceName\"\n          name=\"deviceName\"\n          required\n          defaultValue={deviceName}\n          onChange={(event) => setName(event.target.value)}\n        />\n        <div className=\"alignRightFloat\">\n          <IconButton id=\"cancelEditBtn\" size=\"small\" onClick={cancelEditing}>\n            <Cancel />\n          </IconButton>\n\n          <IconButton id=\"confirmEditBtn\" type=\"submit\" color=\"primary\">\n            <Save />\n          </IconButton>\n        </div>\n      </Box>\n    </form>\n  );\n}\n\nEditableName.propTypes = {\n  confirmEditing: PropTypes.func.isRequired,\n  deviceName: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired,\n  cancelEditing: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Edit } from \"@material-ui/icons\";\n\nexport default function StaticName(props) {\n  const { deviceName, startEditing } = props;\n  return (\n    <>\n      {deviceName}\n      <div className=\"alignRightFloat\">\n        <IconButton\n          id=\"editBtn\"\n          size=\"small\"\n          color=\"action\"\n          onClick={startEditing}\n        >\n          <Edit />\n        </IconButton>\n      </div>\n    </>\n  );\n}\n\nStaticName.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  startEditing: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport * as DeviceApi from \"../api/DeviceApi\";\nimport EditableName from \"./EditableName\";\nimport StaticName from \"./StaticName\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class DeviceName extends React.Component {\n  constructor(props) {\n    super(props);\n    this.deviceName = props.deviceName;\n    this.deviceId = props.deviceId;\n    this.state = {\n      editing: false,\n      name: this.deviceName\n    };\n\n    this.startEdit = this.startEdit.bind(this);\n    this.cancelEditing = this.cancelEditing.bind(this);\n    this.confirmEditing = this.confirmEditing.bind(this);\n    this.setName = this.setName.bind(this);\n  }\n\n  setName(updatedName) {\n    this.setState({ name: updatedName });\n  }\n\n  startEdit() {\n    this.setState({ editing: true });\n  }\n\n  cancelEditing() {\n    this.setState({ name: this.deviceName });\n    this.setState({ editing: false });\n  }\n\n  confirmEditing(event) {\n    event.preventDefault();\n    const { name: newName } = this.state;\n\n    const oldName = this.deviceName;\n    this.deviceName = newName;\n    this.setState({ editing: false });\n\n    DeviceApi.updateDeviceName(this.deviceId, newName)\n      .then(() => {\n        snackbar(\"success\", `Device successfully renamed to ${newName}`);\n      })\n      .catch(() => {\n        // If update was unsuccessful, return to the old name\n        this.deviceName = oldName;\n        this.forceUpdate();\n        snackbar(\"error\", `Failed to rename device`);\n      });\n  }\n\n  render() {\n    const { editing } = this.state;\n    return (\n      <>\n        {editing ? (\n          <EditableName\n            confirmEditing={this.confirmEditing}\n            deviceName={this.deviceName}\n            setName={this.setName}\n            cancelEditing={this.cancelEditing}\n          />\n        ) : (\n          <StaticName\n            deviceName={this.deviceName}\n            startEditing={this.startEdit}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nDeviceName.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  deviceId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\n\nimport { TableContainer, TableCell, TableRow } from \"@material-ui/core\";\nimport ChannelDetailsTable from \"../../devicelist/ChannelDetailsTable\";\nimport InputChannelInfo from \"../../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../../model/OutputChannelInfo\";\nimport StatusIndicator from \"../../general/StatusIndicator\";\nimport DeviceName from \"../DeviceName\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class DeviceInfoRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getPropertyDisplayName = this.getPropertyDisplayName.bind(this);\n    this.createInnerTable = this.createInnerTable.bind(this);\n    this.createTableCellContents = this.createTableCellContents.bind(this);\n  }\n\n  getPropertyDisplayName() {\n    const { name } = this.props;\n    switch (name) {\n      case \"serialNumber\":\n        return \"Serial Number\";\n      case \"lastCommunication\":\n        return \"Last Communication\";\n      case \"privateIp\":\n        return \"Private IP Address\";\n      case \"publicIp\":\n        return \"Public IP Address\";\n      case \"name\":\n        return \"Name\";\n      case \"status\":\n        return \"Status\";\n      case \"channels\":\n        return \"Channels\";\n      default:\n        return \"Additional Info\";\n    }\n  }\n\n  createInnerTable() {\n    const { value } = this.props;\n    return (\n      <TableContainer>\n        <ChannelDetailsTable channels={value} />\n      </TableContainer>\n    );\n  }\n\n  createTableCellContents() {\n    const {\n      name,\n      value,\n      device: { serialNumber }\n    } = this.props;\n    switch (name) {\n      case \"channels\":\n        return this.createInnerTable();\n      case \"status\":\n        return <StatusIndicator status={value} />;\n      case \"name\":\n        return <DeviceName deviceName={value} deviceId={serialNumber} />;\n      default:\n        return value;\n    }\n  }\n\n  render() {\n    return (\n      <TableRow>\n        <TableCell>{this.getPropertyDisplayName()}</TableCell>\n        <TableCell align=\"center\">{this.createTableCellContents()}</TableCell>\n      </TableRow>\n    );\n  }\n}\n\nDeviceInfoRow.propTypes = {\n  name: Proptypes.string.isRequired,\n  value: Proptypes.oneOfType([\n    Proptypes.string,\n    Proptypes.arrayOf(\n      Proptypes.oneOfType([InputChannelInfo, OutputChannelInfo])\n    )\n  ]).isRequired,\n  device: Proptypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { TableContainer, Table, TableBody } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfoRow from \"./DeviceInfoRow\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function DeviceInfoTable(props) {\n  const { device, properties } = props;\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          {properties.map((property) => (\n            <DeviceInfoRow\n              name={property}\n              value={device[property]}\n              device={device}\n              key={`device_${property}`}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nDeviceInfoTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  properties: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfoTable from \"./DeviceInfoTable/DeviceInfoTable\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function DeviceDetailsInfoTable(props) {\n  const { device } = props;\n  const properties = [\n    \"name\",\n    \"serialNumber\",\n    \"status\",\n    \"publicIp\",\n    \"privateIp\"\n  ];\n  return <DeviceInfoTable device={device} properties={properties} />;\n}\n\nDeviceDetailsInfoTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport DeviceDetailsInfoTable from \"../DeviceDetailsInfoTable\";\n\nexport default function DeviceInfoCard(props) {\n  const { device } = props;\n\n  return (\n    <DashboardCard title=\"Device Info\">\n      <Grid item xs={12}>\n        <DeviceDetailsInfoTable device={device} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceInfoCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","export default class StreamLogInfo {\n  constructor(dateTime, level, message) {\n    this.dateTime = dateTime;\n    this.level = level;\n    this.message = message;\n  }\n}\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {\n  Search,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\nimport MaterialTable from \"material-table\";\nimport LogInfo from \"../model/LogInfo\";\nimport StreamLogInfo from \"../model/StreamLogInfo\";\n\nexport default class LogsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = {\n      toolbar: true,\n      showTitle: false,\n      search: true,\n      exportButton: true,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: false,\n      draggable: false,\n      maxBodyHeight: \"auto\",\n      minBodyHeight: \"auto\"\n    };\n    this.icons = {\n      Search,\n      ResetSearch: Clear,\n      SortArrow: ArrowDownward,\n      Export: SaveAlt,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  getIcons() {\n    return this.icons;\n  }\n\n  render() {\n    const { columns, logs } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer>\n            <MaterialTable\n              columns={columns}\n              data={logs}\n              options={this.getOptions()}\n              icons={this.getIcons()}\n            />\n          </TableContainer>\n        </Box>\n      </>\n    );\n  }\n}\n\nLogsTable.propTypes = {\n  logs: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.instanceOf(LogInfo)),\n    PropTypes.arrayOf(PropTypes.instanceOf(StreamLogInfo))\n  ]).isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      field: PropTypes.string.isRequired,\n      sorting: PropTypes.bool,\n      cellStyle: PropTypes.shape({\n        width: PropTypes.string\n      })\n    })\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport LogsTable from \"../loglist/LogsTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class DeviceLogTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.columns = [\n      {\n        title: \"ID\",\n        field: \"id\"\n      },\n      {\n        title: \"Date\",\n        field: \"dateTime\",\n        defaultSort: \"desc\"\n      },\n      {\n        title: \"Level\",\n        field: \"level\"\n      },\n      {\n        title: \"Message\",\n        field: \"message\",\n        sorting: false\n      }\n    ];\n    this.dataSource = props.dataSource;\n    this.handleDeviceLogsChange = this.handleDeviceLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { device } = this.props;\n    this.dataSource\n      .getDeviceLogs(device.serialNumber)\n      .then(this.handleDeviceLogsChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch device logs: ${error.message}`);\n      });\n  }\n\n  handleDeviceLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  getColumnInfo() {\n    return this.columns;\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} columns={this.getColumnInfo()} />;\n  }\n}\n\nDeviceLogTableWrapper.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import axios from \"axios\";\nimport LogInfo from \"../model/LogInfo\";\nimport StreamLogInfo from \"../model/StreamLogInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nasync function getLogs(endpoint) {\n  return axios.get(endpoint, getAuthorizationHeader()).then((response) => {\n    return Promise.resolve(\n      response.data.map((log) => {\n        return new LogInfo(log.id, log.dateTime, log.level, log.message);\n      })\n    );\n  });\n}\n\nexport async function getAllLogs() {\n  return getLogs(process.env.REACT_APP_LOG);\n}\n\nexport async function getDeviceLogs(deviceSerialNumber) {\n  return getLogs(`${process.env.REACT_APP_LOG}/${deviceSerialNumber}`);\n}\n\nexport async function getStreamLogs(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAMLOG}/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      return Promise.resolve(\n        response.data.map((log) => {\n          return new StreamLogInfo(\n            log.logEntity.dateTime,\n            log.logEntity.level,\n            log.logEntity.message\n          );\n        })\n      );\n    });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport DeviceLogTableWrapper from \"../DeviceLogTableWrapper\";\nimport * as deviceLogsDataSource from \"../../api/LogApi\";\n\nexport default function DeviceLogCard(props) {\n  const { device } = props;\n\n  return (\n    <DashboardCard title=\"Logs\">\n      <Grid item xs={12}>\n        <DeviceLogTableWrapper\n          dataSource={deviceLogsDataSource}\n          device={device}\n        />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceLogCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport ChannelDetailsTable from \"../../devicelist/ChannelDetailsTable\";\n\nexport default function DeviceChannelCard(props) {\n  const {\n    device: { channels }\n  } = props;\n\n  return (\n    <DashboardCard title=\"Channels\">\n      <Grid item xs={12}>\n        <ChannelDetailsTable channels={channels} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceChannelCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogContentText from \"@material-ui/core/DialogContentText\";\n\nexport default function DialogBody(props) {\n  const { children } = props;\n  return (\n    <MuiDialogContent>\n      <MuiDialogContentText id=\"dialog-description\">\n        {children}\n      </MuiDialogContentText>\n    </MuiDialogContent>\n  );\n}\nDialogBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\n\nexport default function DialogButtons(props) {\n  const { button1, button2 } = props;\n\n  return (\n    <MuiDialogActions>\n      <Button onClick={button1.onClick} color=\"primary\">\n        {button1.name}\n      </Button>\n      {button2 ? (\n        <Button onClick={button2.onClick} color=\"secondary\" autoFocus>\n          {button2.name}\n        </Button>\n      ) : undefined}\n    </MuiDialogActions>\n  );\n}\n\nDialogButtons.propTypes = {\n  button1: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired,\n  button2: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  })\n};\n\nDialogButtons.defaultProps = {\n  button2: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MuiDialog from \"@material-ui/core/Dialog/Dialog\";\nimport { DialogTitle } from \"@material-ui/core\";\nimport DialogBody from \"./DialogBody\";\nimport DialogButtons from \"./DialogButtons\";\n\nexport default class Dialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.openDialog = this.openDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.setState({ open: true });\n  }\n\n  closeDialog() {\n    return this.setState({ open: false });\n  }\n\n  render() {\n    const { title, actionButton, children, isError } = this.props;\n    const { open } = this.state;\n\n    const button = {\n      name: actionButton ? \"Cancel\" : \"OK\",\n      onClick: this.closeDialog\n    };\n\n    return (\n      <MuiDialog\n        open={open}\n        onClose={() => this.closeDialog}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n        id=\"dialog\"\n      >\n        <DialogTitle className={isError ? \"warningText\" : undefined}>\n          {title}\n        </DialogTitle>\n        <DialogBody>{children}</DialogBody>\n        {actionButton ? (\n          <DialogButtons button1={button} button2={actionButton} />\n        ) : (\n          <DialogButtons button1={button} />\n        )}\n      </MuiDialog>\n    );\n  }\n}\n\nDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  actionButton: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }),\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  isError: PropTypes.bool\n};\n\nDialog.defaultProps = {\n  isError: false,\n  actionButton: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../../general/dialog/Dialog\";\nimport { deleteDevice } from \"../../api/DeviceApi\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport { snackbar } from \"../../general/SnackbarMessage\";\n\nexport default class DeleteDeviceDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  confirmDelete() {\n    const {\n      device: { serialNumber },\n      history\n    } = this.props;\n    this.dialogElement.current.closeDialog();\n    deleteDevice(serialNumber)\n      .then(() => {\n        history.push(\"/Devices\");\n        snackbar(\"success\", `Device deleted! (Serial Number: ${serialNumber})`);\n      })\n      .catch(() => {\n        snackbar(\n          \"error\",\n          `Could not delete device (Serial Number: ${serialNumber})`\n        );\n      });\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { device } = this.props;\n    const title = \"Confirm Delete\";\n    const message = `Are you sure you want to delete ${device.name}?`;\n\n    const actionButton = {\n      name: \"Confirm\",\n      onClick: this.confirmDelete\n    };\n\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        {message}\n      </Dialog>\n    );\n  }\n}\n\nDeleteDeviceDialog.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withRouter } from \"react-router-dom\";\nimport DeleteDeviceDialog from \"./DeleteDeviceDialog\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nclass DeleteDeviceDialogOpener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { device, history } = this.props;\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={<DeleteIcon />}\n          onClick={this.openDialog}\n        >\n          Delete\n        </Button>\n        <DeleteDeviceDialog\n          ref={this.dialogElement}\n          device={device}\n          history={history}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(DeleteDeviceDialogOpener);\n\nDeleteDeviceDialogOpener.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"@material-ui/core\";\n\nimport Dialog from \"../../general/dialog/Dialog\";\n\nimport { uploadConfiguration } from \"../../api/DeviceApi\";\nimport { snackbar } from \"../../general/SnackbarMessage\";\n\nexport default class UploadConfigDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null\n    };\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      file: event.target.files[0]\n    });\n  }\n\n  handleUpload() {\n    const { deviceId } = this.props;\n    const { file } = this.state;\n    uploadConfiguration(deviceId, file)\n      .then(() => {\n        snackbar(\"success\", \"Successfully uploaded configuration\");\n      })\n      .catch(() => {\n        snackbar(\"error\", \"Upload failed\");\n      })\n      .finally(() => {\n        this.dialogElement.current.closeDialog();\n      });\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const title = \"Upload a file\";\n    const actionButton = {\n      name: \"Upload\",\n      onClick: this.handleUpload\n    };\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        <Input\n          type=\"file\"\n          name=\"file\"\n          disableUnderline\n          onChange={this.handleChange}\n        />\n      </Dialog>\n    );\n  }\n}\n\nUploadConfigDialog.propTypes = {\n  deviceId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { CloudUpload } from \"@material-ui/icons\";\n\nimport UploadConfigDialog from \"./UploadConfigDialog\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class UploadConfigDialogOpenButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const {\n      device: { serialNumber }\n    } = this.props;\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<CloudUpload />}\n          onClick={this.openDialog}\n        >\n          Upload New\n        </Button>\n\n        <UploadConfigDialog ref={this.dialogElement} deviceId={serialNumber} />\n      </>\n    );\n  }\n}\n\nUploadConfigDialogOpenButton.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { GetApp } from \"@material-ui/icons\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class DownloadConfigButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.handleDownload = this.handleDownload.bind(this);\n  }\n\n  handleDownload() {\n    const { device } = this.props;\n    if (!device.extras) return;\n    const filename = `${device.serialNumber}.config`;\n    const element = document.createElement(\"a\");\n    element.setAttribute(\n      \"href\",\n      `data:text/plain;charset=utf-8,${atob(device.extras)}`\n    );\n    element.setAttribute(\"download\", filename);\n\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  }\n\n  render() {\n    const { device } = this.props;\n    return (\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={this.handleDownload}\n        startIcon={<GetApp />}\n        disabled={!device.extras}\n      >\n        Download\n      </Button>\n    );\n  }\n}\n\nDownloadConfigButton.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport UploadConfigDialogOpenButton from \"../configuration/UploadConfigDialogOpenButton\";\nimport DownloadConfigButton from \"../configuration/DownloadConfigButton\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function DeviceConfigActionsCard(props) {\n  const { device } = props;\n  return (\n    <DashboardCard title=\"Configuration\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <UploadConfigDialogOpenButton device={device} />\n        </Grid>\n        <Grid item xs={4}>\n          <DownloadConfigButton device={device} />\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceConfigActionsCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, Box, Container } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeviceInfoCard from \"./cards/DeviceInfoCard\";\nimport DeviceLogCard from \"./cards/DeviceLogCard\";\nimport DeviceChannelCard from \"./cards/DeviceChannelCard\";\n\nimport { getSampleSender } from \"../api/SampleData\";\nimport GridColumn from \"../general/dashboard/GridColumn\";\nimport DeleteDeviceDialogOpener from \"./DeleteDeviceDialog/DeleteDeviceDialogOpener\";\nimport DeviceConfigActionsCard from \"./cards/DeviceConfigActionsCard\";\n\nexport default function DeviceDetailsPageContents(props) {\n  const { device } = props;\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <GridColumn width={6}>\n          <Grid item xs={12}>\n            <DeviceInfoCard device={device} />\n          </Grid>\n          <Grid item xs={12}>\n            <DeviceChannelCard device={device} />\n          </Grid>\n          <Grid item xs={12}>\n            <DeviceConfigActionsCard device={device} />\n          </Grid>\n        </GridColumn>\n        <Grid item xs={6}>\n          <DeviceLogCard device={device} />\n        </Grid>\n      </Grid>\n      <Box className=\"alignRightFloatPadded\">\n        <DeleteDeviceDialogOpener device={device} />\n      </Box>\n    </Container>\n  );\n}\nDeviceDetailsPageContents.defaultProps = {\n  device: getSampleSender()\n};\n\nDeviceDetailsPageContents.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo)\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Page from \"../general/Page\";\nimport DeviceDetailsPageContents from \"./DeviceDetailsPageContents\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport { getSampleSender } from \"../api/SampleData\";\n\nexport default function DeviceDetailsPage(props) {\n  const {\n    location: {\n      state: { device }\n    }\n  } = props;\n\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"My Devices\", \"/Devices\"],\n    [\"Device Details\", `/Devices/Details/${device.serialNumber}`, { device }]\n  ];\n\n  return (\n    <Page title=\"Device Details\" breadcrumbs={breadcrumbs}>\n      <DeviceDetailsPageContents device={device} />\n    </Page>\n  );\n}\n\nDeviceDetailsPage.defaultProps = {\n  location: { state: { device: getSampleSender() } }\n};\n\nDeviceDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      device: PropTypes.instanceOf(DeviceInfo)\n    })\n  })\n};\n","import React from \"react\";\nimport StreamsTableWrapper from \"./StreamsTableWrapper\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport StreamDetailsButton from \"./StreamDetailsButton\";\nimport * as streamDataSource from \"../api/StreamApi\";\n\nexport default class DetailedStreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.detailedColumns = [\n      {\n        title: \"ID\",\n        field: \"id\"\n      },\n      {\n        title: \"Date\",\n        field: \"date\"\n      },\n      {\n        title: \"Sender\",\n        field: \"sender.name\"\n      },\n      {\n        title: \"Receiver\",\n        field: \"receiver.name\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        }\n      },\n      {\n        title: \"Type\",\n        field: \"type\"\n      },\n      {\n        title: \"Time Elapsed\",\n        field: \"time\"\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <StreamDetailsButton streamInfo={rowData} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n  }\n\n  getDetailedColumns() {\n    return this.detailedColumns;\n  }\n\n  render() {\n    return (\n      <StreamsTableWrapper\n        dataSource={streamDataSource}\n        columns={this.getDetailedColumns()}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport DetailedStreamsTableWrapper from \"./DetailedStreamsTableWrapper\";\n\nexport default function StreamListPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"]\n  ];\n  return (\n    <Page title=\"Active Streams\" breadcrumbs={breadcrumbs} hasStreamButton>\n      <DetailedStreamsTableWrapper />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\n\nexport default class SelectTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleListItemClick = this.handleListItemClick.bind(this);\n  }\n\n  handleListItemClick(index) {\n    const { setIndex } = this.props;\n    setIndex(index);\n  }\n\n  render() {\n    const { selectedIndex, items } = this.props;\n    return (\n      <List>\n        {items.map((item, index) => {\n          return (\n            <ListItem\n              button\n              key={item}\n              selected={selectedIndex === index}\n              onClick={() => this.handleListItemClick(index)}\n            >\n              <ListItemText primary={item} />\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n}\n\nSelectTable.propTypes = {\n  selectedIndex: PropTypes.number.isRequired,\n  setIndex: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectTable from \"./SelectTable\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function SelectDeviceTable(props) {\n  const { selectedIndex, setIndex, deviceList } = props;\n\n  const deviceNames = deviceList.map((device) => device.name);\n  return (\n    <SelectTable\n      selectedIndex={selectedIndex}\n      setIndex={setIndex}\n      items={deviceNames}\n    />\n  );\n}\n\nSelectDeviceTable.propTypes = {\n  selectedIndex: PropTypes.number.isRequired,\n  setIndex: PropTypes.func.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectTable from \"./SelectTable\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function SelectChannelTable(props) {\n  const { selectedIndex, setIndex, deviceList, deviceIndex } = props;\n\n  const channelNames = deviceList[deviceIndex].channels.map(\n    (channel) => channel.name\n  );\n  return (\n    <SelectTable\n      selectedIndex={selectedIndex}\n      setIndex={setIndex}\n      items={channelNames}\n    />\n  );\n}\n\nSelectChannelTable.propTypes = {\n  selectedIndex: PropTypes.number.isRequired,\n  setIndex: PropTypes.func.isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function SimpleTableRow(props) {\n  const { name, value, alignment } = props;\n\n  return (\n    <>\n      <TableRow>\n        <TableCell>{name}</TableCell>\n        <TableCell align={alignment}>{value}</TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nSimpleTableRow.defaultProps = {\n  alignment: \"left\"\n};\n\nSimpleTableRow.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.node.isRequired,\n  alignment: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TableBody, Table, TableContainer } from \"@material-ui/core\";\nimport SimpleTableRow from \"./SimpleTableRow\";\n\nexport default function SimpleTable(props) {\n  const { properties, alignment } = props;\n\n  const propertiesArr = Object.keys(properties).map((propertyName) => {\n    return [propertyName, properties[propertyName]];\n  });\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          {propertiesArr.map((propertyPair) => (\n            <SimpleTableRow\n              name={propertyPair[0]}\n              value={propertyPair[1]}\n              alignment={alignment}\n              key={`component_${propertyPair[0]}`}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nSimpleTable.defaultProps = {\n  alignment: \"left\"\n};\nSimpleTable.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.node).isRequired,\n  alignment: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DashboardCard from \"./dashboard/DashboardCard\";\nimport SimpleTable from \"./simpleTable/SimpleTable\";\nimport ButtonInfo from \"./dashboard/ButtonInfo\";\n\nexport default function StreamDeviceCard(props) {\n  const { title, button, device, channel } = props;\n  const properties = {\n    Name: device.name,\n    \"Serial Number\": device.serialNumber,\n    Channel: channel\n  };\n\n  return (\n    <DashboardCard title={title} button={button}>\n      <Grid item xs={12}>\n        <SimpleTable properties={properties} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nStreamDeviceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  button: PropTypes.instanceOf(ButtonInfo),\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  channel: PropTypes.number.isRequired\n};\n\nStreamDeviceCard.defaultProps = {\n  button: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\n\nexport default function StepperNextButton(props) {\n  const { disabled, isLast, handleNext, handleClose } = props;\n\n  const buttonText = isLast ? \"Confirm\" : \"Next\";\n\n  const handleClick = isLast ? handleClose : handleNext;\n\n  return (\n    <Button size=\"small\" onClick={handleClick} disabled={disabled}>\n      {buttonText}\n      <KeyboardArrowRight />\n    </Button>\n  );\n}\n\nStepperNextButton.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { Close, KeyboardArrowLeft } from \"@material-ui/icons\";\n\nexport default function StepperBackButton(props) {\n  const { isFirst, handleBack, handleClose } = props;\n\n  let handleClick = handleBack;\n  let icon = <KeyboardArrowLeft />;\n  let buttonText = \"Back\";\n\n  if (isFirst) {\n    handleClick = handleClose;\n    buttonText = \"Cancel\";\n    icon = <Close />;\n  }\n\n  return (\n    <Button size=\"small\" onClick={handleClick}>\n      {icon}\n      {buttonText}\n    </Button>\n  );\n}\n\nStepperBackButton.propTypes = {\n  isFirst: PropTypes.bool.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SwipeableViews from \"react-swipeable-views\";\nimport { DialogTitle, MobileStepper } from \"@material-ui/core\";\nimport SelectDeviceTable from \"../SelectDeviceDialog/SelectDeviceTable\";\nimport SelectChannelTable from \"../SelectDeviceDialog/SelectChannelTable\";\nimport StreamDeviceCard from \"../../general/StreamDeviceCard\";\n\nimport StepperNextButton from \"./StepperNextButton\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport StepperBackButton from \"./StepperBackButton\";\nimport \"./swipeable.css\";\n\nexport default class SelectDeviceSwipeableSteps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeStep: 0\n    };\n\n    this.steps = [`Select a Device`, `Select a Channel`, `Confirm Device`];\n    this.handleNext = this.handleNext.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n    this.getNextButton = this.getNextButton.bind(this);\n    this.getBackButton = this.getBackButton.bind(this);\n  }\n\n  handleNext() {\n    const { activeStep: previousStep } = this.state;\n    this.setState({\n      activeStep: previousStep + 1\n    });\n  }\n\n  handleBack() {\n    const { activeStep: previousStep } = this.state;\n    this.setState({\n      activeStep: previousStep - 1\n    });\n  }\n\n  getNextButton() {\n    const { handleClose } = this.props;\n    const { activeStep } = this.state;\n    const maxSteps = this.steps.length;\n\n    return (\n      <StepperNextButton\n        disabled={this.disableNext()}\n        isLast={activeStep === maxSteps - 1}\n        handleClose={handleClose}\n        handleNext={this.handleNext}\n      />\n    );\n  }\n\n  getBackButton() {\n    const { handleClose } = this.props;\n    const { activeStep } = this.state;\n\n    return (\n      <StepperBackButton\n        isFirst={activeStep === 0}\n        handleClose={handleClose}\n        handleBack={this.handleBack}\n      />\n    );\n  }\n\n  disableNext() {\n    const { activeStep } = this.state;\n    const { deviceIndex, channelIndex } = this.props;\n    switch (activeStep) {\n      case 0:\n        return deviceIndex === -1;\n      case 1:\n        return channelIndex === -1;\n      default:\n        return false;\n    }\n  }\n\n  render() {\n    const {\n      deviceList,\n      deviceIndex,\n      setDeviceIndex,\n      channelIndex,\n      setChannelIndex\n    } = this.props;\n    const { activeStep } = this.state;\n    const maxSteps = this.steps.length;\n\n    return (\n      <>\n        <DialogTitle>{this.steps[activeStep]}</DialogTitle>\n        <SwipeableViews\n          className=\"halfScreenVertically\"\n          axis=\"x\"\n          index={activeStep}\n          enableMouseEvents\n        >\n          <SelectDeviceTable\n            selectedIndex={deviceIndex}\n            setIndex={setDeviceIndex}\n            deviceList={deviceList}\n          />\n          {deviceIndex === -1 ? (\n            <></>\n          ) : (\n            <SelectChannelTable\n              selectedIndex={channelIndex}\n              setIndex={setChannelIndex}\n              deviceIndex={deviceIndex}\n              deviceList={deviceList}\n            />\n          )}\n          {deviceIndex === -1 || channelIndex === -1 ? (\n            <></>\n          ) : (\n            <StreamDeviceCard\n              title=\"Preview\"\n              device={deviceList[deviceIndex]}\n              channel={deviceList[deviceIndex].channels[channelIndex].port}\n            />\n          )}\n        </SwipeableViews>\n        <MobileStepper\n          steps={maxSteps}\n          position=\"static\"\n          variant=\"text\"\n          activeStep={activeStep}\n          nextButton={this.getNextButton()}\n          backButton={this.getBackButton()}\n        />\n      </>\n    );\n  }\n}\n\nSelectDeviceSwipeableSteps.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  setDeviceIndex: PropTypes.func.isRequired,\n  channelIndex: PropTypes.number.isRequired,\n  setChannelIndex: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport SelectDeviceSwipeableSteps from \"../SwipeableSteps/SelectDeviceSwipeableSteps\";\n\nexport default class SelectDeviceDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.openDialog = this.openDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.setState({ open: true });\n  }\n\n  closeDialog() {\n    return this.setState({ open: false });\n  }\n\n  render() {\n    const { open } = this.state;\n    const {\n      deviceList,\n      deviceIndex,\n      setDeviceIndex,\n      channelIndex,\n      setChannelIndex\n    } = this.props;\n\n    return (\n      <Dialog\n        open={open}\n        fullWidth\n        maxWidth=\"sm\"\n        onClose={this.closeDialog}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n        id=\"dialog\"\n      >\n        <SelectDeviceSwipeableSteps\n          handleClose={this.closeDialog}\n          deviceList={deviceList}\n          deviceIndex={deviceIndex}\n          setDeviceIndex={setDeviceIndex}\n          channelIndex={channelIndex}\n          setChannelIndex={setChannelIndex}\n        />\n      </Dialog>\n    );\n  }\n}\n\nSelectDeviceDialog.propTypes = {\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  setDeviceIndex: PropTypes.func.isRequired,\n  channelIndex: PropTypes.number.isRequired,\n  setChannelIndex: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ButtonInfo from \"../../general/dashboard/ButtonInfo\";\nimport StreamDeviceCard from \"../../general/StreamDeviceCard\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function SelectedDeviceCard(props) {\n  const { title, openDialog, device, channelId } = props;\n  const button = new ButtonInfo(\"\", device, \"Edit\", openDialog);\n\n  return (\n    <StreamDeviceCard\n      title={title}\n      button={button}\n      device={device}\n      channel={channelId}\n    />\n  );\n}\n\nSelectedDeviceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  openDialog: PropTypes.func.isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  channelId: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\n\nexport default function UnselectedDeviceCard(props) {\n  const { title, onClick } = props;\n\n  return (\n    <DashboardCard title={title}>\n      <Grid item xs={4}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n          {`Select ${title}`}\n        </Button>\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nUnselectedDeviceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SelectedDeviceCard from \"./SelectedDeviceCard\";\nimport UnselectedDeviceCard from \"./UnselectedDeviceCard\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function CreateStreamCardToggler(props) {\n  const { title, openDialog, deviceIndex, deviceList, channelIndex } = props;\n  if (deviceIndex !== -1 && channelIndex !== -1) {\n    return (\n      <SelectedDeviceCard\n        title={title}\n        openDialog={openDialog}\n        device={deviceList[deviceIndex]}\n        channelId={deviceList[deviceIndex].channels[channelIndex].port}\n      />\n    );\n  }\n  return <UnselectedDeviceCard title={title} onClick={openDialog} />;\n}\n\nCreateStreamCardToggler.propTypes = {\n  title: PropTypes.string.isRequired,\n  openDialog: PropTypes.func.isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  channelIndex: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport SelectDeviceDialog from \"./SelectDeviceDialog/SelectDeviceDialog\";\nimport CreateStreamCardToggler from \"./cards/CreateStreamCardToggler\";\n\nexport default class CreateStreamDeviceCardWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const {\n      title,\n      deviceList,\n      deviceIndex,\n      setDeviceIndex,\n      channelIndex,\n      setChannelIndex\n    } = this.props;\n\n    return (\n      <>\n        <CreateStreamCardToggler\n          title={title}\n          openDialog={this.openDialog}\n          deviceIndex={deviceIndex}\n          deviceList={deviceList}\n          channelIndex={channelIndex}\n        />\n        <SelectDeviceDialog\n          ref={this.dialogElement}\n          deviceList={deviceList}\n          deviceIndex={deviceIndex}\n          setDeviceIndex={setDeviceIndex}\n          channelIndex={channelIndex}\n          setChannelIndex={setChannelIndex}\n        />\n      </>\n    );\n  }\n}\n\nCreateStreamDeviceCardWrapper.propTypes = {\n  title: PropTypes.string.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  setDeviceIndex: PropTypes.func.isRequired,\n  channelIndex: PropTypes.number.isRequired,\n  setChannelIndex: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { Forward } from \"@material-ui/icons\";\n\nimport CreateStreamDeviceCardWrapper from \"./CreateStreamDeviceCardWrapper\";\nimport { getSenders, getReceivers } from \"../api/DeviceApi\";\nimport { createStream } from \"../api/StreamApi\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class CreateStreamPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      senders: [],\n      receivers: [],\n      senderDeviceIndex: -1,\n      senderChannelIndex: -1,\n      receiverDeviceIndex: -1,\n      receiverChannelIndex: -1\n    };\n\n    this.createStream = this.createStream.bind(this);\n    this.setSenders = this.setSenders.bind(this);\n    this.setReceivers = this.setReceivers.bind(this);\n    this.setSenderDeviceIndex = this.setSenderDeviceIndex.bind(this);\n    this.setReceiverDeviceIndex = this.setReceiverDeviceIndex.bind(this);\n    this.setSenderChannelIndex = this.setSenderChannelIndex.bind(this);\n    this.setReceiverChannelIndex = this.setReceiverChannelIndex.bind(this);\n  }\n\n  componentDidMount() {\n    getSenders(this.setSenders);\n    getReceivers(this.setReceivers);\n  }\n\n  setSenders(value) {\n    this.setState({\n      senders: value\n    });\n  }\n\n  setReceivers(value) {\n    this.setState({\n      receivers: value\n    });\n  }\n\n  setSenderDeviceIndex(value) {\n    this.setState({\n      senderDeviceIndex: value,\n      senderChannelIndex: -1\n    });\n  }\n\n  setReceiverDeviceIndex(value) {\n    this.setState({\n      receiverDeviceIndex: value,\n      receiverChannelIndex: -1\n    });\n  }\n\n  setSenderChannelIndex(value) {\n    this.setState({\n      senderChannelIndex: value\n    });\n  }\n\n  setReceiverChannelIndex(value) {\n    this.setState({\n      receiverChannelIndex: value\n    });\n  }\n\n  createStream() {\n    const {\n      senders,\n      receivers,\n      senderDeviceIndex,\n      senderChannelIndex,\n      receiverDeviceIndex,\n      receiverChannelIndex\n    } = this.state;\n\n    const receiver = receivers[receiverDeviceIndex];\n    const sender = senders[senderDeviceIndex];\n\n    if (receiver && sender) {\n      const recieverChannel = receiver.channels[receiverChannelIndex];\n      const senderChannel = sender.channels[senderChannelIndex];\n      if (recieverChannel && senderChannel)\n        createStream(recieverChannel.id, senderChannel.id)\n          .then(() => {\n            snackbar(\"success\", `Successfully created stream!`);\n          })\n          .catch(() => {\n            snackbar(\"error\", `Failed to create stream`);\n          });\n    }\n  }\n\n  render() {\n    const {\n      senders,\n      receivers,\n      senderDeviceIndex,\n      senderChannelIndex,\n      receiverDeviceIndex,\n      receiverChannelIndex\n    } = this.state;\n\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"stretch\"\n        direction=\"row\"\n        spacing={3}\n      >\n        <Grid item xs={5} style={{ margin: \"auto\" }}>\n          <CreateStreamDeviceCardWrapper\n            title=\"Sender\"\n            deviceList={senders}\n            deviceIndex={senderDeviceIndex}\n            setDeviceIndex={this.setSenderDeviceIndex}\n            channelIndex={senderChannelIndex}\n            setChannelIndex={this.setSenderChannelIndex}\n          />\n        </Grid>\n        <Grid item xs={2} style={{ margin: \"auto\", textAlign: \"center\" }}>\n          <Forward style={{ fontSize: 100 }} />\n        </Grid>\n        <Grid item xs={5} style={{ margin: \"auto\" }}>\n          <CreateStreamDeviceCardWrapper\n            title=\"Receiver\"\n            deviceList={receivers}\n            deviceIndex={receiverDeviceIndex}\n            setDeviceIndex={this.setReceiverDeviceIndex}\n            channelIndex={receiverChannelIndex}\n            setChannelIndex={this.setReceiverChannelIndex}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.createStream}\n          >\n            Create Stream\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport CreateStreamPageContents from \"./CreateStreamPageContents\";\n\nexport default function CreateStreamPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [\"New Stream\", \"/Streams/New\"]\n  ];\n  return (\n    <Page title=\"Create a Stream\" breadcrumbs={breadcrumbs}>\n      <CreateStreamPageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LogsTable from \"./LogsTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class LogsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.columns = [\n      {\n        title: \"ID\",\n        field: \"id\",\n        cellStyle: { width: \"5%\" }\n      },\n      {\n        title: \"Date\",\n        field: \"dateTime\",\n        defaultSort: \"desc\",\n        cellStyle: { width: \"15%\" }\n      },\n      {\n        title: \"Level\",\n        field: \"level\",\n        cellStyle: { width: \"10%\" }\n      },\n      {\n        title: \"Message\",\n        field: \"message\",\n        sorting: false\n      }\n    ];\n    this.logsDataSource = props.logsDataSource;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.logsDataSource\n      .getAllLogs()\n      .then(this.handleLogsChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch logs: ${error.message}`);\n      });\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  getColumnInfo() {\n    return this.columns;\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} columns={this.getColumnInfo()} />;\n  }\n}\n\nLogsTableWrapper.propTypes = {\n  logsDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\n\nimport LogsTableWrapper from \"./LogsTableWrapper\";\nimport Page from \"../general/Page\";\nimport * as logsDataSource from \"../api/LogApi\";\n\nexport default function LogListPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Logs\", \"/Logs\"]\n  ];\n\n  return (\n    <Page title=\"Logs\" breadcrumbs={breadcrumbs}>\n      <LogsTableWrapper logsDataSource={logsDataSource} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Dialog from \"../dialog/Dialog\";\n\nexport default class FormFailedDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { title, errorMessage } = this.props;\n\n    return (\n      <Dialog ref={this.dialogElement} title={title} isError>\n        {errorMessage}\n      </Dialog>\n    );\n  }\n}\n\nFormFailedDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string.isRequired\n};\n","import axios from \"axios\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nexport async function createUser(credentials) {\n  return axios.post(\n    process.env.REACT_APP_SIGNUP,\n    {\n      username: credentials.username,\n      password: credentials.password,\n      userRole: \"USER\"\n    },\n    getAuthorizationHeader()\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, TextField, Grid } from \"@material-ui/core\";\nimport DashboardCard from \"../dashboard/DashboardCard\";\n\nexport default class FormConsole extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      passwordErrorCondition: false\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.setUsername = this.setUsername.bind(this);\n    this.setPassword = this.setPassword.bind(this);\n    this.setPasswordError = this.setPasswordError.bind(this);\n    this.passwordOnChange = this.passwordOnChange.bind(this);\n  }\n\n  onSubmit(event) {\n    const { handleSubmit } = this.props;\n    const { username, password } = this.state;\n    event.preventDefault();\n    handleSubmit(username, password);\n  }\n\n  setUsername(username) {\n    this.setState({\n      username\n    });\n  }\n\n  setPassword(password) {\n    this.setState({\n      password\n    });\n  }\n\n  setPasswordError(password) {\n    const { passwordError } = this.props;\n    if (passwordError) {\n      if (\n        password.length < passwordError.upperbound &&\n        password.length > passwordError.lowerbound\n      ) {\n        this.setState({ passwordErrorCondition: true });\n      } else {\n        this.setState({ passwordErrorCondition: false });\n      }\n    }\n  }\n\n  passwordOnChange(password) {\n    this.setPassword(password);\n    this.setPasswordError(password);\n  }\n\n  render() {\n    const {\n      buttonName,\n      isValidate,\n      passwordInputProps,\n      passwordHelperText\n    } = this.props;\n    const { passwordErrorCondition } = this.state;\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"stretch\"\n        direction=\"row\"\n        spacing={3}\n      >\n        <Grid item xs={6}>\n          <DashboardCard title=\"\">\n            <div>\n              <form noValidate={!isValidate} onSubmit={this.onSubmit}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  autoFocus\n                  onChange={(event) => this.setUsername(event.target.value)}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  error={passwordErrorCondition}\n                  inputProps={passwordInputProps}\n                  helperText={passwordHelperText}\n                  autoComplete=\"current-password\"\n                  // prettier-ignore\n                  onChange={(event) => this.passwordOnChange(event.target.value)}\n                />\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  {buttonName}\n                </Button>\n              </form>\n            </div>\n          </DashboardCard>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nFormConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  buttonName: PropTypes.string.isRequired,\n  isValidate: PropTypes.bool,\n  passwordError: PropTypes.shape({\n    upperbound: PropTypes.number.isRequired,\n    lowerbound: PropTypes.number.isRequired\n  }),\n  passwordInputProps: PropTypes.shape({\n    maxLength: PropTypes.number.isRequired,\n    minLength: PropTypes.number.isRequired\n  }),\n  passwordHelperText: PropTypes.string\n};\n\nFormConsole.defaultProps = {\n  isValidate: false,\n  passwordError: undefined,\n  passwordInputProps: undefined,\n  passwordHelperText: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport FormConsole from \"../../general/userForm/FormConsole\";\n\nexport default function CreateUserFormConsole(props) {\n  const { handleSubmit } = props;\n\n  return (\n    <>\n      <FormConsole\n        handleSubmit={handleSubmit}\n        buttonName=\"Create\"\n        isValidate\n        passwordError={{ upperbound: 5, lowerbound: 0 }}\n        passwordInputProps={{ maxLength: 20, minLength: 5 }}\n        passwordHelperText=\"Password must be between 5 to 20 characters\"\n      />\n    </>\n  );\n}\n\nCreateUserFormConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n","import React from \"react\";\n\nimport FormFailedDialog from \"../../general/userForm/FormFailedDialog\";\nimport { createUser } from \"../../api/UserManagementApi\";\nimport CreateUserFormConsole from \"./CreateUserFormConsole\";\nimport { snackbar } from \"../../general/SnackbarMessage\";\n\nexport default class CreateUserPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogMessage: \"\"\n    };\n    this.dialogElement = React.createRef();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n    this.setDialogMessage = this.setDialogMessage.bind(this);\n  }\n\n  handleSubmit(username, password) {\n    createUser({ username, password })\n      .then(() => {\n        snackbar(\"success\", `User ${username} successfully created!`);\n      })\n      .catch((error) => {\n        this.openDialog();\n        this.setDialogMessage(error.message);\n      });\n  }\n\n  setDialogMessage(message) {\n    this.setState({\n      dialogMessage: message\n    });\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { dialogMessage } = this.state;\n    return (\n      <>\n        <CreateUserFormConsole handleSubmit={this.handleSubmit} />\n        <FormFailedDialog\n          ref={this.dialogElement}\n          title=\"Failed to create user\"\n          errorMessage={dialogMessage}\n        />\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nimport Page from \"../../general/Page\";\nimport CreateUserPageContents from \"./CreateUserPageContents\";\n\nexport default function CreateUserPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Admin\", \"/Admin\"],\n    [\"Create a User\", \"/Admin/New\"]\n  ];\n\n  return (\n    <Page title=\"Create a User\" breadcrumbs={breadcrumbs}>\n      <CreateUserPageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StreamDeviceCard from \"../general/StreamDeviceCard\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport ButtonInfo from \"../general/dashboard/ButtonInfo\";\n\nexport default function StreamDetailsDeviceCard(props) {\n  const { cardTitle, device, channel } = props;\n  const button = new ButtonInfo(\n    `/Devices/Details/${device.serialNumber}`,\n    { device },\n    \"View Device\"\n  );\n\n  return (\n    <StreamDeviceCard\n      title={cardTitle}\n      button={button}\n      device={device}\n      channel={channel}\n    />\n  );\n}\n\nStreamDetailsDeviceCard.propTypes = {\n  cardTitle: PropTypes.string.isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  channel: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../general/dialog/Dialog\";\nimport { deleteStream } from \"../api/StreamApi\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class DeleteStreamDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  confirmDelete() {\n    const { deleteId, history } = this.props;\n    this.dialogElement.current.closeDialog();\n    deleteStream(deleteId)\n      .then(() => {\n        history.push(\"/Streams\");\n        snackbar(\"success\", `Stream successfully deleted!`);\n      })\n      .catch(() => {\n        snackbar(\"error\", `Failed to delete stream`);\n      });\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId } = this.props;\n    const title = \"Confirm Delete\";\n    const message = `Are you sure you want to end stream ${deleteId}?`;\n\n    const actionButton = {\n      name: \"Confirm\",\n      onClick: this.confirmDelete\n    };\n\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        {message}\n      </Dialog>\n    );\n  }\n}\n\nDeleteStreamDialog.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Tooltip } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withRouter } from \"react-router-dom\";\n\nimport DeleteStreamDialog from \"./DeleteStreamDialog\";\n\nclass DeleteStreamDialogOpener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId, history } = this.props;\n    return (\n      <>\n        <Tooltip title=\"Delete Stream\" aria-label=\"delete stream\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<DeleteIcon />}\n            onClick={this.openDialog}\n          >\n            Delete\n          </Button>\n        </Tooltip>\n        <DeleteStreamDialog\n          ref={this.dialogElement}\n          deleteId={deleteId}\n          history={history}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(DeleteStreamDialogOpener);\n\nDeleteStreamDialogOpener.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport SimpleTable from \"../general/simpleTable/SimpleTable\";\nimport { getStreamStatistics } from \"../api/StreamApi\";\nimport ButtonInfo from \"../general/dashboard/ButtonInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default class StreamStatisticsCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stats: null\n    };\n    this.stream = props.stream;\n    this.handleStatsChange = this.handleStatsChange.bind(this);\n    this.getProperties = this.getProperties.bind(this);\n    this.getButton = this.getButton.bind(this);\n  }\n\n  componentDidMount() {\n    getStreamStatistics(this.stream.id).then(this.handleStatsChange);\n  }\n\n  handleStatsChange(stats) {\n    this.setState({\n      stats\n    });\n  }\n\n  getProperties() {\n    const { stats } = this.state;\n    if (!stats) return {};\n    return {\n      Time: stats.time,\n      \"Round-Trip-Time\": stats.link.rtt,\n      \"Packets Retransmitted\": stats.send.packetsRetransmitted,\n      \"Packets Dropped\": stats.send.packetsDropped\n    };\n  }\n\n  getButton() {\n    const { stats } = this.state;\n    const { stream } = this;\n    if (!stats) return null;\n    return new ButtonInfo(\n      `/Streams/Details/${stream.id}/Statistics`,\n      { statistics: stats, stream },\n      \"More Statistics\"\n    );\n  }\n\n  render() {\n    return (\n      <DashboardCard title=\"Statistics\" button={this.getButton()}>\n        <Grid item xs={12}>\n          <SimpleTable properties={this.getProperties()} />\n        </Grid>\n      </DashboardCard>\n    );\n  }\n}\n\nStreamStatisticsCard.propTypes = {\n  stream: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LogsTable from \"../loglist/LogsTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class StreamLogTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.columns = [\n      {\n        title: \"Date\",\n        field: \"dateTime\",\n        defaultSort: \"desc\"\n      },\n      {\n        title: \"Level\",\n        field: \"level\"\n      },\n      {\n        title: \"Message\",\n        field: \"message\",\n        sorting: false\n      }\n    ];\n    this.dataSource = props.dataSource;\n    this.handleStreamLogsChange = this.handleStreamLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { streamId } = this.props;\n    this.dataSource\n      .getStreamLogs(streamId)\n      .then(this.handleStreamLogsChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch stream logs: ${error.message}`);\n      });\n  }\n\n  handleStreamLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  getColumnInfo() {\n    return this.columns;\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} columns={this.getColumnInfo()} />;\n  }\n}\n\nStreamLogTableWrapper.propTypes = {\n  streamId: PropTypes.number.isRequired,\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport StreamLogTableWrapper from \"../StreamLogTableWrapper\";\nimport * as streamLogsDataSource from \"../../api/LogApi\";\n\nexport default function StreamLogCard(props) {\n  const { streamId } = props;\n\n  return (\n    <DashboardCard title=\"Logs\">\n      <Grid item xs={12}>\n        <StreamLogTableWrapper\n          dataSource={streamLogsDataSource}\n          streamId={streamId}\n        />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nStreamLogCard.propTypes = {\n  streamId: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Container, Grid } from \"@material-ui/core\";\n\nimport StreamInfo from \"../model/StreamInfo\";\nimport StreamDetailsDeviceCard from \"./StreamDetailsDeviceCard\";\nimport DeleteStreamDialogOpener from \"./DeleteStreamDialogOpener\";\nimport StreamStatisticsCard from \"./StreamStatisticsCard\";\nimport StreamLogCard from \"./cards/StreamLogCard\";\n\nexport default function StreamDetailsPageContents(props) {\n  const { stream } = props;\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <StreamDetailsDeviceCard\n            cardTitle=\"Sender Details\"\n            device={stream.sender}\n            channel={stream.outputChannel}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <StreamDetailsDeviceCard\n            cardTitle=\"Receiver Details\"\n            device={stream.receiver}\n            channel={stream.inputChannel}\n          />\n        </Grid>\n        <Grid item xs={7}>\n          <StreamLogCard streamId={stream.id} />\n        </Grid>\n        <Grid item xs={5}>\n          <StreamStatisticsCard stream={stream} />\n        </Grid>\n      </Grid>\n      <Box className=\"alignRightFloatPadded\">\n        <DeleteStreamDialogOpener deleteId={stream.id} />\n      </Box>\n    </Container>\n  );\n}\n\nStreamDetailsPageContents.propTypes = {\n  stream: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StreamInfo from \"../model/StreamInfo\";\nimport StreamDetailsPageContents from \"./StreamDetailsPageContents\";\nimport Page from \"../general/Page\";\n\nexport default function StreamDetailsPage(props) {\n  const {\n    location: {\n      state: { stream }\n    }\n  } = props;\n\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [`Stream Details`, `/Streams/Details/${stream.id}`, { stream }]\n  ];\n\n  return (\n    <Page title=\"Stream Details\" breadcrumbs={breadcrumbs}>\n      <StreamDetailsPageContents stream={stream} />\n    </Page>\n  );\n}\n\nStreamDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      stream: PropTypes.instanceOf(StreamInfo)\n    })\n  }).isRequired\n};\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport DashboardButton from \"./dashboard/DashboardButton\";\nimport DashboardCard from \"./dashboard/DashboardCard\";\nimport Page from \"./Page\";\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\n\nexport default function PathNotFoundPage() {\n  return (\n    <Page title=\"Error 404: Path not found\" breadcrumbs={[]}>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={6}>\n          <DashboardCard title=\"Sorry, that page doesn't exist!\">\n            {isAuthenticated() ? (\n              <DashboardButton href=\"/Home\">Go Home</DashboardButton>\n            ) : (\n              <DashboardButton href=\"/Login\">Go to Login</DashboardButton>\n            )}\n          </DashboardCard>\n        </Grid>\n      </Grid>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport StreamStatisticsInfo from \"../../model/StreamStatistics/StreamStatisticsInfo\";\nimport SimpleTable from \"../../general/simpleTable/SimpleTable\";\n\nexport default function StatisticsOverviewCard(props) {\n  const { stats } = props;\n\n  const properties = {\n    \"Stream ID\": stats.id,\n    Time: stats.time,\n    Flow: stats.window.flow,\n    Congestion: stats.window.congestion,\n    Flight: stats.window.flight,\n    Latency: stats.link.rtt,\n    Bandwidth: stats.link.bandwidth,\n    \"Maximum Bandwidth\": stats.link.maxBandwidth\n  };\n\n  return (\n    <DashboardCard title=\"Overview\">\n      <Grid item xs={12}>\n        <SimpleTable properties={properties} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nStatisticsOverviewCard.propTypes = {\n  stats: PropTypes.instanceOf(StreamStatisticsInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport StreamStatisticsInfo from \"../../model/StreamStatistics/StreamStatisticsInfo\";\nimport SimpleTable from \"../../general/simpleTable/SimpleTable\";\n\nexport default function StatisticsSendingCard(props) {\n  const { stats } = props;\n\n  const properties = {\n    Packets: stats.send.packets,\n    \"Packets Lost\": stats.send.packetsLost,\n    \"Packets Dropped\": stats.send.packetsDropped,\n    \"Packets Retransmitted\": stats.send.packetsRetransmitted,\n    Bytes: stats.send.bytes,\n    \"Bytes Dropped\": stats.send.bytesDropped,\n    \"Bitrate (Mbps)\": stats.send.mbitRate\n  };\n\n  return (\n    <>\n      <DashboardCard title=\"Sending Statistics\">\n        <Grid item xs={12}>\n          <SimpleTable properties={properties} />\n        </Grid>\n      </DashboardCard>\n    </>\n  );\n}\n\nStatisticsSendingCard.propTypes = {\n  stats: PropTypes.instanceOf(StreamStatisticsInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport StreamStatisticsInfo from \"../../model/StreamStatistics/StreamStatisticsInfo\";\nimport SimpleTable from \"../../general/simpleTable/SimpleTable\";\n\nexport default function StatisticsReceivingCard(props) {\n  const { stats } = props;\n\n  const properties = {\n    Packets: stats.receive.packets,\n    \"Packets Lost\": stats.receive.packetsLost,\n    \"Packets Dropped\": stats.receive.packetsDropped,\n    \"Packets Retransmitted\": stats.receive.packetsRetransmitted,\n    \"Packets Belated\": stats.receive.packetsBelated,\n    Bytes: stats.receive.bytes,\n    \"Bytes Lost\": stats.receive.bytesLost,\n    \"Bytes Dropped\": stats.receive.bytesDropped,\n    \"Bitrate (Mbps)\": stats.receive.mbitRate\n  };\n\n  return (\n    <DashboardCard title=\"Receiving Statistics\">\n      <Grid item xs={12}>\n        <SimpleTable properties={properties} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nStatisticsReceivingCard.propTypes = {\n  stats: PropTypes.instanceOf(StreamStatisticsInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport StreamStatisticsInfo from \"../../model/StreamStatistics/StreamStatisticsInfo\";\nimport StatisticsOverviewCard from \"./StatisticsOverviewCard\";\nimport StatisticsSendingCard from \"./StatisticsSendingCard\";\nimport StatisticsReceivingCard from \"./StatisticsReceivingCard\";\n\nexport default function StreamStatisticsPageContents(props) {\n  const { statistics } = props;\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={4}>\n        <StatisticsOverviewCard stats={statistics} />\n      </Grid>\n      <Grid item xs={4}>\n        <StatisticsSendingCard stats={statistics} />\n      </Grid>\n      <Grid item xs={4}>\n        <StatisticsReceivingCard stats={statistics} />\n      </Grid>\n    </Grid>\n  );\n}\n\nStreamStatisticsPageContents.propTypes = {\n  statistics: PropTypes.instanceOf(StreamStatisticsInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StreamStatisticsInfo from \"../../model/StreamStatistics/StreamStatisticsInfo\";\nimport Page from \"../../general/Page\";\nimport StreamStatisticsPageContents from \"./StreamStatisticsPageContents\";\nimport StreamInfo from \"../../model/StreamInfo\";\n\nexport default function StreamStatisticsPage(props) {\n  const {\n    location: {\n      state: { statistics, stream }\n    }\n  } = props;\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [\"Stream Details\", `/Streams/Details/${stream.id}`, { stream }],\n    [\n      \"Statistics\",\n      `/Streams/Details/${stream.id}/Statistics`,\n      { statistics, stream }\n    ]\n  ];\n\n  return (\n    <Page title=\"Stream Statistics\" breadcrumbs={breadcrumbs}>\n      <StreamStatisticsPageContents statistics={statistics} />\n    </Page>\n  );\n}\n\nStreamStatisticsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      statistics: PropTypes.instanceOf(StreamStatisticsInfo),\n      stream: PropTypes.instanceOf(StreamInfo).isRequired\n    })\n  }).isRequired\n};\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport ProtectedRoute from \"./ProtectedRoute\";\n\nimport LoginPage from \"../login/LoginPage\";\nimport HomePage from \"../homepage/HomePage\";\nimport DeviceListPage from \"../devicelist/DeviceListPage\";\nimport DeviceDetailsPage from \"../deviceDetailsPage/DeviceDetailsPage\";\nimport StreamListPage from \"../streamlist/StreamListPage\";\nimport CreateStreamPage from \"../createStream/CreateStreamPage\";\nimport LogListPage from \"../loglist/LogListPage\";\nimport CreateUserPage from \"../admin/createUser/CreateUserPage\";\nimport StreamDetailsPage from \"../streamDetails/StreamDetailsPage\";\nimport PathNotFoundPage from \"../general/PathNotFoundPage\";\nimport StreamStatisticsPage from \"../streamDetails/DetailedStreamStatistics/StreamStatisticsPage\";\nimport SnackbarMessage from \"../general/SnackbarMessage\";\n\nexport default function AppRouter() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <ProtectedRoute path=\"/Login\" render={() => <LoginPage />} />\n        <ProtectedRoute\n          path=\"/Home\"\n          authenticationRequired\n          render={() => {\n            return <HomePage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Devices/Details/:serialNumber\"\n          authenticationRequired\n          render={(location) => {\n            return <DeviceDetailsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Devices\"\n          authenticationRequired\n          render={() => {\n            return <DeviceListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/New\"\n          authenticationRequired\n          render={() => {\n            return <CreateStreamPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/Details/:streamId/Statistics\"\n          authenticationRequired\n          render={(location) => {\n            return <StreamStatisticsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/Details/:streamId\"\n          authenticationRequired\n          render={(location) => {\n            return <StreamDetailsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams\"\n          authenticationRequired\n          render={() => {\n            return <StreamListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Logs\"\n          authenticationRequired\n          render={() => {\n            return <LogListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Admin/New\"\n          authenticationRequired\n          render={() => {\n            return <CreateUserPage />;\n          }}\n        />\n        <Route path=\"/\">\n          <PathNotFoundPage />\n        </Route>\n      </Switch>\n      <SnackbarMessage />\n    </BrowserRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppRouter from \"./app/AppRouter\";\n\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n"],"sourceRoot":""}