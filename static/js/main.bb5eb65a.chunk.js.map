{"version":3,"sources":["general/HeaderBar.jsx","general/DynamicBreadcrumb.jsx","general/HomePage.jsx","general/Buttons/StreamButton.jsx","general/Buttons/AddDeviceButton.jsx","devicelist/TitleBox.jsx","devicelist/SearchBar.jsx","devicelist/DeviceListSortSelector.jsx","devicelist/VerticalTabs.jsx","devicelist/TabPanel.jsx","devicelist/ActionMenu.jsx","general/StatusIndicator.jsx","model/InputChannelInfo.js","model/OutputChannelInfo.js","devicelist/ChannelDetailsTable.jsx","model/DeviceInfo.js","devicelist/SingleTableRow.jsx","model/HeadCell.js","devicelist/HeadCells.jsx","devicelist/DevicesTable.jsx","devicelist/ContentsTable.jsx","DefaultMakeStylesTheme.js","devicelist/DeviceListPage.jsx","createStream/SelectDeviceTableRow.jsx","createStream/SelectDevicesTable.jsx","createStream/StreamingTable.jsx","streamlist/HeadCells.jsx","model/StreamInfo.js","streamlist/SingleStreamRow.jsx","streamlist/ActionButtons.jsx","streamlist/StreamsTable.jsx","streamlist/StreamList.jsx","createStream/StreamingPage.jsx","api/SampleData.js","api/DeviceApi.js","model/ConvertDataFormat.js","api/StreamApi.js","index.jsx"],"names":["HeaderBar","props","classes","makeStyles","theme","menuButton","marginRight","spacing","className","AppBar","position","Toolbar","IconButton","edge","this","color","aria-label","Menu","to","activeClassName","exact","id","Notifications","AccountCircle","React","Component","DynamicBreadcrumb","breadcrumbs","i","Box","padding","Breadcrumbs","map","crumb","Link","href","Typography","HomePage","Container","StreamButton","type","StyledButton","withStyles","root","background","borderRadius","border","height","margin","label","textTransform","Button","SwapHoriz","AddDeviceButton","AddSharp","TitleBox","SearchBar","search","right","marginLeft","breakpoints","up","width","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","TextField","placeholder","InputProps","startAdornment","InputAdornment","Search","size","variant","DeviceListSortSelector","state","sort","handleSortChange","bind","event","setState","target","value","flex-grow","Select","onChange","MenuItem","dense","VerticalTabs","handleChange","newTab","setValue","index","tabs","Tabs","orientation","Tab","getTabProps","TabPanel","children","other","role","hidden","aria-labelledby","p","component","ActionMenu","anchorElement","setAnchorElement","handleClick","handleClose","currentTarget","element","aria-controls","aria-haspopup","onClick","MoreVert","anchorEl","keepMounted","open","Boolean","onClose","anchorOrigin","horizontal","vertical","transformOrigin","StatusIndicator","status","getStatusStyle","InputChannelInfo","name","port","decoder","OutputChannelInfo","encoder","ChannelDetailsTable","channel","Table","style","TableHead","TableRow","TableCell","TableBody","DeviceInfo","serial","lastCommunication","ipAddress","displayName","channels","extras","serialNumber","ip","SingleTableRow","deviceDetails","paddingLeft","ExpandLess","ExpandMore","align","colSpan","Collapse","in","timeout","unmountOnExit","HeadCell","isNum","isNumeric","searchID","HeadCells","headcells","getHeadCellData","handleStatusChange","headCell","TableSortLabel","fullWidth","DevicesTable","devices","TableContainer","maxHeight","stickyHeader","device","ContentsTable","senders","receivers","dataSource","handleValueChange","handleSendersChange","handleReceiversChange","getSenders","getReceivers","tabIndex","display","flexGrow","defaultMakeStylesTheme","backgroundColor","palette","paper","borderRight","divider","DeviceListPage","useStyles","SelectDeviceTableRow","ListItem","button","ListItemText","primary","List","disablePadding","secondary","defaultValue","SelectDevicesTable","overflow","StreamingTable","selectedSenderID","selectedReceiverID","onSenderSelected","onReceiverSelected","handleSubmit","axios","post","inputChannelId","outputChannelId","preventDefault","selectedSender","selectedReceiver","onSubmit","Grid","container","alignContent","justify","item","xs","StreamInfo","sender","receiver","date","time","SingleStreamRow","join","streamDetails","receiverName","senderName","Sync","Pause","Block","rowExtras","StreamsTable","streams","handleStreamsChange","getAllStreams","stream","StreamList","StreamingPage","deviceDataSource","streamDataSource","sampleInputChannels","InChannelInfo","sampleOutputChannels","OutChannelInfo","callback","get","then","data","outputs","output","catch","error","SampleData","inputs","input","convertToDataObject","databaseDevice","Promise","all","streamId","getStream","sampleSenders","sampleReceivers","resolve","reject","response","outputChannel","inputChannel","ReactDOM","render","StrictMode","path","DeviceApi","StreamApi","document","getElementById"],"mappings":"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C,UAChBuF,EAAStD,OAAOhC,YAChB,SACAC,EACA,CAAC,2BAKRoH,OAAM,SAACC,ID+CL,SAAsBP,GAsK3BA,EArKwB,CACtB,IAAInH,GACF,eACA,KACA,UACA,aACA,SACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,aACA,QACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,aACA,UACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,aACA,UACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,aACA,SACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,aACA,QACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,aACA,UACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,aACA,UACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,aACA,SACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,cACA,SACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,cACA,QACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,cACA,UACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,cACA,UACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,cACA,SACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,cACA,QACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,cACA,UACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,cACA,UACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,cACA,SACA+G,GACAzG,MChNAqH,CAAwBR,MCzDvB,SAASW,GAAoBC,GAClC,OAAO,IAAI/H,GACT+H,EAAexH,aACfwH,EAAe7H,kBACf6H,EAAe3F,OAAOjC,UACtB4H,EAAe3F,OAAOhC,YACtB2H,EAAe3F,OAAOpD,OACtB+I,EAAeH,QCJZ,SAASnB,GAAcU,GAC5BzC,KACG0C,IAAI,gCACJC,MAAK,SAACd,GACLyB,QAAQC,IACN1B,EAAQe,KAAKvO,KAAI,SAACmP,GAChB,OAAOC,GAAUD,OAEnBb,KAAKF,MAERM,OAAM,SAACC,IHmQL,SAAuBP,GAC5B,IAAMiB,EAAgB,CACpB,IAAIpI,GACF,eACA,KACA,UACA,WACA,SACAiH,GACA3G,IAEF,IAAIN,GACF,eACA,KACA,UACA,WACA,QACAiH,GACA3G,KAGE+H,EAAkB,CACtB,IAAIrI,GACF,eACA,KACA,UACA,aACA,SACA+G,GACAzG,IAEF,IAAIN,GACF,eACA,KACA,UACA,aACA,QACA+G,GACAzG,KAgBJ6G,EAZsB,CACpB,IAAI3B,GAAW,EAAG4C,EAAc,GAAIC,EAAgB,GAAI,CACtD,sCAEF,IAAI7C,GAAW,EAAG4C,EAAc,GAAIC,EAAgB,GAAI,CACtD,sCAEF,IAAI7C,GAAW,EAAG4C,EAAc,GAAIC,EAAgB,GAAI,CACtD,wCGpTAV,CAAyBR,MAIxB,SAASgB,GAAUD,GACxB,OAAO,IAAIF,SAAQ,SAACM,EAASC,GAC3B7D,KACG0C,IADH,uCACuCc,IACpCb,MAAK,SAACmB,GACL,IAAM9B,EAAS8B,EAASlB,KACxBgB,EACE,IAAI9C,GACFkB,EAAOtO,GACP0P,GAAoBpB,EAAO+B,cAAclJ,SACzCuI,GAAoBpB,EAAOgC,aAAarJ,SACxC,CAAC,0CAINoI,MAAMc,MCxBbI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO1Q,OAAK,EAAC2Q,KAAM,CAAC,IAAK,SAAUpL,UAAWtE,IAC9C,cAAC,IAAD,CACEjB,OAAK,EACL2Q,KAAK,WACLF,OAAQ,SAAC5R,GAAD,OACN,cAAC,GAAD,2BAAoBA,GAApB,IAA2BwL,WAAYuG,QAG3C,cAAC,IAAD,CACE5Q,OAAK,EACL2Q,KAAK,aACLF,OAAQ,SAAC5R,GAAD,OACN,cAAC,GAAD,2BACMA,GADN,IAEE6P,iBAAkBkC,EAClBjC,iBAAkBkC,gBAO9BC,SAASC,eAAe,W","file":"static/js/main.bb5eb65a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AppBar, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\r\nimport { AccountCircle, Menu, Notifications } from \"@material-ui/icons/\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default class HeaderBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.classes = makeStyles((theme) => ({\r\n      menuButton: {\r\n        marginRight: theme.spacing(2)\r\n      }\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"headerBar\">\r\n          <AppBar position=\"static\">\r\n            <Toolbar className=\"darkGrey\">\r\n              <IconButton\r\n                edge=\"start\"\r\n                className={this.classes.menuButton}\r\n                color=\"inherit\"\r\n                aria-label=\"menu\"\r\n              >\r\n                <Menu />\r\n              </IconButton>\r\n              <div className=\"headerTitle\">\r\n                <NavLink\r\n                  to=\"/\"\r\n                  activeClassName=\"headerTitle\"\r\n                  className=\"headerTitle\"\r\n                  exact\r\n                >\r\n                  Switchboard\r\n                </NavLink>\r\n              </div>\r\n              <IconButton id=\"notifBtn\" color=\"inherit\">\r\n                <Notifications />\r\n              </IconButton>\r\n              <IconButton id=\"acctBtn\" color=\"inherit\">\r\n                <AccountCircle />\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Box, Breadcrumbs, Link, Typography } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class DynamicBreadcrumb extends React.Component {\r\n  render() {\r\n    const { breadcrumbs } = this.props;\r\n    let i = 0;\r\n    return (\r\n      <Box padding=\"2em 0em 0em 1em\">\r\n        <Breadcrumbs aria-label=\"breadcrumb\" id=\"breadcrumbParent\">\r\n          {breadcrumbs.map((crumb) => {\r\n            return (\r\n              <Link\r\n                color=\"inherit\"\r\n                href={crumb[1]}\r\n                id={`breadcrumb${i}`}\r\n                key={`breadcrumb${i++}`}\r\n              >\r\n                <Typography color=\"textPrimary\">{crumb[0]}</Typography>\r\n              </Link>\r\n            );\r\n          })}\r\n        </Breadcrumbs>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\nDynamicBreadcrumb.propTypes = {\r\n  breadcrumbs: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired\r\n};\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport DynamicBreadcrumb from \"./DynamicBreadcrumb\";\r\n\r\nexport default class HomePage extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <DynamicBreadcrumb\r\n          breadcrumbs={[\r\n            [\"Home\", \"\"],\r\n            [\"My Devices\", \"Devices\"],\r\n            [\"Streaming\", \"Streaming\"]\r\n          ]}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Button, withStyles } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { SwapHoriz } from \"@material-ui/icons/\";\r\n\r\nexport default class StreamButton extends React.Component {\r\n  render() {\r\n    const { id, type } = this.props;\r\n    const StyledButton = withStyles({\r\n      root: {\r\n        background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\r\n        borderRadius: 90,\r\n        border: 0,\r\n        color: \"white\",\r\n        height: 40,\r\n        padding: \"0 5px\",\r\n        margin: \"1em\"\r\n      },\r\n      label: {\r\n        textTransform: \"\"\r\n      }\r\n    })(Button);\r\n\r\n    return (\r\n      <StyledButton id={id} type={type}>\r\n        <div className=\"buttonText\">\r\n          <SwapHoriz />\r\n          Stream\r\n        </div>\r\n      </StyledButton>\r\n    );\r\n  }\r\n}\r\nStreamButton.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired\r\n};\r\n","import React from \"react\";\r\nimport { Button, withStyles } from \"@material-ui/core\";\r\nimport { AddSharp } from \"@material-ui/icons/\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class AddDeviceButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = props.id;\r\n  }\r\n\r\n  render() {\r\n    const StyledButton = withStyles({\r\n      root: {\r\n        background: \"linear-gradient(45deg, #01b2fe 30%, #01b2fe 90%)\",\r\n        borderRadius: 90,\r\n        border: 0,\r\n        color: \"white\",\r\n        height: 40,\r\n        padding: \"0px\"\r\n      },\r\n      label: {\r\n        textTransform: \"\"\r\n      }\r\n    })(Button);\r\n\r\n    return (\r\n      <StyledButton id={this.id}>\r\n        <div className=\"buttonText\">\r\n          <AddSharp />\r\n          Add Device\r\n        </div>\r\n      </StyledButton>\r\n    );\r\n  }\r\n}\r\nAddDeviceButton.propTypes = {\r\n  id: PropTypes.string.isRequired\r\n};\r\n","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport StreamButton from \"../general/Buttons/StreamButton\";\r\nimport AddDeviceButton from \"../general/Buttons/AddDeviceButton\";\r\n\r\nexport default class TitleBox extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Box className=\"flexContents headerArea\">\r\n          <div className=\"title\">My Devices</div>\r\n          <div className=\"alignRightFloat\" spacing={2}>\r\n            <NavLink\r\n              to=\"/Streaming\"\r\n              activeClassName=\"hideLinkStyle\"\r\n              className=\"hideLinkStyle\"\r\n              exact\r\n            >\r\n              <StreamButton id=\"DeviceListStreamBtn\" type=\"submit\" />\r\n            </NavLink>\r\n            <AddDeviceButton id=\"DeviceListAddDevBtn\" />\r\n          </div>\r\n        </Box>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { InputAdornment, makeStyles, TextField } from \"@material-ui/core\";\r\n\r\nimport { Search } from \"@material-ui/icons/\";\r\n\r\nexport default class SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.classes = makeStyles((theme) => ({\r\n      search: {\r\n        position: \"relative\",\r\n        right: 0,\r\n        marginLeft: 0,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          marginLeft: theme.spacing(1),\r\n          width: \"auto\"\r\n        }\r\n      },\r\n      searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        alignItems: \"left\",\r\n        justifyContent: \"center\"\r\n      },\r\n      inputRoot: {\r\n        color: \"inherit\"\r\n      }\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"searchField\">\r\n          <TextField\r\n            placeholder=\"Search\"\r\n            InputProps={{\r\n              \"aria-label\": \"search\",\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  {\" \"}\r\n                  <Search />\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { MenuItem, Select, Typography } from \"@material-ui/core\";\r\n\r\nexport default class DeviceListSortSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sort: \"\"\r\n    };\r\n\r\n    this.handleSortChange = this.handleSortChange.bind(this);\r\n  }\r\n\r\n  handleSortChange(event) {\r\n    this.setState({\r\n      sort: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { sort } = this.state;\r\n    return (\r\n      <>\r\n        <div flex-grow=\"1\">\r\n          <Typography className=\"sortBy\" variant=\"caption\">\r\n            Sort By\r\n          </Typography>\r\n          <Select\r\n            value={sort}\r\n            onChange={this.handleSortChange}\r\n            variant=\"outlined\"\r\n            id=\"sortBySelect\"\r\n          >\r\n            <MenuItem dense=\"true\" value=\"Name\">\r\n              {\" \"}\r\n              <Typography variant=\"caption\">Name</Typography>\r\n            </MenuItem>\r\n            <MenuItem dense=\"true\" value=\"Last Access\">\r\n              {\" \"}\r\n              <Typography variant=\"caption\">Last Access</Typography>\r\n            </MenuItem>\r\n            <MenuItem dense=\"true\" value=\"Offline\">\r\n              {\" \"}\r\n              <Typography variant=\"caption\">Offline</Typography>\r\n            </MenuItem>\r\n          </Select>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Tab, Tabs } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class VerticalTabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event, newTab) {\r\n    const { setValue } = this.props;\r\n    setValue(newTab);\r\n  }\r\n\r\n  getTabProps(index) {\r\n    return {\r\n      id: `vertical-tab-${index}`,\r\n      \"aria-controls\": `vertical-tabpanel-${index}`\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      classes: { tabs }\r\n    } = this.props;\r\n    return (\r\n      <>\r\n        <Tabs\r\n          value={value}\r\n          onChange={this.handleChange}\r\n          aria-label=\"Vertical tabs\"\r\n          className={`${tabs} lightGrey blackFont flexContents`}\r\n          orientation=\"vertical\"\r\n          variant=\"scrollable\"\r\n        >\r\n          <Tab label=\"Senders\" {...this.getTabProps(0)} />\r\n          <Tab label=\"Receivers\" {...this.getTabProps(1)} />\r\n        </Tabs>\r\n      </>\r\n    );\r\n  }\r\n}\r\nVerticalTabs.propTypes = {\r\n  setValue: PropTypes.func.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  classes: PropTypes.shape({\r\n    tabs: PropTypes.string\r\n  }).isRequired\r\n};\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={0}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nTabPanel.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  index: PropTypes.number.isRequired\r\n};\r\n","import React from \"react\";\r\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nimport { MoreVert } from \"@material-ui/icons/\";\r\n\r\nexport default class ActionMenu extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      anchorElement: null\r\n    };\r\n\r\n    this.setAnchorElement = this.setAnchorElement.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  handleClick(event) {\r\n    this.setAnchorElement(event.currentTarget);\r\n  }\r\n\r\n  handleClose() {\r\n    this.setAnchorElement(null);\r\n  }\r\n\r\n  setAnchorElement(element) {\r\n    this.setState({\r\n      anchorElement: element\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { anchorElement } = this.state;\r\n    return (\r\n      <>\r\n        <IconButton\r\n          aria-controls=\"simple-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleClick}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorElement}\r\n          keepMounted\r\n          open={Boolean(anchorElement)}\r\n          onClose={this.handleClose}\r\n          anchorOrigin={{ horizontal: \"right\", vertical: \"top\" }}\r\n          transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\r\n        >\r\n          <MenuItem onClick={this.handleClose}>View details</MenuItem>\r\n          <MenuItem onClick={this.handleClose}>\r\n            Start stream with this as receiver\r\n          </MenuItem>\r\n          <MenuItem onClick={this.handleClose}>\r\n            <span className=\"warningText\">Delete</span>\r\n          </MenuItem>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class StatusIndicator extends React.Component {\r\n  getStatusStyle(status) {\r\n    switch (status) {\r\n      case \"Online\":\r\n        return \"green statusText\";\r\n      case \"Pending\":\r\n        return \"yellow statusText\";\r\n      case \"Error\":\r\n        return \"red statusText\";\r\n      default:\r\n        return \"lightGrey statusOfflineText\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { status } = this.props;\r\n    return <div className={this.getStatusStyle(status)}>{status}</div>;\r\n  }\r\n}\r\nStatusIndicator.propTypes = {\r\n  status: PropTypes.oneOf([\"Online\", \"Offline\", \"Error\", \"Pending\"]).isRequired\r\n};\r\n","export default class InputChannelInfo {\n  constructor(id, name, port, decoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.decoder = decoder;\n  }\n}\n","export default class OutputChannelInfo {\n  constructor(id, name, port, encoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.encoder = encoder;\n  }\n}\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport InputChannelInfo from \"../model/InputChannelInfo\";\r\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\r\n\r\nexport default class ChannelDetailsTable extends React.Component {\r\n  render() {\r\n    const {\r\n      channel: { id, name, port }\r\n    } = this.props;\r\n    return (\r\n      <Table style={{ margin: \"1em\" }} className=\"flexContents\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className=\"lightGrey\">ID</TableCell>\r\n            <TableCell className=\"lightGrey\">Name</TableCell>\r\n            <TableCell className=\"lightGrey\">Port</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell>{id}</TableCell>\r\n            <TableCell>{name}</TableCell>\r\n            <TableCell>{port}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\nChannelDetailsTable.propTypes = {\r\n  channel: PropTypes.oneOfType([\r\n    PropTypes.instanceOf(InputChannelInfo),\r\n    PropTypes.instanceOf(OutputChannelInfo)\r\n  ]).isRequired\r\n};\r\n","export default class DeviceInfo {\r\n  constructor(\r\n    serial,\r\n    lastCommunication,\r\n    ipAddress,\r\n    displayName,\r\n    status,\r\n    channels,\r\n    extras\r\n  ) {\r\n    this.serialNumber = serial;\r\n    this.lastCommunication = lastCommunication;\r\n    this.ip = ipAddress;\r\n    this.name = displayName;\r\n    this.status = status;\r\n    this.channels = channels;\r\n    this.extras = extras;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Collapse,\r\n  IconButton,\r\n  TableCell,\r\n  TableRow,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons/\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport ActionMenu from \"./ActionMenu\";\r\nimport StatusIndicator from \"../general/StatusIndicator\";\r\nimport ChannelDetailsTable from \"./ChannelDetailsTable\";\r\nimport DeviceInfo from \"../model/DeviceInfo\";\r\n\r\nexport default class SingleTableRow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      deviceDetails: { id, name, serialNumber, status, ip, channels }\r\n    } = this.props;\r\n    const { open } = this.state;\r\n    return (\r\n      <>\r\n        <TableRow key={id} className=\"singleDeviceRow\">\r\n          <TableCell\r\n            className=\"tableCell dropdownButton\"\r\n            style={{ width: 1, padding: 0, paddingLeft: 5 }}\r\n          >\r\n            <IconButton onClick={() => this.setState({ open: !open })}>\r\n              {open ? <ExpandLess /> : <ExpandMore />}\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell className=\"tableCell\">{name}</TableCell>\r\n          <TableCell className=\"tableCell numeric\">{serialNumber}</TableCell>\r\n          <TableCell className=\"tableCell\">\r\n            <StatusIndicator status={status} />\r\n          </TableCell>\r\n          <TableCell className=\"tableCell numeric\">{ip}</TableCell>\r\n          <TableCell className=\"tableCell\" align=\"center\">\r\n            <ActionMenu />\r\n          </TableCell>\r\n        </TableRow>\r\n        <TableRow className=\"deviceDetails\">\r\n          <TableCell className=\"chevronText lightestGrey\" colSpan={7}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={2}>\r\n                <Typography variant=\"h6\">Channels</Typography>\r\n                {channels.map((channel) => {\r\n                  return (\r\n                    <ChannelDetailsTable\r\n                      channel={channel}\r\n                      key={`ch_${channel.id}_p${channel.port}`}\r\n                    />\r\n                  );\r\n                })}\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      </>\r\n    );\r\n  }\r\n}\r\nSingleTableRow.propTypes = {\r\n  deviceDetails: PropTypes.instanceOf(DeviceInfo).isRequired\r\n};\r\n","export default class HeadCell {\n  constructor(id, label, isNum, padding) {\n    this.id = id;\n    this.label = label;\n    this.isNumeric = isNum;\n    this.searchID = `${id}Search`;\n    this.padding = padding;\n  }\n}\n","import React from \"react\";\r\nimport {\r\n  MenuItem,\r\n  Select,\r\n  TableCell,\r\n  TableSortLabel,\r\n  TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport HeadCell from \"../model/HeadCell\";\r\n\r\nexport default class HeadCells extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: \"\"\r\n    };\r\n    this.headcells = this.getHeadCellData();\r\n    this.handleStatusChange = this.handleStatusChange.bind(this);\r\n  }\r\n\r\n  handleStatusChange(event) {\r\n    this.setState({\r\n      status: event.target.value\r\n    });\r\n  }\r\n\r\n  getHeadCellData() {\r\n    return [\r\n      new HeadCell(\"name\", \"Name\", false, false),\r\n      new HeadCell(\"serial\", \"Serial Number\", true, true),\r\n      new HeadCell(\"status\", \"Status\", false, true),\r\n      new HeadCell(\"ip\", \"IP Address\", true, true)\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    const { status } = this.state;\r\n    return (\r\n      <>\r\n        <TableCell\r\n          className=\"tableHeadCell lightestGrey\"\r\n          style={{ width: 1, padding: 0, paddingLeft: 5 }}\r\n        />\r\n\r\n        {this.headcells.map((headCell) => (\r\n          <TableCell\r\n            className=\"tableHeadCell lightestGrey\"\r\n            key={headCell.id}\r\n            padding={headCell.padding ? \"default\" : \"none\"}\r\n          >\r\n            <TableSortLabel>\r\n              <Typography component=\"span\" variant=\"caption\">\r\n                {\" \"}\r\n                {headCell.label}\r\n              </Typography>\r\n            </TableSortLabel>\r\n            {headCell.id === \"status\" ? (\r\n              <Select\r\n                value={status}\r\n                variant=\"outlined\"\r\n                onChange={this.handleStatusChange}\r\n                id={headCell.searchID}\r\n                fullWidth\r\n              >\r\n                <MenuItem dense=\"true\" value=\"Online\">\r\n                  {\" \"}\r\n                  <Typography variant=\"caption\">Online</Typography>\r\n                </MenuItem>\r\n                <MenuItem dense=\"true\" value=\"Pending\">\r\n                  {\" \"}\r\n                  <Typography variant=\"caption\">Pending</Typography>\r\n                </MenuItem>\r\n                <MenuItem dense=\"true\" value=\"Error\">\r\n                  {\" \"}\r\n                  <Typography variant=\"caption\">Error</Typography>\r\n                </MenuItem>\r\n                <MenuItem dense=\"true\" value=\"Offline\">\r\n                  {\" \"}\r\n                  <Typography variant=\"caption\">Offline</Typography>\r\n                </MenuItem>\r\n              </Select>\r\n            ) : (\r\n              <TextField\r\n                variant=\"outlined\"\r\n                id={headCell.searchID}\r\n                size=\"small\"\r\n              />\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n\r\n        <TableCell className=\"tableHeadCell lightestGrey\" align=\"center\">\r\n          <Typography variant=\"caption\">Actions</Typography>\r\n        </TableCell>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow\r\n} from \"@material-ui/core\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport SingleTableRow from \"./SingleTableRow\";\r\nimport HeadCells from \"./HeadCells\";\r\nimport DeviceInfo from \"../model/DeviceInfo\";\r\n\r\nexport default class DevicesTable extends React.Component {\r\n  render() {\r\n    const { devices } = this.props;\r\n    return (\r\n      <>\r\n        <Box>\r\n          <TableContainer style={{ maxHeight: 500 }}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <HeadCells />\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {devices.map((device) => {\r\n                  return (\r\n                    <SingleTableRow\r\n                      key={`DeviceListRow_${device.serialNumber}`}\r\n                      deviceDetails={device}\r\n                    />\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n      </>\r\n    );\r\n  }\r\n}\r\nDevicesTable.propTypes = {\r\n  devices: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\r\n};\r\n","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport DeviceListSortSelector from \"./DeviceListSortSelector\";\r\nimport VerticalTabs from \"./VerticalTabs\";\r\nimport TabPanel from \"./TabPanel\";\r\nimport DevicesTable from \"./DevicesTable\";\r\n\r\nexport default class ContentsTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      senders: [],\r\n      receivers: [],\r\n      value: 0\r\n    };\r\n    this.dataSource = props.dataSource;\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n    this.handleSendersChange = this.handleSendersChange.bind(this);\r\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dataSource.getSenders(this.handleSendersChange);\r\n    this.dataSource.getReceivers(this.handleReceiversChange);\r\n  }\r\n\r\n  handleValueChange(tabIndex) {\r\n    this.setState({\r\n      value: tabIndex\r\n    });\r\n  }\r\n\r\n  handleSendersChange(senders) {\r\n    this.setState({\r\n      senders\r\n    });\r\n  }\r\n\r\n  handleReceiversChange(receivers) {\r\n    this.setState({\r\n      receivers\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { receivers, senders, value } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        <Box style={{ display: \"flex\", flexGrow: 1, margin: \"1em 0em\" }}>\r\n          <SearchBar />\r\n          <Box className=\"alignRightFloat\">\r\n            <DeviceListSortSelector />\r\n          </Box>\r\n        </Box>\r\n        <Box style={{ display: \"flex\", flexGrow: 1, maxHeight: 500 }}>\r\n          <VerticalTabs\r\n            value={value}\r\n            setValue={this.handleValueChange}\r\n            classes={classes}\r\n          />\r\n          <TabPanel value={value} index={0}>\r\n            <DevicesTable devices={senders} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <DevicesTable devices={receivers} />\r\n          </TabPanel>\r\n        </Box>\r\n      </>\r\n    );\r\n  }\r\n}\r\nContentsTable.propTypes = {\r\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired,\r\n  classes: PropTypes.shape({\r\n    tabs: PropTypes.string\r\n  }).isRequired\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default function defaultMakeStylesTheme() {\n  return makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    },\n    tabs: {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }));\n}\n","import React from \"react\";\r\nimport { Box, Container } from \"@material-ui/core\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport TitleBox from \"./TitleBox\";\r\nimport ContentsTable from \"./ContentsTable\";\r\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\r\nimport * as useStyles from \"../DefaultMakeStylesTheme\";\r\n\r\nexport default class DeviceListPage extends React.Component {\r\n  render() {\r\n    const { dataSource } = this.props;\r\n    return (\r\n      <Container>\r\n        <DynamicBreadcrumb\r\n          breadcrumbs={[\r\n            [\"Home\", \"\"],\r\n            [\"My Devices\", \"Devices\"]\r\n          ]}\r\n        />\r\n        <Box padding=\"1em\">\r\n          <TitleBox />\r\n          <ContentsTable classes={useStyles} dataSource={dataSource} />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nDeviceListPage.propTypes = {\r\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Collapse,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  MenuItem,\r\n  Select\r\n} from \"@material-ui/core\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons/\";\r\nimport PropTypes from \"prop-types\";\r\nimport DeviceInfo from \"../model/DeviceInfo\";\r\n\r\nexport default class SelectDeviceTableRow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick() {\r\n    this.setState((state) => ({ open: !state.open }));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      deviceDetails: { channels, name },\r\n      onChange\r\n    } = this.props;\r\n    const { open } = this.state;\r\n    return (\r\n      <>\r\n        <ListItem button dense onClick={this.onClick}>\r\n          <ListItemText primary={name} />\r\n          {open ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding style={{ width: \"96%\" }}>\r\n            <ListItem divider>\r\n              <ListItemText secondary=\"Select Channel\" />\r\n              <Select defaultValue=\"\" onChange={onChange}>\r\n                {channels.map((channel) => {\r\n                  return (\r\n                    <MenuItem value={channel.id} key={`${name}_${channel.id}`}>\r\n                      {channel.port}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </ListItem>\r\n          </List>\r\n        </Collapse>\r\n      </>\r\n    );\r\n  }\r\n}\r\nSelectDeviceTableRow.propTypes = {\r\n  deviceDetails: PropTypes.instanceOf(DeviceInfo).isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport { List } from \"@material-ui/core\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport SearchBar from \"../devicelist/SearchBar\";\r\nimport SelectDeviceTableRow from \"./SelectDeviceTableRow\";\r\nimport DeviceInfo from \"../model/DeviceInfo\";\r\n\r\nexport default class SelectDevicesTable extends React.Component {\r\n  render() {\r\n    const { dataSource, name, onChange } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"subtitle\">{name}</div>\r\n        <SearchBar />\r\n        <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\r\n          <List>\r\n            {dataSource.map((device) => {\r\n              return (\r\n                <SelectDeviceTableRow\r\n                  deviceDetails={device}\r\n                  key={device.serialNumber}\r\n                  onChange={onChange}\r\n                />\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nSelectDevicesTable.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  dataSource: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport SelectDevicesTable from \"./SelectDevicesTable\";\r\nimport StreamButton from \"../general/Buttons/StreamButton\";\r\n\r\nexport default class StreamingTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      senders: [],\r\n      receivers: [],\r\n      selectedSenderID: \"\",\r\n      selectedReceiverID: \"\"\r\n    };\r\n\r\n    this.dataSource = props.dataSource;\r\n    this.handleSendersChange = this.handleSendersChange.bind(this);\r\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\r\n\r\n    this.onSenderSelected = this.onSenderSelected.bind(this);\r\n    this.onReceiverSelected = this.onReceiverSelected.bind(this);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dataSource.getSenders(this.handleSendersChange);\r\n    this.dataSource.getReceivers(this.handleReceiversChange);\r\n  }\r\n\r\n  handleSendersChange(senders) {\r\n    this.setState({\r\n      senders\r\n    });\r\n  }\r\n\r\n  handleReceiversChange(receivers) {\r\n    this.setState({\r\n      receivers\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const { selectedReceiverID, selectedSenderID } = this.state;\r\n    if (selectedReceiverID !== \"\" && selectedSenderID !== \"\") {\r\n      axios.post(\"http://localhost:8080/stream\", {\r\n        inputChannelId: selectedReceiverID,\r\n        outputChannelId: selectedSenderID\r\n      });\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  onSenderSelected(selectedSender) {\r\n    this.setState({\r\n      selectedSenderID: selectedSender.target.value\r\n    });\r\n  }\r\n\r\n  onReceiverSelected(selectedReceiver) {\r\n    this.setState({\r\n      selectedReceiverID: selectedReceiver.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { receivers, senders } = this.state;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit} id=\"createStreamForm\">\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            alignContent=\"center\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n          >\r\n            <Grid item xs={3}>\r\n              <div className=\"streamingTable\" id=\"SenderTable\">\r\n                <SelectDevicesTable\r\n                  name=\"Sender Devices\"\r\n                  dataSource={senders}\r\n                  onChange={this.onSenderSelected}\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={2}\r\n              id=\"TableStartStreamingBtn\"\r\n              justify=\"center\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              display=\"flex\"\r\n            >\r\n              <StreamButton id=\"StreamingStreamBtn\" type=\"submit\" />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <div className=\"streamingTable\" id=\"ReceiverTable\">\r\n                <SelectDevicesTable\r\n                  name=\"Receiver Devices\"\r\n                  dataSource={receivers}\r\n                  onChange={this.onReceiverSelected}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nStreamingTable.propTypes = {\r\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\r\n};\r\n","import React from \"react\";\r\nimport { TableCell, TableSortLabel, Typography } from \"@material-ui/core\";\r\nimport HeadCell from \"../model/HeadCell\";\r\n\r\nexport default class HeadCells extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.headcells = this.getHeadCellData();\r\n  }\r\n\r\n  getHeadCellData() {\r\n    return [\r\n      new HeadCell(\"id\", \"ID\", true, true),\r\n      new HeadCell(\"date\", \"Date\", true, true),\r\n      new HeadCell(\"sendername\", \"Sender\", false, true),\r\n      new HeadCell(\"receivername\", \"Receiver\", false, true),\r\n      new HeadCell(\"status\", \"Status\", false, true),\r\n      new HeadCell(\"type\", \"Type\", false, true),\r\n      new HeadCell(\"timeelapsed\", \"Time Elapsed\", true, true)\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <TableCell\r\n          className=\"tableHeadCell lightestGrey\"\r\n          style={{ width: 1, padding: 0, paddingLeft: 5 }}\r\n        />\r\n\r\n        {this.headcells.map((headCell) => (\r\n          <TableCell\r\n            className=\"tableHeadCell lightestGrey\"\r\n            key={headCell.id}\r\n            padding={headCell.padding ? \"default\" : \"none\"}\r\n          >\r\n            <TableSortLabel>\r\n              <Typography component=\"span\" variant=\"caption\">\r\n                {headCell.label}\r\n              </Typography>\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n        <TableCell className=\"tableHeadCell lightestGrey\" align=\"center\">\r\n          <Typography variant=\"caption\">Actions</Typography>\r\n        </TableCell>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","export default class StreamInfo {\n  // to be used once backend has date, status, type, and time fields\n  // constructor(id, date, sender, receiver, status, type, time, extras) {\n  //     this.id = id;\n  //     this.date = date;\n  //     this.sender = sender;\n  //     this.receiver = receiver;\n  //     this.status = status;\n  //     this.type = type;\n  //     this.time = time;\n  //     this.extras = extras;\n  // }\n\n  // temporary with static fields until backend is up to snuff\n  constructor(id, sender, receiver, extras) {\n    this.id = id;\n    this.date = \"2020-10-31T08:15:30\";\n    this.sender = sender;\n    this.receiver = receiver;\n    this.status = \"Online\";\n    this.type = \"Type 1\";\n    this.time = \"00:34:44\";\n    this.extras = extras;\n  }\n}\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Collapse,\r\n  IconButton,\r\n  TableCell,\r\n  TableRow,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons/\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport StatusIndicator from \"../general/StatusIndicator\";\r\nimport ActionButtons from \"./ActionButtons\";\r\nimport StreamInfo from \"../model/StreamInfo\";\r\n\r\nexport default class SingleStreamRow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n\r\n  rowExtras(extras) {\r\n    return extras.join(\" \");\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      streamDetails: {\r\n        date,\r\n        id,\r\n        receiver: { name: receiverName },\r\n        sender: { name: senderName },\r\n        status,\r\n        type,\r\n        time,\r\n        extras\r\n      }\r\n    } = this.props;\r\n    const { open } = this.state;\r\n    return (\r\n      <>\r\n        <TableRow key={id} className=\"singleStreamRow\">\r\n          <TableCell\r\n            className=\"tableCell dropdownButton\"\r\n            style={{ width: 1, padding: 0, paddingLeft: 5 }}\r\n          >\r\n            <IconButton onClick={() => this.setState({ open: !open })}>\r\n              {open ? <ExpandLess /> : <ExpandMore />}\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell className=\"tableCell numeric\">{id}</TableCell>\r\n          <TableCell className=\"tableCell\">{date}</TableCell>\r\n          <TableCell className=\"tableCell\">{senderName}</TableCell>\r\n          <TableCell className=\"tableCell\">{receiverName}</TableCell>\r\n          <TableCell className=\"tableCell\">\r\n            <StatusIndicator status={status} />\r\n          </TableCell>\r\n          <TableCell className=\"tableCell\">{type}</TableCell>\r\n          <TableCell className=\"tableCell\">{time}</TableCell>\r\n          <TableCell className=\"tableCell actionButtons\">\r\n            {ActionButtons()}\r\n          </TableCell>\r\n        </TableRow>\r\n        <TableRow className=\"streamDetails\">\r\n          <TableCell className=\"chevronText lightestGrey\" colSpan={9}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={2}>\r\n                <Typography variant=\"caption\">\r\n                  {this.rowExtras(extras)}\r\n                </Typography>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      </>\r\n    );\r\n  }\r\n}\r\nSingleStreamRow.propTypes = {\r\n  streamDetails: PropTypes.instanceOf(StreamInfo).isRequired\r\n};\r\n","import React from \"react\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { Block, Pause, Sync } from \"@material-ui/icons\";\r\n\r\nexport default function ActionButtons() {\r\n  return (\r\n    <>\r\n      <div align=\"center\">\r\n        <IconButton>\r\n          <Sync />\r\n        </IconButton>\r\n        <IconButton>\r\n          <Pause />\r\n        </IconButton>\r\n        <IconButton>\r\n          <Block />\r\n        </IconButton>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport HeadCells from \"./HeadCells\";\r\nimport SingleStreamRow from \"./SingleStreamRow\";\r\n\r\nexport default class StreamsTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      streams: []\r\n    };\r\n    this.dataSource = props.dataSource;\r\n    this.handleStreamsChange = this.handleStreamsChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dataSource.getAllStreams(this.handleStreamsChange);\r\n  }\r\n\r\n  handleStreamsChange(streams) {\r\n    this.setState({\r\n      streams\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { streams } = this.state;\r\n    return (\r\n      <>\r\n        <Box>\r\n          <TableContainer style={{ maxHeight: 450 }}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <HeadCells />\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {streams.map((stream) => {\r\n                  return (\r\n                    <SingleStreamRow key={stream.id} streamDetails={stream} />\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n      </>\r\n    );\r\n  }\r\n}\r\nStreamsTable.propTypes = {\r\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\r\n};\r\n","import React from \"react\";\r\nimport { Box, Container } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as useStyles from \"../DefaultMakeStylesTheme\";\r\nimport StreamsTable from \"./StreamsTable\";\r\n\r\nexport default function StreamList(props) {\r\n  const { dataSource } = props;\r\n  return (\r\n    <Container>\r\n      <Box className=\"headerArea\">\r\n        <div className=\"title\">Current Streams</div>\r\n      </Box>\r\n      <StreamsTable classes={useStyles} dataSource={dataSource} />\r\n    </Container>\r\n  );\r\n}\r\nStreamList.propTypes = {\r\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\r\n};\r\n","import React from \"react\";\r\nimport { Box, Container } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport StreamingTable from \"./StreamingTable\";\r\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\r\nimport StreamList from \"../streamlist/StreamList\";\r\n\r\nexport default class StreamingPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.dataSource = props.deviceDataSource;\r\n  }\r\n\r\n  render() {\r\n    const { deviceDataSource, streamDataSource } = this.props;\r\n    return (\r\n      <Container>\r\n        <DynamicBreadcrumb\r\n          breadcrumbs={[\r\n            [\"Home\", \"\"],\r\n            [\"My Devices\", \"Devices\"],\r\n            [\"Streaming\", \"Streaming\"]\r\n          ]}\r\n        />\r\n        <Box padding=\"1em\">\r\n          <Box className=\"flexContents headerArea\">\r\n            <div className=\"title\">Streaming</div>\r\n          </Box>\r\n          <div id=\"StreamingTable\">\r\n            <StreamingTable dataSource={deviceDataSource} />\r\n          </div>\r\n        </Box>\r\n        <Box>\r\n          <StreamList dataSource={streamDataSource} />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nStreamingPage.propTypes = {\r\n  deviceDataSource: PropTypes.objectOf(PropTypes.func).isRequired,\r\n  streamDataSource: PropTypes.objectOf(PropTypes.func).isRequired\r\n};\r\n","import DeviceInfo from \"../model/DeviceInfo\";\r\nimport OutChannelInfo from \"../model/OutputChannelInfo\";\r\nimport InChannelInfo from \"../model/InputChannelInfo\";\r\nimport StreamInfo from \"../model/StreamInfo\";\r\n\r\nconst extras = [\"Additional Device details go here\"];\r\nconst sampleInputChannels = [\r\n  new InChannelInfo(1, \"Input ch 1\", 500, null),\r\n  new InChannelInfo(2, \"Input ch 2\", 456, null),\r\n  new InChannelInfo(3, \"Input ch 3\", 800, null)\r\n];\r\nconst sampleOutputChannels = [\r\n  new OutChannelInfo(1, \"Output ch 1\", 500, null),\r\n  new OutChannelInfo(2, \"Output ch 2\", 456, null),\r\n  new OutChannelInfo(3, \"Output ch 3\", 800, null)\r\n];\r\n\r\nexport function getSenders(callback) {\r\n  const sampleSenders = [\r\n    new DeviceInfo(\r\n      \"1:10:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Sender 1\",\r\n      \"Online\",\r\n      sampleOutputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:20:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Sender 2\",\r\n      \"Error\",\r\n      sampleOutputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:30:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Sender 3\",\r\n      \"Offline\",\r\n      sampleOutputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:40:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Sender 4\",\r\n      \"Pending\",\r\n      sampleOutputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:50:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Sender 5\",\r\n      \"Online\",\r\n      sampleOutputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:60:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Sender 6\",\r\n      \"Error\",\r\n      sampleOutputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:70:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Sender 7\",\r\n      \"Offline\",\r\n      sampleOutputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:80:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Sender 8\",\r\n      \"Pending\",\r\n      sampleOutputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:90:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Sender 9\",\r\n      \"Online\",\r\n      sampleOutputChannels,\r\n      extras\r\n    )\r\n  ];\r\n\r\n  callback(sampleSenders);\r\n}\r\n\r\nexport function getReceivers(callback) {\r\n  const sampleReceivers = [\r\n    new DeviceInfo(\r\n      \"1:01:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 1\",\r\n      \"Online\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:02:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 2\",\r\n      \"Error\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:03:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 3\",\r\n      \"Offline\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:04:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 4\",\r\n      \"Pending\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:05:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 5\",\r\n      \"Online\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:06:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 6\",\r\n      \"Error\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:07:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 7\",\r\n      \"Offline\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:08:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 8\",\r\n      \"Pending\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:09:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 9\",\r\n      \"Online\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:11:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 11\",\r\n      \"Online\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:21:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 12\",\r\n      \"Error\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:31:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 13\",\r\n      \"Offline\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:41:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 14\",\r\n      \"Pending\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:51:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 15\",\r\n      \"Online\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:61:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 16\",\r\n      \"Error\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:71:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 17\",\r\n      \"Offline\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:81:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 18\",\r\n      \"Pending\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:91:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 19\",\r\n      \"Online\",\r\n      sampleInputChannels,\r\n      extras\r\n    )\r\n  ];\r\n\r\n  callback(sampleReceivers);\r\n}\r\n\r\nexport function getAllStreams(callback) {\r\n  const sampleSenders = [\r\n    new DeviceInfo(\r\n      \"1:10:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Sender 1\",\r\n      \"Online\",\r\n      sampleOutputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:20:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Sender 2\",\r\n      \"Error\",\r\n      sampleOutputChannels,\r\n      extras\r\n    )\r\n  ];\r\n  const sampleReceivers = [\r\n    new DeviceInfo(\r\n      \"1:01:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 1\",\r\n      \"Online\",\r\n      sampleInputChannels,\r\n      extras\r\n    ),\r\n    new DeviceInfo(\r\n      \"1:02:111:999\",\r\n      null,\r\n      \"123:456\",\r\n      \"Receiver 2\",\r\n      \"Error\",\r\n      sampleInputChannels,\r\n      extras\r\n    )\r\n  ];\r\n\r\n  const sampleStreams = [\r\n    new StreamInfo(1, sampleSenders[0], sampleReceivers[0], [\r\n      \"Additional Stream Details go here\"\r\n    ]),\r\n    new StreamInfo(2, sampleSenders[1], sampleReceivers[1], [\r\n      \"Additional Stream Details go here\"\r\n    ]),\r\n    new StreamInfo(3, sampleSenders[1], sampleReceivers[0], [\r\n      \"Additional Stream Details go here\"\r\n    ])\r\n  ];\r\n\r\n  callback(sampleStreams);\r\n}\r\n","import axios from \"axios\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport * as SampleData from \"./SampleData\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\n\nexport function getSenders(callback) {\n  axios\n    .get(\"http://localhost:8080/encoder\")\n    .then((senders) => {\n      callback(\n        senders.data.map((sender) => {\n          const channels = sender.outputs.map((output) => {\n            return new OutputChannelInfo(\n              output.id,\n              output.name,\n              output.port,\n              null\n            );\n          });\n          return new DeviceInfo(\n            sender.serialNumber,\n            \"Last Communication\",\n            sender.device.ipAddress,\n            sender.device.displayName,\n            \"Online\",\n            channels,\n            [\"Sample sender\"]\n          );\n        })\n      );\n    })\n    .catch((error) => {\n      SampleData.getSenders(callback);\n    });\n}\n\nexport function getReceivers(callback) {\n  axios\n    .get(\"http://localhost:8080/decoder\")\n    .then((receivers) => {\n      callback(\n        receivers.data.map((receiver) => {\n          const channels = receiver.inputs.map((input) => {\n            return new InputChannelInfo(input.id, input.name, input.port, null);\n          });\n          return new DeviceInfo(\n            receiver.serialNumber,\n            \"Last Communication\",\n            receiver.device.ipAddress,\n            receiver.device.displayName,\n            \"Online\",\n            channels,\n            [\"Sample Reciever\"]\n          );\n        })\n      );\n    })\n    .catch((error) => {\n      SampleData.getReceivers(callback);\n    });\n}\n","import DeviceInfo from \"./DeviceInfo\";\r\n\r\nexport function convertToDataObject(databaseDevice) {\r\n  return new DeviceInfo(\r\n    databaseDevice.serialNumber,\r\n    databaseDevice.lastCommunication,\r\n    databaseDevice.device.ipAddress,\r\n    databaseDevice.device.displayName,\r\n    databaseDevice.device.status,\r\n    databaseDevice.inputs\r\n  );\r\n}\r\n\r\nexport function convertToServiceObject(deviceInfo) {\r\n  if (Object.prototype.hasOwnProperty.call(deviceInfo, \"outputs\")) {\r\n    return {\r\n      serialNumber: deviceInfo.serialNumber,\r\n      lastCommunication: deviceInfo.lastCommunication,\r\n      device: {\r\n        serialNumber: deviceInfo.serialNumber,\r\n        ipAddress: deviceInfo.ip,\r\n        displayName: deviceInfo.name,\r\n        status: deviceInfo.status\r\n      },\r\n      outputs: deviceInfo.channels\r\n    };\r\n  }\r\n  return {\r\n    serialNumber: deviceInfo.serialNumber,\r\n    lastCommunication: deviceInfo.lastCommunication,\r\n    device: {\r\n      serialNumber: deviceInfo.serialNumber,\r\n      ipAddress: deviceInfo.ip,\r\n      displayName: deviceInfo.name,\r\n      status: deviceInfo.status\r\n    },\r\n    inputs: deviceInfo.channels\r\n  };\r\n}\r\n","import axios from \"axios\";\r\nimport { convertToDataObject } from \"../model/ConvertDataFormat\";\r\nimport StreamInfo from \"../model/StreamInfo\";\r\nimport * as SampleData from \"./SampleData\";\r\n\r\nexport function getAllStreams(callback) {\r\n  axios\r\n    .get(\"http://localhost:8080/stream\")\r\n    .then((streams) => {\r\n      Promise.all(\r\n        streams.data.map((streamId) => {\r\n          return getStream(streamId);\r\n        })\r\n      ).then(callback);\r\n    })\r\n    .catch((error) => {\r\n      SampleData.getAllStreams(callback);\r\n    });\r\n}\r\n\r\nexport function getStream(streamId) {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(`http://localhost:8080/stream/${streamId}`)\r\n      .then((response) => {\r\n        const stream = response.data;\r\n        resolve(\r\n          new StreamInfo(\r\n            stream.id,\r\n            convertToDataObject(stream.outputChannel.encoder),\r\n            convertToDataObject(stream.inputChannel.decoder),\r\n            [\"Additional stream info goes here.\"]\r\n          )\r\n        );\r\n      })\r\n      .catch(reject);\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport HeaderBar from \"./general/HeaderBar\";\r\nimport HomePage from \"./general/HomePage\";\r\nimport DeviceListPage from \"./devicelist/DeviceListPage\";\r\nimport StreamingTablePage from \"./createStream/StreamingPage\";\r\nimport * as DeviceApi from \"./api/DeviceApi\";\r\nimport * as StreamApi from \"./api/StreamApi\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <HeaderBar />\r\n      <Switch>\r\n        <Route exact path={[\"/\", \"/Home\"]} component={HomePage} />\r\n        <Route\r\n          exact\r\n          path=\"/Devices\"\r\n          render={(props) => (\r\n            <DeviceListPage {...props} dataSource={DeviceApi} />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/Streaming\"\r\n          render={(props) => (\r\n            <StreamingTablePage\r\n              {...props}\r\n              deviceDataSource={DeviceApi}\r\n              streamDataSource={StreamApi}\r\n            />\r\n          )}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}