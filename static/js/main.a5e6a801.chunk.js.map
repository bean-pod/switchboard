{"version":3,"sources":["api/AuthenticationUtil.js","app/ProtectedRoute.jsx","model/DeviceInfo.js","model/StreamInfo.js","general/DynamicBreadcrumb.jsx","general/Buttons/StreamButton.jsx","general/TitleButtons.jsx","general/Title.jsx","api/AuthenticationApi.js","general/LogoutMenu/LogoutMenu.jsx","general/LogoutMenu/LogoutMenuOpener.jsx","general/HeaderBar.jsx","general/Page.jsx","login/LoginFailedDialog.jsx","login/LoginConsole.jsx","login/LoginPageContents.jsx","login/LoginPage.jsx","general/dashboard/GridColumn.jsx","general/dashboard/ButtonInfo.js","general/dashboard/SmallCardButton.jsx","general/dashboard/DashboardCard.jsx","general/dashboard/DashboardButton.jsx","general/SnackbarMessage.jsx","streamlist/StreamsTable.jsx","streamlist/StreamsTableWrapper.jsx","general/StatusIndicator.jsx","general/Buttons/DetailsButton.jsx","streamlist/StreamDetailsButton.jsx","model/StreamStatistics/StreamStatisticsInfo.js","model/StreamStatistics/StreamStatsSendInfo.js","model/StreamStatistics/StreamStatsReceiveInfo.js","model/StreamStatistics/StreamStatsLinkInfo.js","model/StreamStatistics/StreamStatsWindowInfo.js","model/ConvertDataFormat.js","api/StreamApi.js","streamlist/SimpleStreamsTableWrapper.jsx","homepage/ActiveStreamCard.jsx","homepage/ActivityLogCard.jsx","homepage/DevicesCard.jsx","homepage/AdminPanelCard.jsx","homepage/HomePageContents.jsx","homepage/HomePage.jsx","model/OutputChannelInfo.js","model/InputChannelInfo.js","api/DeviceApi.js","devicelist/StyledInput.jsx","devicelist/DeviceTableTitle.jsx","devicelist/ChannelDetailsTableHead.jsx","devicelist/ChannelDetailsTableRow.jsx","devicelist/ChannelDetailsTable.jsx","devicelist/DeviceDetailsButton.jsx","devicelist/DevicesTable.jsx","devicelist/DeviceListPageContents.jsx","devicelist/DeviceListPage.jsx","deviceDetailsPage/EditableName.jsx","deviceDetailsPage/StaticName.jsx","deviceDetailsPage/DeviceName.jsx","deviceDetailsPage/DeviceInfoTable/DeviceInfoRow.jsx","deviceDetailsPage/DeviceInfoTable/DeviceInfoTable.jsx","deviceDetailsPage/DeviceDetailsInfoTable.jsx","deviceDetailsPage/cards/DeviceInfoCard.jsx","model/LogInfo.js","model/StreamLogInfo.js","loglist/LogsTable.jsx","deviceDetailsPage/DeviceLogTableWrapper.jsx","api/LogApi.js","deviceDetailsPage/cards/DeviceLogCard.jsx","deviceDetailsPage/cards/DeviceChannelCard.jsx","api/SampleData.js","general/dialog/DialogBody.jsx","general/dialog/DialogButtons.jsx","general/dialog/Dialog.jsx","deviceDetailsPage/DeleteDeviceDialog/DeleteDeviceDialog.jsx","deviceDetailsPage/DeleteDeviceDialog/DeleteDeviceDialogOpener.jsx","deviceDetailsPage/configuration/UploadConfigDialog.jsx","deviceDetailsPage/configuration/UploadConfigDialogOpenButton.jsx","deviceDetailsPage/configuration/DownloadConfigButton.jsx","deviceDetailsPage/cards/DeviceConfigActionsCard.jsx","deviceDetailsPage/DeviceDetailsPageContents.jsx","deviceDetailsPage/DeviceDetailsPage.jsx","streamlist/DetailedStreamsTableWrapper.jsx","streamlist/StreamListPage.jsx","createStream/SelectDeviceDialog/SelectTable.jsx","createStream/SelectDeviceDialog/SelectDeviceTable.jsx","createStream/SelectDeviceDialog/SelectChannelTable.jsx","general/simpleTable/SimpleTableRow.jsx","general/simpleTable/SimpleTable.jsx","general/StreamDeviceCard.jsx","createStream/SwipeableSteps/StepperNextButton.jsx","createStream/SwipeableSteps/StepperBackButton.jsx","createStream/SwipeableSteps/SelectDeviceSwipeableSteps.jsx","createStream/SelectDeviceDialog/SelectDeviceDialog.jsx","createStream/cards/SelectedDeviceCard.jsx","createStream/cards/UnselectedDeviceCard.jsx","createStream/cards/CreateStreamCardToggler.jsx","createStream/CreateStreamDeviceCardWrapper.jsx","createStream/CreateStreamPageContents.jsx","createStream/CreateStreamPage.jsx","loglist/LogsTableWrapper.jsx","loglist/LogListPage.jsx","general/userForm/FormConsole.jsx","api/UserManagementApi.js","admin/createUser/CreateUserPageContents.jsx","admin/createUser/CreateUserPage.jsx","streamDetails/StreamDetailsDeviceCard.jsx","streamDetails/DeleteStreamDialog.jsx","streamDetails/DeleteStreamDialogOpener.jsx","streamDetails/StreamStatisticsCard.jsx","streamDetails/StreamLogTableWrapper.jsx","streamDetails/cards/StreamLogCard.jsx","streamDetails/StreamDetailsPageContents.jsx","streamDetails/StreamDetailsPage.jsx","general/PathNotFoundPage.jsx","streamDetails/DetailedStreamStatistics/StatisticsOverviewCard.jsx","streamDetails/DetailedStreamStatistics/StatisticsSendingCard.jsx","streamDetails/DetailedStreamStatistics/StatisticsReceivingCard.jsx","streamDetails/DetailedStreamStatistics/StreamStatisticsPageContents.jsx","streamDetails/DetailedStreamStatistics/StreamStatisticsPage.jsx","app/AppRouter.jsx","index.jsx"],"names":["parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","component","charCodeAt","toString","slice","join","JSON","parse","saveToken","tokenPayload","expiryDate","Date","exp","Cookies","set","expires","SameSite","getAuthorizationHeader","get","headers","Authorization","isAuthenticated","isAdmin","role","ProtectedRoute","props","bind","location","this","authenticationRequired","render","authenticated","to","pathname","path","exact","React","Component","defaultProps","DeviceInfo","serial","lastCommunication","publicIpAddress","privateIpAddress","displayName","status","channels","deviceType","extras","serialNumber","publicIp","privateIp","name","StreamInfo","id","date","sender","receiver","outputChannel","inputChannel","type","time","DynamicBreadcrumb","breadcrumbs","Box","padding","Breadcrumbs","aria-label","separator","NavigateNext","fontSize","crumb","Link","NavLink","state","Typography","color","StreamButton","StyledButton","withStyles","root","background","borderRadius","border","height","margin","zIndex","label","textTransform","Button","className","SwapHoriz","TitleButtons","activeClassName","Title","title","hasStreamButton","unknownErrorMessage","incorrectCredentialsMessage","credentials","a","authorizationHeader","auth","username","password","axios","process","then","response","AuthenticationUtil","authorization","catch","error","message","Promise","reject","Error","LogoutMenu","anchor","open","handleClose","handleLogout","Popper","anchorEl","transition","disablePortal","Grow","in","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","MenuItem","disabled","onClick","LogoutMenuOpener","anchorElement","createRef","handleOpen","setState","IconButton","ref","AccountCircle","current","HeaderBar","classes","makeStyles","theme","menuButton","marginRight","spacing","history","remove","push","AppBar","position","Toolbar","edge","Home","withRouter","Page","children","Container","useStyles","LoginFailedDialog","setOpen","closeDialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","paper","marginTop","display","flexDirection","alignItems","form","width","submit","LoginConsole","handleSubmit","useState","setUsername","setPassword","maxWidth","noValidate","onSubmit","event","preventDefault","TextField","variant","required","fullWidth","autoComplete","autoFocus","onChange","target","value","LoginPageContents","dialogOpen","dialogMessage","setDialogOpen","setDialogMessage","logIn","LoginPage","useHistory","GridColumn","Grid","item","xs","container","ButtonInfo","referenceObject","buttonText","SmallCardButton","button","size","DashboardCard","elevation","gutterBottom","justify","direction","DashboardButton","href","minWidth","undefined","openSnackbar","StreamsTable","options","toolbar","headerStyle","backgroundColor","fontWeight","filtering","draggable","icons","SortArrow","ArrowDownward","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","streams","columns","TableContainer","data","getOptions","getIcons","SnackbarMessage","reason","stat","msg","isSuccess","Snackbar","contentprops","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","CheckCircle","action","Close","snackbar","StreamsTableWrapper","dataSource","handleStreamsChange","getAllStreams","StatusIndicator","getStatusStyle","DetailsButton","navLinkInfo","tooltipTitle","Tooltip","Description","StreamDetailsButton","streamInfo","stream","StreamStatisticsInfo","window","link","send","receive","StreamStatsSendInfo","sending","packets","packetsLost","packetsDropped","packetsRetransmitted","bytes","bytesDropped","mbitRate","StreamStatsReceiveInfo","receiving","packetsBelated","bytesLost","StreamStatsLinkInfo","rtt","bandwidth","maxBandwidth","StreamStatsWindowInfo","flow","congestion","flight","convertDeviceToDataObject","databaseDevice","device","inputs","outputs","convertStatsToDataObject","databaseStats","recv","getStream","streamId","startDate","encoder","decoder","channel","port","all","deleteStream","delete","createStream","selectedReceiverID","selectedSenderID","post","inputChannelId","outputChannelId","getStreamStatistics","SimpleStreamsTableWrapper","simpleColumns","field","rowData","sorting","align","export","streamDataSource","ActiveStreamCard","ActivityLogCard","DevicesCard","AdminPanelCard","HomePageContents","HomePage","OutputChannelInfo","InputChannelInfo","getStatus","lastCommunicationString","lastCommunicationDate","now","getTime","getSenders","senders","resolve","output","configurationInstance","getReceivers","receivers","input","deviceId","updatedName","put","configFile","FormData","append","letterSpacing","lineHeight","borderColor","boxShadow","InputBase","DeviceTableTitle","handleChange","index","Select","StyledInput","ChannelDetailsTableHead","TableRow","TableCell","ChannelDetailsTableRow","ChannelDetailsTable","Table","TableHead","TableBody","DeviceDetailsButton","deviceInfo","DevicesTable","components","passedProps","lookup","Online","Pending","Offline","detailPanel","icon","ExpandMore","openIcon","ExpandLess","tooltip","search","exportButton","Filter","FilterList","Search","ResetSearch","Clear","Export","SaveAlt","devices","maxHeight","DeviceListPageContents","selected","getDevices","getTitle","handleSendersChange","handleReceiversChange","concat","DeviceListPage","EditableName","confirmEditing","deviceName","setName","cancelEditing","defaultValue","Cancel","Save","StaticName","startEditing","Edit","DeviceName","editing","startEdit","newName","oldName","DeviceApi","forceUpdate","DeviceInfoRow","getPropertyDisplayName","createInnerTable","createTableCellContents","DeviceInfoTable","properties","property","DeviceDetailsInfoTable","DeviceInfoCard","LogInfo","dateTime","level","StreamLogInfo","LogsTable","showTitle","maxBodyHeight","minBodyHeight","logs","DeviceLogTableWrapper","defaultSort","handleDeviceLogsChange","getDeviceLogs","getLogs","endpoint","log","getAllLogs","deviceSerialNumber","getStreamLogs","logEntity","DeviceLogCard","deviceLogsDataSource","DeviceChannelCard","sampleOutputChannels","InChannelInfo","OutChannelInfo","getSampleSender","DialogBody","DialogButtons","button1","button2","Dialog","openDialog","actionButton","isError","aria-labelledby","aria-describedby","DeleteDeviceDialog","dialogElement","confirmDelete","DeleteDeviceDialogOpener","startIcon","UploadConfigDialog","file","handleUpload","files","uploadConfiguration","finally","Input","disableUnderline","UploadConfigDialogOpenButton","CloudUpload","DownloadConfigButton","handleDownload","filename","element","document","createElement","setAttribute","body","appendChild","click","removeChild","GetApp","DeviceConfigActionsCard","DeviceDetailsPageContents","DeviceDetailsPage","DetailedStreamsTableWrapper","detailedColumns","StreamListPage","SelectTable","handleListItemClick","setIndex","selectedIndex","items","List","ListItem","ListItemText","primary","SelectDeviceTable","deviceNames","deviceList","SelectChannelTable","channelNames","deviceIndex","SimpleTableRow","alignment","SimpleTable","propertiesArr","Object","keys","propertyName","propertyPair","StreamDeviceCard","Name","Channel","StepperNextButton","isLast","handleNext","handleClick","KeyboardArrowRight","StepperBackButton","isFirst","handleBack","KeyboardArrowLeft","SelectDeviceSwipeableSteps","activeStep","steps","getNextButton","getBackButton","previousStep","maxSteps","length","disableNext","channelIndex","setDeviceIndex","setChannelIndex","axis","enableMouseEvents","MobileStepper","nextButton","backButton","SelectDeviceDialog","SelectedDeviceCard","channelId","UnselectedDeviceCard","CreateStreamCardToggler","CreateStreamDeviceCardWrapper","CreateStreamPageContents","senderDeviceIndex","senderChannelIndex","receiverDeviceIndex","receiverChannelIndex","setSenders","setReceivers","setSenderDeviceIndex","setReceiverDeviceIndex","setSenderChannelIndex","setReceiverChannelIndex","recieverChannel","senderChannel","textAlign","Forward","CreateStreamPage","LogsTableWrapper","cellStyle","logsDataSource","handleLogsChange","LogListPage","FormConsole","passwordErrorCondition","setPasswordError","passwordOnChange","passwordError","upperbound","lowerbound","buttonName","isValidate","passwordInputProps","passwordHelperText","inputProps","helperText","userRole","createUser","CreateUserPageContents","maxLength","minLength","CreateUserPage","StreamDetailsDeviceCard","cardTitle","DeleteStreamDialog","deleteId","DeleteStreamDialogOpener","StreamStatisticsCard","stats","handleStatsChange","getProperties","getButton","Time","statistics","StreamLogTableWrapper","handleStreamLogsChange","StreamLogCard","streamLogsDataSource","StreamDetailsPageContents","StreamDetailsPage","PathNotFoundPage","StatisticsOverviewCard","Flow","Congestion","Flight","Latency","Bandwidth","StatisticsSendingCard","Packets","Bytes","StatisticsReceivingCard","StreamStatisticsPageContents","StreamStatisticsPage","AppRouter","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a5e6a801.chunk.js","sourcesContent":["import Cookies from \"js-cookie\";\n\nfunction parseJwt(token) {\n  const base64Url = token.split(\".\")[1];\n  const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  const jsonPayload = decodeURIComponent(\n    atob(base64)\n      .split(\"\")\n      .map((c) => {\n        const component = `00${c.charCodeAt(0).toString(16)}`;\n        return `%${component.slice(-2)}`;\n      })\n      .join(\"\")\n  );\n\n  return JSON.parse(jsonPayload);\n}\n\nexport function saveToken(token) {\n  const tokenPayload = parseJwt(token.split(\" \")[1]);\n  const expiryDate = new Date(tokenPayload.exp * 1000);\n  Cookies.set(\"authToken\", token, { expires: expiryDate, SameSite: \"Strict\" });\n}\n\nexport function getAuthorizationHeader() {\n  const token = Cookies.get(\"authToken\");\n  return {\n    headers: { Authorization: `${token}` }\n  };\n}\n\nexport function isAuthenticated() {\n  return !!Cookies.get(\"authToken\");\n}\n\nexport function isAdmin() {\n  const token = Cookies.get(\"authToken\");\n  const tokenPayload = parseJwt(token.split(\" \")[1]);\n  return tokenPayload.role === \"ADMIN\" || tokenPayload.role === \"SUPERUSER\";\n}\n\nexport default {\n  saveToken,\n  getAuthorizationHeader\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\n\nexport default class ProtectedRoute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.component = this.component.bind(this);\n  }\n\n  component(location) {\n    const { authenticationRequired, render } = this.props;\n    const authenticated = isAuthenticated();\n\n    if (authenticationRequired) {\n      if (authenticated) {\n        return render(location);\n      }\n\n      return <Redirect to={{ pathname: \"/Login\" }} />;\n    }\n\n    if (authenticated) {\n      return <Redirect to={{ pathname: \"/Home\" }} />;\n    }\n\n    return render(location);\n  }\n\n  render() {\n    const { path } = this.props;\n    return (\n      <Route\n        exact\n        path={path}\n        render={({ location }) => this.component(location)}\n      />\n    );\n  }\n}\n\nProtectedRoute.propTypes = {\n  path: PropTypes.string.isRequired,\n  authenticationRequired: PropTypes.bool,\n  render: PropTypes.func.isRequired\n};\n\nProtectedRoute.defaultProps = {\n  authenticationRequired: false\n};\n","export default class DeviceInfo {\n  constructor(\n    serial,\n    lastCommunication,\n    publicIpAddress,\n    privateIpAddress,\n    displayName,\n    status,\n    channels,\n    deviceType,\n    extras\n  ) {\n    this.serialNumber = serial;\n    this.lastCommunication = lastCommunication;\n    this.publicIp = publicIpAddress;\n    this.privateIp = privateIpAddress;\n    this.name = displayName;\n    this.status = status;\n    this.channels = channels;\n    this.deviceType = deviceType;\n    this.extras = extras;\n  }\n}\n","export default class StreamInfo {\n  // to be used once backend has date, status, type, and time fields\n  // constructor(id, date, sender, receiver, status, type, time, extras) {\n  //     this.id = id;\n  //     this.date = new Date(date).toString().split(\" \").slice(0, 5).join(\" \");\n  //     this.sender = sender;\n  //     this.receiver = receiver;\n  //     this.status = status;\n  //     this.type = type;\n  //     this.time = time;\n  //     this.extras = extras;\n  // }\n\n  // temporary with static fields until backend is up to snuff\n  constructor(id, date, sender, receiver, outputChannel, inputChannel) {\n    this.id = id;\n    this.date = date;\n    this.sender = sender;\n    this.receiver = receiver;\n    this.outputChannel = outputChannel;\n    this.inputChannel = inputChannel;\n    this.status = \"Online\";\n    this.type = \"Type 1\";\n    this.time = \"00:34:44\";\n  }\n}\n","import React from \"react\";\nimport { Box, Breadcrumbs, Link, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport { NavigateNext } from \"@material-ui/icons\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default function DynamicBreadcrumb(props) {\n  const { breadcrumbs } = props;\n  return (\n    <Box padding=\"2em 0em 0em\">\n      <Breadcrumbs\n        aria-label=\"breadcrumb\"\n        separator={<NavigateNext fontSize=\"medium\" />}\n      >\n        {breadcrumbs.map((crumb) => {\n          return (\n            <Link\n              component={NavLink}\n              to={{\n                pathname: crumb[1],\n                state: crumb[2] ? crumb[2] : null\n              }}\n              key={`breadcrumb ${crumb[0]}`}\n            >\n              <Typography color=\"textPrimary\">{crumb[0]}</Typography>\n            </Link>\n          );\n        })}\n      </Breadcrumbs>\n    </Box>\n  );\n}\nDynamicBreadcrumb.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.objectOf(\n          PropTypes.oneOfType([\n            PropTypes.instanceOf(DeviceInfo),\n            PropTypes.instanceOf(StreamInfo)\n          ])\n        )\n      ])\n    )\n  ).isRequired\n};\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { SwapHoriz } from \"@material-ui/icons/\";\n\nexport default function StreamButton(props) {\n  const { type } = props;\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      padding: \"0 5px\",\n      margin: \"1em\",\n      zIndex: -1\n    },\n    label: {\n      textTransform: \"\"\n    }\n  })(Button);\n\n  return (\n    <StyledButton type={type}>\n      <div className=\"buttonText\">\n        <SwapHoriz />\n        Stream\n      </div>\n    </StyledButton>\n  );\n}\n\nStreamButton.propTypes = {\n  type: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport StreamButton from \"./Buttons/StreamButton\";\n\nexport default function TitleButtons() {\n  return (\n    <div className=\"alignRightFloat\">\n      <NavLink\n        to=\"/Streams/New\"\n        activeClassName=\"hideLinkStyle\"\n        className=\"hideLinkStyle\"\n        exact\n      >\n        <StreamButton type=\"submit\" />\n      </NavLink>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TitleButtons from \"./TitleButtons\";\n\nexport default function Title(props) {\n  const { title, hasStreamButton } = props;\n  return (\n    <Box className=\"flexContents headerAreaUnderline\">\n      <div className=\"title\">{title}</div>\n      {hasStreamButton ? <TitleButtons /> : <></>}\n    </Box>\n  );\n}\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  hasStreamButton: PropTypes.bool.isRequired\n};\n","import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport * as AuthenticationUtil from \"./AuthenticationUtil\";\n\nexport const unknownErrorMessage =\n  \"An unknown error occurred. Please try again later.\";\nexport const incorrectCredentialsMessage =\n  \"Incorrect username and/or password. Please enter the correct credentials and try again.\";\n\nexport async function logIn(credentials) {\n  const authorizationHeader = {\n    auth: {\n      username: credentials.username,\n      password: credentials.password\n    }\n  };\n\n  return axios\n    .get(process.env.REACT_APP_TOKEN, authorizationHeader)\n    .then((response) => {\n      AuthenticationUtil.saveToken(response.headers.authorization);\n    })\n    .catch((error) => {\n      let message = unknownErrorMessage;\n      if (error.response && error.response.status === \"403\") {\n        message = incorrectCredentialsMessage;\n      }\n      return Promise.reject(new Error(message));\n    });\n}\n\nexport function logOut() {\n  Cookies.remove(\"authToken\");\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ClickAwayListener,\n  Grow,\n  MenuItem,\n  MenuList,\n  Paper,\n  Popper,\n  Typography\n} from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function LogoutMenu(props) {\n  const { anchor, open, handleClose, handleLogout } = props;\n\n  return (\n    <Popper open={open} anchorEl={anchor} transition disablePortal>\n      <Grow in={open} style={{ transformOrigin: \"center top\" }}>\n        <Paper>\n          <ClickAwayListener onClickAway={handleClose}>\n            <MenuList autoFocusItem={open} id=\"menu-list-grow\">\n              <MenuItem disabled>\n                <Typography color=\"textSecondary\">Quick Actions</Typography>\n              </MenuItem>\n              <NavLink to=\"/Home\" className=\"hideLinkStyle\">\n                <MenuItem>\n                  <Typography color=\"textPrimary\">Dashboard</Typography>\n                </MenuItem>\n              </NavLink>\n              <NavLink to=\"/Devices\" className=\"hideLinkStyle\">\n                <MenuItem>\n                  <Typography color=\"textPrimary\">My Devices</Typography>\n                </MenuItem>\n              </NavLink>\n              <MenuItem onClick={handleLogout}>\n                <Typography color=\"error\">Logout</Typography>\n              </MenuItem>\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Grow>\n    </Popper>\n  );\n}\n\nLogoutMenu.propTypes = {\n  anchor: PropTypes.node.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleLogout: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton } from \"@material-ui/core\";\n\nimport { AccountCircle } from \"@material-ui/icons/\";\nimport LogoutMenu from \"./LogoutMenu\";\n\nexport default class LogoutMenuOpener extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n\n    this.anchorElement = React.createRef();\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleOpen() {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    const { open } = this.state;\n    const { disabled, handleLogout } = this.props;\n    return (\n      <>\n        <IconButton\n          ref={this.anchorElement}\n          id=\"acctBtn\"\n          color=\"inherit\"\n          disabled={disabled}\n          onClick={this.handleOpen}\n        >\n          <AccountCircle />\n        </IconButton>\n        <LogoutMenu\n          anchor={this.anchorElement.current}\n          open={open}\n          handleLogout={handleLogout}\n          handleClose={this.handleClose}\n        />\n      </>\n    );\n  }\n}\n\nLogoutMenuOpener.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  handleLogout: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport { AppBar, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\nimport { Home } from \"@material-ui/icons/\";\n\nimport { logOut } from \"../api/AuthenticationApi\";\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\nimport LogoutMenuOpener from \"./LogoutMenu/LogoutMenuOpener\";\n\nclass HeaderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      menuButton: {\n        marginRight: theme.spacing(2)\n      }\n    }));\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout() {\n    const { history } = this.props;\n    logOut();\n    history.push(\"/Login\");\n  }\n\n  render() {\n    return (\n      <div className=\"headerBar\">\n        <AppBar position=\"static\">\n          <Toolbar className=\"darkGrey\">\n            <div className=\"headerTitle\">\n              <NavLink to=\"/Home\" className=\"headerTitle\">\n                <IconButton\n                  edge=\"start\"\n                  className={this.classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"home\"\n                >\n                  <Home />\n                </IconButton>\n              </NavLink>\n              Switchboard\n            </div>\n            <LogoutMenuOpener\n              disabled={!isAuthenticated()}\n              handleLogout={this.handleLogout}\n            />\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\nexport default withRouter(HeaderBar);\n\nHeaderBar.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"@material-ui/core\";\nimport DynamicBreadcrumb from \"./DynamicBreadcrumb\";\nimport Title from \"./Title\";\nimport HeaderBar from \"./HeaderBar\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default function Page(props) {\n  const { breadcrumbs, title, hasStreamButton, children } = props;\n  return (\n    <>\n      <HeaderBar />\n      <Container>\n        <DynamicBreadcrumb breadcrumbs={breadcrumbs} />\n        <Title title={title} hasStreamButton={hasStreamButton} />\n        {children}\n      </Container>\n    </>\n  );\n}\n\nPage.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.objectOf(\n          PropTypes.oneOfType([\n            PropTypes.instanceOf(DeviceInfo),\n            PropTypes.instanceOf(StreamInfo)\n          ])\n        )\n      ])\n    )\n  ).isRequired,\n  title: PropTypes.string.isRequired,\n  hasStreamButton: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\nPage.defaultProps = {\n  hasStreamButton: false\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    color: \"#ef5350\"\n  }\n}));\n\nexport default function LoginFailedDialog(props) {\n  const classes = useStyles();\n  const { open, setOpen, message } = props;\n\n  const closeDialog = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Dialog open={open} onClose={closeDialog}>\n        <DialogTitle id=\"login-failed-dialog-title\" className={classes.title}>\n          Login Failed\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"login-failed-dialog-description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nLoginFailedDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired\n};\n","import React, { useState } from \"react\";\nimport { Button, Container, makeStyles, TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function LoginConsole(props) {\n  const { handleSubmit } = props;\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit(username, password);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nLoginConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport LoginFailedDialog from \"./LoginFailedDialog\";\nimport LoginConsole from \"./LoginConsole\";\nimport { logIn } from \"../api/AuthenticationApi\";\n\nexport default class LoginPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogOpen: false,\n      dialogMessage: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setDialogOpen = this.setDialogOpen.bind(this);\n    this.setDialogMessage = this.setDialogMessage.bind(this);\n  }\n\n  handleSubmit(username, password) {\n    const { history } = this.props;\n    logIn({ username, password })\n      .then(() => {\n        history.push(\"/Home\");\n      })\n      .catch((error) => {\n        this.setState({\n          dialogOpen: true,\n          dialogMessage: error.message\n        });\n      });\n  }\n\n  setDialogOpen(open) {\n    this.setState({\n      dialogOpen: open\n    });\n  }\n\n  setDialogMessage(message) {\n    this.setState({\n      dialogMessage: message\n    });\n  }\n\n  render() {\n    const { dialogOpen, dialogMessage } = this.state;\n    return (\n      <>\n        <LoginConsole handleSubmit={this.handleSubmit} />\n        <LoginFailedDialog\n          open={dialogOpen}\n          setOpen={this.setDialogOpen}\n          message={dialogMessage}\n        />\n      </>\n    );\n  }\n}\n\nLoginPageContents.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Page from \"../general/Page\";\nimport LoginPageContents from \"./LoginPageContents\";\n\nexport default function LoginPage() {\n  const history = useHistory();\n\n  return (\n    <Page title=\"Login\" breadcrumbs={[]}>\n      <LoginPageContents history={history} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function GridColumn(props) {\n  const { width, spacing, children } = props;\n  return (\n    <Grid item xs={width}>\n      <Grid container spacing={spacing}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\nGridColumn.propTypes = {\n  width: PropTypes.number.isRequired,\n  spacing: PropTypes.number,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nGridColumn.defaultProps = {\n  spacing: 3\n};\n","export default class ButtonInfo {\n  constructor(pathname, referenceObject, buttonText, onClick) {\n    this.pathname = pathname;\n    this.referenceObject = referenceObject;\n    this.buttonText = buttonText;\n    this.onClick = onClick;\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport ButtonInfo from \"./ButtonInfo\";\n\nexport default function SmallCardButton(props) {\n  const {\n    button: { pathname, referenceObject, buttonText, onClick }\n  } = props;\n\n  if (onClick) {\n    return (\n      <Button variant=\"contained\" size=\"small\" onClick={onClick}>\n        {buttonText}\n      </Button>\n    );\n  }\n\n  return (\n    <NavLink\n      activeClassName=\"hideLinkStyle\"\n      className=\"hideLinkStyle\"\n      to={{\n        pathname,\n        state: referenceObject\n      }}\n    >\n      <Button variant=\"contained\" size=\"small\">\n        {buttonText}\n      </Button>\n    </NavLink>\n  );\n}\n\nSmallCardButton.propTypes = {\n  button: PropTypes.instanceOf(ButtonInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Typography, Paper, Grid, Box } from \"@material-ui/core\";\nimport SmallCardButton from \"./SmallCardButton\";\nimport ButtonInfo from \"./ButtonInfo\";\n\nexport default function DashboardCard(props) {\n  const { title, children, button } = props;\n  return (\n    <Paper className=\"dashboardCard\" elevation={2}>\n      <Typography variant=\"h5\" gutterBottom>\n        {title}\n      </Typography>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        {children}\n        {button ? (\n          <Grid item xs={12}>\n            <Box className=\"alignRightFloatPadded\">\n              <SmallCardButton button={button} />\n            </Box>\n          </Grid>\n        ) : null}\n      </Grid>\n    </Paper>\n  );\n}\n\nDashboardCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]),\n  button: PropTypes.instanceOf(ButtonInfo)\n};\n\nDashboardCard.defaultProps = {\n  children: \"\",\n  button: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Link, Button, withStyles } from \"@material-ui/core\";\n\nexport default function DashboardButton(props) {\n  const { href, children } = props;\n\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      minWidth: 100,\n      maxWidth: 200,\n      padding: \"0 5px\",\n      textTransform: \"none\"\n    }\n  })(Button);\n  return (\n    <Link color=\"inherit\" href={href}>\n      <StyledButton>{children}</StyledButton>\n    </Link>\n  );\n}\n\nDashboardButton.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Snackbar, SnackbarContent, IconButton, Box } from \"@material-ui/core\";\nimport { CheckCircle, Error, Close } from \"@material-ui/icons\";\n\nlet openSnackbar;\n\nexport default class SnackbarMessage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      status: \"\",\n      message: \"\"\n    };\n    this.openSnackbar = this.openSnackbar.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  componentDidMount() {\n    openSnackbar = this.openSnackbar;\n  }\n\n  handleClose(event, reason) {\n    if (reason !== \"clickaway\") {\n      this.setState({\n        open: false\n      });\n    }\n  }\n\n  openSnackbar(stat, msg) {\n    this.setState({\n      open: true,\n      status: stat,\n      message: msg\n    });\n  }\n\n  render() {\n    const { open, status, message } = this.state;\n    const isSuccess = status === \"success\";\n    return (\n      <>\n        <Snackbar\n          contentprops={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={open}\n          autoHideDuration={3000}\n          onClose={this.handleClose}\n        >\n          <SnackbarContent\n            style={{\n              backgroundColor: isSuccess ? \"#4caf50\" : \"#f44336\"\n            }}\n            // prettier-ignore\n            message={(\n              <Box id='message-id' className=\"snackMessage\">\n                {isSuccess ? \n                  <CheckCircle className=\"iconPadding\" /> : \n                  <Error className=\"iconPadding\" />}\n                {message}\n              </Box>\n            )}\n            action={[\n              <IconButton\n                key=\"close\"\n                aria-label=\"Close\"\n                color=\"inherit\"\n                onClick={this.handleClose}\n              >\n                <Close />\n              </IconButton>\n            ]}\n          />\n        </Snackbar>\n      </>\n    );\n  }\n}\n\nexport function snackbar(status, message) {\n  openSnackbar(status, message);\n}\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  ArrowDownward,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default class StreamsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = {\n      toolbar: false,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: false,\n      draggable: false\n    };\n    this.icons = {\n      SortArrow: ArrowDownward,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  getIcons() {\n    return this.icons;\n  }\n\n  render() {\n    const { streams, columns } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer>\n            <MaterialTable\n              columns={columns}\n              data={streams}\n              options={this.getOptions()}\n              icons={this.getIcons()}\n            />\n          </TableContainer>\n        </Box>\n      </>\n    );\n  }\n}\n\nStreamsTable.propTypes = {\n  streams: PropTypes.arrayOf(PropTypes.instanceOf(StreamInfo)).isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      field: PropTypes.string.isRequired,\n      filtering: PropTypes.bool,\n      sorting: PropTypes.bool,\n      render: PropTypes.func,\n      align: PropTypes.string,\n      export: PropTypes.bool\n    })\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StreamsTable from \"./StreamsTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class StreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: []\n    };\n    this.dataSource = props.dataSource;\n    this.handleStreamsChange = this.handleStreamsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource\n      .getAllStreams()\n      .then(this.handleStreamsChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch streams: ${error.message}`);\n      });\n  }\n\n  handleStreamsChange(streams) {\n    this.setState({\n      streams\n    });\n  }\n\n  render() {\n    const { streams } = this.state;\n    const { columns } = this.props;\n    return <StreamsTable streams={streams} columns={columns} />;\n  }\n}\n\nStreamsTableWrapper.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      field: PropTypes.string.isRequired,\n      filtering: PropTypes.bool,\n      sorting: PropTypes.bool,\n      render: PropTypes.func,\n      align: PropTypes.string,\n      export: PropTypes.bool\n    })\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class StatusIndicator extends React.Component {\n  getStatusStyle() {\n    const { status } = this.props;\n    switch (status) {\n      case \"Online\":\n        return \"green statusIndicatorBody statusTextOnline \";\n      case \"Pending\":\n        return \"yellow statusIndicatorBody statusTextOnline\";\n      case \"Error\":\n        return \"red statusIndicatorBody statusTextOnline\";\n      default:\n        return \"lightGrey statusIndicatorBody statusTextOffline\";\n    }\n  }\n\n  render() {\n    const { status } = this.props;\n    return <div className={this.getStatusStyle()}>{status}</div>;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.oneOf([\"Online\", \"Offline\", \"Error\", \"Pending\"]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { Description } from \"@material-ui/icons\";\nimport { NavLink } from \"react-router-dom\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport StreamInfo from \"../../model/StreamInfo\";\n\nexport default function DetailsButton(props) {\n  const { navLinkInfo, tooltipTitle } = props;\n\n  return (\n    <>\n      <NavLink to={navLinkInfo}>\n        <Tooltip title={tooltipTitle}>\n          <IconButton>\n            <Description />\n          </IconButton>\n        </Tooltip>\n      </NavLink>\n    </>\n  );\n}\n\nDetailsButton.propTypes = {\n  navLinkInfo: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    state: PropTypes.oneOfType([\n      PropTypes.shape({\n        device: PropTypes.instanceOf(DeviceInfo)\n      }),\n      PropTypes.shape({\n        stream: PropTypes.instanceOf(StreamInfo)\n      })\n    ])\n  }).isRequired,\n  tooltipTitle: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StreamInfo from \"../model/StreamInfo\";\nimport DetailsButton from \"../general/Buttons/DetailsButton\";\n\nexport default function StreamDetailsButton(props) {\n  const { streamInfo } = props;\n\n  const navLinkInfo = {\n    pathname: `/Streams/Details/${streamInfo.id}`,\n    state: { stream: streamInfo }\n  };\n\n  return (\n    <>\n      <DetailsButton\n        navLinkInfo={navLinkInfo}\n        tooltipTitle=\"View Stream Details\"\n      />\n    </>\n  );\n}\n\nStreamDetailsButton.propTypes = {\n  streamInfo: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","export default class StreamStatisticsInfo {\n  constructor(id, time, window, link, send, receive) {\n    this.id = id;\n    this.time = time;\n    this.window = window;\n    this.link = link;\n    this.send = send;\n    this.receive = receive;\n  }\n}\n","export default class StreamStatsSendInfo {\n  constructor(sending) {\n    this.packets = sending.packets;\n    this.packetsLost = sending.packetsLost;\n    this.packetsDropped = sending.packetsDropped;\n    this.packetsRetransmitted = sending.packetsRetransmitted;\n    this.bytes = sending.bytes;\n    this.bytesDropped = sending.bytesDropped;\n    this.mbitRate = sending.mbitRate;\n  }\n}\n","export default class StreamStatsReceiveInfo {\n  constructor(receiving) {\n    this.packets = receiving.packets;\n    this.packetsLost = receiving.packetsLost;\n    this.packetsDropped = receiving.packetsDropped;\n    this.packetsRetransmitted = receiving.packetsRetransmitted;\n    this.packetsBelated = receiving.packetsBelated;\n    this.bytes = receiving.bytes;\n    this.bytesLost = receiving.bytesLost;\n    this.bytesDropped = receiving.bytesDropped;\n    this.mbitRate = receiving.mbitRate;\n  }\n}\n","export default class StreamStatsLinkInfo {\n  constructor(link) {\n    this.rtt = link.rtt;\n    this.bandwidth = link.bandwidth;\n    this.maxBandwidth = link.maxBandwidth;\n  }\n}\n","export default class StreamStatsWindowInfo {\n  constructor(window) {\n    this.flow = window.flow;\n    this.congestion = window.congestion;\n    this.flight = window.flight;\n  }\n}\n","import DeviceInfo from \"./DeviceInfo\";\nimport StreamStatisticsInfo from \"./StreamStatistics/StreamStatisticsInfo\";\nimport StreamStatsSendInfo from \"./StreamStatistics/StreamStatsSendInfo\";\nimport StreamStatsReceiveInfo from \"./StreamStatistics/StreamStatsReceiveInfo\";\nimport StreamStatsLinkInfo from \"./StreamStatistics/StreamStatsLinkInfo\";\nimport StreamStatsWindowInfo from \"./StreamStatistics/StreamStatsWindowInfo\";\n\nexport function convertDeviceToDataObject(databaseDevice) {\n  return new DeviceInfo(\n    databaseDevice.serialNumber,\n    databaseDevice.lastCommunication,\n    databaseDevice.device.publicIpAddress,\n    databaseDevice.device.privateIpAddress,\n    databaseDevice.device.displayName,\n    databaseDevice.device.status,\n    databaseDevice.inputs || databaseDevice.outputs,\n    databaseDevice.inputs ? \"receiver\" : \"sender\"\n  );\n}\n\nexport function convertStatsToDataObject(databaseStats) {\n  return new StreamStatisticsInfo(\n    databaseStats.id,\n    databaseStats.time,\n    new StreamStatsWindowInfo(databaseStats.window),\n    new StreamStatsLinkInfo(databaseStats.link),\n    new StreamStatsSendInfo(databaseStats.send),\n    new StreamStatsReceiveInfo(databaseStats.recv)\n  );\n}\n\nexport function convertToServiceObject(deviceInfo) {\n  const serviceObject = {\n    serialNumber: deviceInfo.serialNumber,\n    lastCommunication: deviceInfo.lastCommunication,\n    device: {\n      serialNumber: deviceInfo.serialNumber,\n      publicIpAddress: deviceInfo.publicIp,\n      privateIpAddress: deviceInfo.privateIp,\n      displayName: deviceInfo.name,\n      status: deviceInfo.status\n    }\n  };\n  if (deviceInfo.deviceType === \"sender\") {\n    serviceObject.outputs = deviceInfo.channels;\n  } else {\n    serviceObject.inputs = deviceInfo.channels;\n  }\n  return serviceObject;\n}\n","import axios from \"axios\";\nimport {\n  convertDeviceToDataObject,\n  convertStatsToDataObject\n} from \"../model/ConvertDataFormat\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nexport async function getStream(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAM}/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      const stream = response.data;\n      return new StreamInfo(\n        stream.id,\n        stream.startDate,\n        convertDeviceToDataObject(stream.outputChannel.encoder),\n        convertDeviceToDataObject(stream.inputChannel.decoder),\n        stream.outputChannel.channel.port,\n        stream.inputChannel.channel.port\n      );\n    });\n}\n\nexport async function getAllStreams() {\n  return axios\n    .get(process.env.REACT_APP_STREAM, getAuthorizationHeader())\n    .then((streams) => {\n      return Promise.all(\n        streams.data.map((streamId) => {\n          return getStream(streamId);\n        })\n      );\n    });\n}\n\nexport async function deleteStream(streamId) {\n  return axios.delete(\n    `${process.env.REACT_APP_STREAM}/${streamId}`,\n    getAuthorizationHeader()\n  );\n}\n\nexport async function createStream(selectedReceiverID, selectedSenderID) {\n  return axios.post(\n    process.env.REACT_APP_STREAM,\n    {\n      inputChannelId: selectedReceiverID,\n      outputChannelId: selectedSenderID\n    },\n    getAuthorizationHeader()\n  );\n}\n\nexport async function getStreamStatistics(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAM}/statistics/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      const stats = response.data;\n      return convertStatsToDataObject(stats);\n    });\n}\n","import React from \"react\";\nimport StreamsTableWrapper from \"./StreamsTableWrapper\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport StreamDetailsButton from \"./StreamDetailsButton\";\nimport * as streamDataSource from \"../api/StreamApi\";\n\nexport default class SimpleStreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.simpleColumns = [\n      {\n        title: \"Sender\",\n        field: \"sender.name\"\n      },\n      {\n        title: \"Receiver\",\n        field: \"receiver.name\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        }\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <StreamDetailsButton streamInfo={rowData} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n  }\n\n  render() {\n    return (\n      <StreamsTableWrapper\n        dataSource={streamDataSource}\n        columns={this.simpleColumns}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\nimport SimpleStreamsTableWrapper from \"../streamlist/SimpleStreamsTableWrapper\";\n\nexport default function ActiveStreamCard() {\n  return (\n    <DashboardCard title=\"Active Streams\" style={{ height: \"100%\" }}>\n      <Grid item xs={12}>\n        <SimpleStreamsTableWrapper />\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Streams\">See More</DashBoardButton>\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Streams/New\">Start Stream</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function ActivityLogCard() {\n  return (\n    <DashboardCard title=\"Activity Logs\">\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Logs\">View All</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function DevicesCard() {\n  return (\n    <DashboardCard title=\"Devices\">\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Devices\">View Senders</DashBoardButton>\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Devices\">View Receivers</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function AdminPanelCard() {\n  return (\n    <DashboardCard title=\"Admin Panel\">\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Admin/New\">Create a User</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport GridColumn from \"../general/dashboard/GridColumn\";\nimport ActiveStreamCard from \"./ActiveStreamCard\";\nimport ActivityLogCard from \"./ActivityLogCard\";\nimport DevicesCard from \"./DevicesCard\";\nimport AdminPanelCard from \"./AdminPanelCard\";\n\nimport { isAdmin } from \"../api/AuthenticationUtil\";\n\nexport default function HomePageContents() {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"stretch\"\n      direction=\"row\"\n      spacing={3}\n    >\n      <Grid item xs={6}>\n        <Grid style={{ height: \"100%\" }}>\n          <ActiveStreamCard />\n        </Grid>\n      </Grid>\n      <GridColumn width={6}>\n        <Grid item xs={12}>\n          <DevicesCard />\n        </Grid>\n        <Grid item xs={12}>\n          <ActivityLogCard />\n        </Grid>\n        {isAdmin() ? (\n          <Grid item xs={12}>\n            <AdminPanelCard />\n          </Grid>\n        ) : (\n          <div />\n        )}\n      </GridColumn>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport HomePageContents from \"./HomePageContents\";\n\nexport default function HomePage() {\n  return (\n    <Page title=\"Dashboard\" breadcrumbs={[[\"Home\", \"\"]]}>\n      <HomePageContents />\n    </Page>\n  );\n}\n","export default class OutputChannelInfo {\n  constructor(id, name, port, encoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.encoder = encoder;\n  }\n}\n","export default class InputChannelInfo {\n  constructor(id, name, port, decoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.decoder = decoder;\n  }\n}\n","import axios from \"axios\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nfunction getStatus(lastCommunicationString) {\n  if (!lastCommunicationString) {\n    return \"Pending\";\n  }\n\n  const lastCommunicationDate = new Date(`${lastCommunicationString}Z`);\n  const diff = Date.now() - lastCommunicationDate.getTime();\n  const tenMinutes = 10 * 60 * 1000;\n  if (diff < tenMinutes) {\n    return \"Online\";\n  }\n  return \"Offline\";\n}\n\nexport async function getSenders() {\n  return axios\n    .get(process.env.REACT_APP_ENCODER, getAuthorizationHeader())\n    .then((senders) => {\n      return Promise.resolve(\n        senders.data.map((sender) => {\n          let channels = [];\n          if (sender.output) {\n            channels = sender.output.map((output) => {\n              return new OutputChannelInfo(\n                output.id,\n                output.channel.name,\n                output.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            sender.lastCommunication == null\n              ? \"Never\"\n              : sender.lastCommunication;\n          return new DeviceInfo(\n            sender.serialNumber,\n            lastCommunication,\n            sender.device.publicIpAddress,\n            sender.device.privateIpAddress,\n            sender.device.displayName,\n            getStatus(sender.lastCommunication),\n            channels,\n            \"encoder\",\n            sender.device.configurationInstance\n          );\n        })\n      );\n    });\n}\n\nexport async function getReceivers() {\n  return axios\n    .get(process.env.REACT_APP_DECODER, getAuthorizationHeader())\n    .then((receivers) => {\n      return Promise.resolve(\n        receivers.data.map((receiver) => {\n          let channels = [];\n          if (receiver.input) {\n            channels = receiver.input.map((input) => {\n              return new InputChannelInfo(\n                input.id,\n                input.channel.name,\n                input.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            receiver.lastCommunication == null\n              ? \"Never\"\n              : receiver.lastCommunication;\n          return new DeviceInfo(\n            receiver.serialNumber,\n            lastCommunication,\n            receiver.device.publicIpAddress,\n            receiver.device.privateIpAddress,\n            receiver.device.displayName,\n            getStatus(receiver.lastCommunication),\n            channels,\n            \"decoder\",\n            receiver.device.configurationInstance\n          );\n        })\n      );\n    });\n}\n\nexport function deleteDevice(deviceId) {\n  return axios.delete(\n    `${process.env.REACT_APP_DEVICE}/${deviceId}`,\n    getAuthorizationHeader()\n  );\n}\n\nexport async function updateDeviceName(deviceId, updatedName) {\n  return axios.put(\n    process.env.REACT_APP_DEVICE,\n    {\n      serialNumber: deviceId,\n      displayName: updatedName\n    },\n    getAuthorizationHeader()\n  );\n}\n\n// https://programmingwithmosh.com/javascript/react-file-upload-proper-server-side-nodejs-easy/\nexport async function uploadConfiguration(deviceId, configFile) {\n  const data = new FormData();\n  data.append(\"configuration\", configFile);\n  const headers = getAuthorizationHeader();\n  // eslint-disable-next-line\n  headers.headers[\"Content-Type\"] = `multipart/form-data; boundary=${data[\"_boundary\"]}` ;\n  return axios.put(\n    `${process.env.REACT_APP_DEVICE}/config/${deviceId}`,\n    data,\n    headers\n  );\n}\n","import { InputBase, withStyles } from \"@material-ui/core\";\n\nexport default withStyles({\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    fontWeight: 500,\n    letterSpacing: \"0.0075em\",\n    lineHeight: \"1.6\",\n    fontSize: \"1.25rem\",\n    padding: \"10px 26px 10px 12px\",\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  }\n})(InputBase);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MenuItem, Select } from \"@material-ui/core\";\nimport StyledInput from \"./StyledInput\";\n\nexport default class DeviceTableTitle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { handleChange } = this.props;\n    handleChange(event.target.value);\n  }\n\n  render() {\n    const { index } = this.props;\n    return (\n      <Select\n        id=\"device-table-title-select\"\n        value={index}\n        onChange={this.handleChange}\n        input={<StyledInput />}\n      >\n        <MenuItem value={0}>All Devices</MenuItem>\n        <MenuItem value={1}>Senders</MenuItem>\n        <MenuItem value={2}>Receivers</MenuItem>\n      </Select>\n    );\n  }\n}\n\nDeviceTableTitle.propTypes = {\n  index: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function ChannelDetailsTableHead() {\n  return (\n    <TableRow>\n      <TableCell className=\"lightGrey\">ID</TableCell>\n      <TableCell className=\"lightGrey\">Name</TableCell>\n      <TableCell className=\"lightGrey\">Port</TableCell>\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\n\nexport default function ChannelDetailsTableRow(props) {\n  const {\n    channel: { id, name, port }\n  } = props;\n  return (\n    <TableRow>\n      <TableCell>{id}</TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{port}</TableCell>\n    </TableRow>\n  );\n}\nChannelDetailsTableRow.propTypes = {\n  channel: PropTypes.oneOfType([\n    PropTypes.instanceOf(InputChannelInfo),\n    PropTypes.instanceOf(OutputChannelInfo)\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Table, TableBody, TableHead } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport ChannelDetailsTableHead from \"./ChannelDetailsTableHead\";\nimport ChannelDetailsTableRow from \"./ChannelDetailsTableRow\";\n\nexport default function ChannelDetailsTable(props) {\n  const { channels } = props;\n  return (\n    <Table className=\"flexContents\">\n      <TableHead>\n        <ChannelDetailsTableHead />\n      </TableHead>\n      <TableBody>\n        {channels.map((channel) => {\n          return (\n            <ChannelDetailsTableRow channel={channel} key={channel.name} />\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\nChannelDetailsTable.propTypes = {\n  channels: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.instanceOf(InputChannelInfo),\n      PropTypes.instanceOf(OutputChannelInfo)\n    ])\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DetailsButton from \"../general/Buttons/DetailsButton\";\n\nexport default function DeviceDetailsButton(props) {\n  const { deviceInfo } = props;\n\n  const navLinkInfo = {\n    pathname: `/Devices/Details/${deviceInfo.serialNumber}`,\n    state: { device: deviceInfo }\n  };\n\n  return (\n    <>\n      <DetailsButton\n        navLinkInfo={navLinkInfo}\n        tooltipTitle=\"View Device Details\"\n      />\n    </>\n  );\n}\n\nDeviceDetailsButton.propTypes = {\n  deviceInfo: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  FilterList,\n  Search,\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable, { MTableToolbar } from \"material-table\";\n\nimport ChannelDetailsTable from \"./ChannelDetailsTable\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeviceDetailsButton from \"./DeviceDetailsButton\";\n\nexport default class DevicesTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.components = {\n      /*  eslint-disable react/jsx-props-no-spreading */\n      Toolbar: function Components(passedProps) {\n        return (\n          <div className=\"lightestGrey\">\n            <MTableToolbar {...passedProps} />\n          </div>\n        );\n      }\n    };\n    this.columns = [\n      {\n        title: \"Name\",\n        field: \"name\"\n      },\n      {\n        title: \"Serial Number\",\n        field: \"serialNumber\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        },\n        lookup: {\n          Online: \"Online\",\n          Pending: \"Pending\",\n          Error: \"Error\",\n          Offline: \"Offline\"\n        }\n      },\n      {\n        title: \"Private IP Address\",\n        field: \"privateIp\"\n      },\n      {\n        title: \"Public IP Address\",\n        field: \"publicIp\"\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <DeviceDetailsButton deviceInfo={rowData} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n    this.detailPanel = [\n      {\n        icon: ExpandMore,\n        openIcon: ExpandLess,\n        tooltip: \"Show Channels\",\n        render: function DetailPanel(rowData) {\n          return (\n            <div className=\"lightestGrey\" style={{ padding: \"1.5em\" }}>\n              <Typography variant=\"h6\">Channels</Typography>\n              <ChannelDetailsTable channels={rowData.channels} />\n            </div>\n          );\n        }\n      }\n    ];\n    this.options = {\n      toolbar: true,\n      search: true,\n      exportButton: true,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: true,\n      draggable: false\n    };\n    this.icons = {\n      Filter: FilterList,\n      Search,\n      ResetSearch: Clear,\n      SortArrow: ArrowDownward,\n      Export: SaveAlt,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  render() {\n    const { title, devices } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer style={{ maxHeight: 570 }}>\n            <MaterialTable\n              title={title}\n              components={this.components}\n              columns={this.columns}\n              data={devices}\n              detailPanel={this.detailPanel}\n              options={this.options}\n              icons={this.icons}\n            />\n          </TableContainer>\n        </Box>\n      </>\n    );\n  }\n}\n\nDevicesTable.propTypes = {\n  title: PropTypes.node.isRequired,\n  devices: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\n\nimport { getSenders, getReceivers } from \"../api/DeviceApi\";\nimport DeviceTableTitle from \"./DeviceTableTitle\";\nimport DevicesTable from \"./DevicesTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class DeviceListPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 0,\n      senders: [],\n      receivers: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.getDevices = this.getDevices.bind(this);\n    this.getTitle = this.getTitle.bind(this);\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n  }\n\n  componentDidMount() {\n    getSenders()\n      .then(this.handleSendersChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch senders: ${error.message}`);\n      });\n    getReceivers()\n      .then(this.handleReceiversChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch receivers: ${error.message}`);\n      });\n  }\n\n  handleChange(value) {\n    this.setState({\n      selected: value\n    });\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  getDevices() {\n    const { receivers, senders, selected } = this.state;\n    switch (selected) {\n      case 1:\n        return senders;\n      case 2:\n        return receivers;\n      default:\n        return senders.concat(receivers);\n    }\n  }\n\n  getTitle() {\n    const { selected } = this.state;\n    return (\n      <DeviceTableTitle index={selected} handleChange={this.handleChange} />\n    );\n  }\n\n  render() {\n    return <DevicesTable devices={this.getDevices()} title={this.getTitle()} />;\n  }\n}\n","import React from \"react\";\n\nimport Page from \"../general/Page\";\nimport DeviceListPageContents from \"./DeviceListPageContents\";\n\nexport default function DeviceListPage() {\n  const breadcrumb = [\n    [\"Home\", \"/Home\"],\n    [\"My Devices\", \"/Devices\"]\n  ];\n  return (\n    <Page title=\"My Devices\" breadcrumbs={breadcrumb} hasStreamButton>\n      <DeviceListPageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\nimport { Cancel, Save } from \"@material-ui/icons\";\n\nexport default function EditableName(props) {\n  const { confirmEditing, deviceName, setName, cancelEditing } = props;\n  return (\n    <form className=\"deviceNameEditForm\" onSubmit={confirmEditing}>\n      <Box className=\"flexContents\">\n        <TextField\n          id=\"deviceName\"\n          name=\"deviceName\"\n          required\n          defaultValue={deviceName}\n          onChange={(event) => setName(event.target.value)}\n        />\n        <div className=\"alignRightFloat\">\n          <IconButton id=\"cancelEditBtn\" size=\"small\" onClick={cancelEditing}>\n            <Cancel />\n          </IconButton>\n\n          <IconButton id=\"confirmEditBtn\" type=\"submit\" color=\"primary\">\n            <Save />\n          </IconButton>\n        </div>\n      </Box>\n    </form>\n  );\n}\n\nEditableName.propTypes = {\n  confirmEditing: PropTypes.func.isRequired,\n  deviceName: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired,\n  cancelEditing: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Edit } from \"@material-ui/icons\";\n\nexport default function StaticName(props) {\n  const { deviceName, startEditing } = props;\n  return (\n    <>\n      {deviceName}\n      <div className=\"alignRightFloat\">\n        <IconButton\n          id=\"editBtn\"\n          size=\"small\"\n          color=\"action\"\n          onClick={startEditing}\n        >\n          <Edit />\n        </IconButton>\n      </div>\n    </>\n  );\n}\n\nStaticName.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  startEditing: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport * as DeviceApi from \"../api/DeviceApi\";\nimport EditableName from \"./EditableName\";\nimport StaticName from \"./StaticName\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class DeviceName extends React.Component {\n  constructor(props) {\n    super(props);\n    this.deviceName = props.deviceName;\n    this.deviceId = props.deviceId;\n    this.state = {\n      editing: false,\n      name: this.deviceName\n    };\n\n    this.startEdit = this.startEdit.bind(this);\n    this.cancelEditing = this.cancelEditing.bind(this);\n    this.confirmEditing = this.confirmEditing.bind(this);\n    this.setName = this.setName.bind(this);\n  }\n\n  setName(updatedName) {\n    this.setState({ name: updatedName });\n  }\n\n  startEdit() {\n    this.setState({ editing: true });\n  }\n\n  cancelEditing() {\n    this.setState({ name: this.deviceName });\n    this.setState({ editing: false });\n  }\n\n  confirmEditing(event) {\n    event.preventDefault();\n    const { name: newName } = this.state;\n\n    const oldName = this.deviceName;\n    this.deviceName = newName;\n    this.setState({ editing: false });\n\n    DeviceApi.updateDeviceName(this.deviceId, newName)\n      .then(() => {\n        snackbar(\"success\", `Device successfully renamed to ${newName}`);\n      })\n      .catch(() => {\n        // If update was unsuccessful, return to the old name\n        this.deviceName = oldName;\n        this.forceUpdate();\n        snackbar(\"error\", `Failed to rename device`);\n      });\n  }\n\n  render() {\n    const { editing } = this.state;\n    return (\n      <>\n        {editing ? (\n          <EditableName\n            confirmEditing={this.confirmEditing}\n            deviceName={this.deviceName}\n            setName={this.setName}\n            cancelEditing={this.cancelEditing}\n          />\n        ) : (\n          <StaticName\n            deviceName={this.deviceName}\n            startEditing={this.startEdit}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nDeviceName.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  deviceId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\n\nimport { TableContainer, TableCell, TableRow } from \"@material-ui/core\";\nimport ChannelDetailsTable from \"../../devicelist/ChannelDetailsTable\";\nimport InputChannelInfo from \"../../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../../model/OutputChannelInfo\";\nimport StatusIndicator from \"../../general/StatusIndicator\";\nimport DeviceName from \"../DeviceName\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class DeviceInfoRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getPropertyDisplayName = this.getPropertyDisplayName.bind(this);\n    this.createInnerTable = this.createInnerTable.bind(this);\n    this.createTableCellContents = this.createTableCellContents.bind(this);\n  }\n\n  getPropertyDisplayName() {\n    const { name } = this.props;\n    switch (name) {\n      case \"serialNumber\":\n        return \"Serial Number\";\n      case \"lastCommunication\":\n        return \"Last Communication\";\n      case \"privateIp\":\n        return \"Private IP Address\";\n      case \"publicIp\":\n        return \"Public IP Address\";\n      case \"name\":\n        return \"Name\";\n      case \"status\":\n        return \"Status\";\n      case \"channels\":\n        return \"Channels\";\n      default:\n        return \"Additional Info\";\n    }\n  }\n\n  createInnerTable() {\n    const { value } = this.props;\n    return (\n      <TableContainer>\n        <ChannelDetailsTable channels={value} />\n      </TableContainer>\n    );\n  }\n\n  createTableCellContents() {\n    const {\n      name,\n      value,\n      device: { serialNumber }\n    } = this.props;\n    switch (name) {\n      case \"channels\":\n        return this.createInnerTable();\n      case \"status\":\n        return <StatusIndicator status={value} />;\n      case \"name\":\n        return <DeviceName deviceName={value} deviceId={serialNumber} />;\n      default:\n        return value;\n    }\n  }\n\n  render() {\n    return (\n      <TableRow>\n        <TableCell>{this.getPropertyDisplayName()}</TableCell>\n        <TableCell align=\"center\">{this.createTableCellContents()}</TableCell>\n      </TableRow>\n    );\n  }\n}\n\nDeviceInfoRow.propTypes = {\n  name: Proptypes.string.isRequired,\n  value: Proptypes.oneOfType([\n    Proptypes.string,\n    Proptypes.arrayOf(\n      Proptypes.oneOfType([InputChannelInfo, OutputChannelInfo])\n    )\n  ]).isRequired,\n  device: Proptypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { TableContainer, Table, TableBody } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfoRow from \"./DeviceInfoRow\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function DeviceInfoTable(props) {\n  const { device, properties } = props;\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          {properties.map((property) => (\n            <DeviceInfoRow\n              name={property}\n              value={device[property]}\n              device={device}\n              key={`device_${property}`}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nDeviceInfoTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  properties: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfoTable from \"./DeviceInfoTable/DeviceInfoTable\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function DeviceDetailsInfoTable(props) {\n  const { device } = props;\n  const properties = [\n    \"name\",\n    \"serialNumber\",\n    \"status\",\n    \"publicIp\",\n    \"privateIp\"\n  ];\n  return <DeviceInfoTable device={device} properties={properties} />;\n}\n\nDeviceDetailsInfoTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport DeviceDetailsInfoTable from \"../DeviceDetailsInfoTable\";\n\nexport default function DeviceInfoCard(props) {\n  const { device } = props;\n\n  return (\n    <DashboardCard title=\"Device Info\">\n      <Grid item xs={12}>\n        <DeviceDetailsInfoTable device={device} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceInfoCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","export default class LogInfo {\n  constructor(id, dateTime, level, message) {\n    this.id = id;\n    this.dateTime = dateTime;\n    this.level = level;\n    this.message = message;\n  }\n}\n","export default class StreamLogInfo {\n  constructor(dateTime, level, message) {\n    this.dateTime = dateTime;\n    this.level = level;\n    this.message = message;\n  }\n}\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {\n  Search,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\nimport MaterialTable from \"material-table\";\nimport LogInfo from \"../model/LogInfo\";\nimport StreamLogInfo from \"../model/StreamLogInfo\";\n\nexport default class LogsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = {\n      toolbar: true,\n      showTitle: false,\n      search: true,\n      exportButton: true,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: false,\n      draggable: false,\n      maxBodyHeight: \"auto\",\n      minBodyHeight: \"auto\"\n    };\n    this.icons = {\n      Search,\n      ResetSearch: Clear,\n      SortArrow: ArrowDownward,\n      Export: SaveAlt,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  getIcons() {\n    return this.icons;\n  }\n\n  render() {\n    const { columns, logs } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer>\n            <MaterialTable\n              columns={columns}\n              data={logs}\n              options={this.getOptions()}\n              icons={this.getIcons()}\n            />\n          </TableContainer>\n        </Box>\n      </>\n    );\n  }\n}\n\nLogsTable.propTypes = {\n  logs: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.instanceOf(LogInfo)),\n    PropTypes.arrayOf(PropTypes.instanceOf(StreamLogInfo))\n  ]).isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      field: PropTypes.string.isRequired,\n      sorting: PropTypes.bool,\n      cellStyle: PropTypes.shape({\n        width: PropTypes.string\n      })\n    })\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport LogsTable from \"../loglist/LogsTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class DeviceLogTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.columns = [\n      {\n        title: \"ID\",\n        field: \"id\"\n      },\n      {\n        title: \"Date\",\n        field: \"dateTime\",\n        defaultSort: \"desc\"\n      },\n      {\n        title: \"Level\",\n        field: \"level\"\n      },\n      {\n        title: \"Message\",\n        field: \"message\",\n        sorting: false\n      }\n    ];\n    this.dataSource = props.dataSource;\n    this.handleDeviceLogsChange = this.handleDeviceLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { device } = this.props;\n    this.dataSource\n      .getDeviceLogs(device.serialNumber)\n      .then(this.handleDeviceLogsChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch device logs: ${error.message}`);\n      });\n  }\n\n  handleDeviceLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} columns={this.columns} />;\n  }\n}\n\nDeviceLogTableWrapper.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import axios from \"axios\";\nimport LogInfo from \"../model/LogInfo\";\nimport StreamLogInfo from \"../model/StreamLogInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nasync function getLogs(endpoint) {\n  return axios.get(endpoint, getAuthorizationHeader()).then((response) => {\n    return Promise.resolve(\n      response.data.map((log) => {\n        return new LogInfo(log.id, log.dateTime, log.level, log.message);\n      })\n    );\n  });\n}\n\nexport async function getAllLogs() {\n  return getLogs(process.env.REACT_APP_LOG);\n}\n\nexport async function getDeviceLogs(deviceSerialNumber) {\n  return getLogs(`${process.env.REACT_APP_LOG}/${deviceSerialNumber}`);\n}\n\nexport async function getStreamLogs(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAMLOG}/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      return Promise.resolve(\n        response.data.map((log) => {\n          return new StreamLogInfo(\n            log.logEntity.dateTime,\n            log.logEntity.level,\n            log.logEntity.message\n          );\n        })\n      );\n    });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport DeviceLogTableWrapper from \"../DeviceLogTableWrapper\";\nimport * as deviceLogsDataSource from \"../../api/LogApi\";\n\nexport default function DeviceLogCard(props) {\n  const { device } = props;\n\n  return (\n    <DashboardCard title=\"Logs\">\n      <Grid item xs={12}>\n        <DeviceLogTableWrapper\n          dataSource={deviceLogsDataSource}\n          device={device}\n        />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceLogCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport ChannelDetailsTable from \"../../devicelist/ChannelDetailsTable\";\n\nexport default function DeviceChannelCard(props) {\n  const {\n    device: { channels }\n  } = props;\n\n  return (\n    <DashboardCard title=\"Channels\">\n      <Grid item xs={12}>\n        <ChannelDetailsTable channels={channels} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceChannelCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import DeviceInfo from \"../model/DeviceInfo\";\nimport OutChannelInfo from \"../model/OutputChannelInfo\";\nimport InChannelInfo from \"../model/InputChannelInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport LogInfo from \"../model/LogInfo\";\nimport { convertStatsToDataObject } from \"../model/ConvertDataFormat\";\n\nconst extras = [\"Additional Device details go here\"];\nconst sampleInputChannels = [\n  new InChannelInfo(1, \"Input ch 1\", 500, null),\n  new InChannelInfo(2, \"Input ch 2\", 456, null),\n  new InChannelInfo(3, \"Input ch 3\", 800, null)\n];\nconst sampleOutputChannels = [\n  new OutChannelInfo(1, \"Output ch 1\", 500, null),\n  new OutChannelInfo(2, \"Output ch 2\", 456, null),\n  new OutChannelInfo(3, \"Output ch 3\", 800, null)\n];\n\nexport function getSenders(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:30:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 3\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:40:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 4\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:50:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 5\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:60:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 6\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:70:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 7\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:80:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 8\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:90:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 9\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n\n  callback(sampleSenders);\n}\n\nexport function getSampleSender() {\n  return new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n}\n\nexport function getReceivers(callback) {\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:03:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 3\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:04:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 4\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:05:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 5\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:06:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 6\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:07:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 7\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:08:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 8\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:09:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 9\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:11:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 11\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:21:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 12\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:31:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 13\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:41:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 14\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:51:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 15\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:61:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 16\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:71:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 17\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:81:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 18\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:91:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 19\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  callback(sampleReceivers);\n}\n\nexport function getAllStreams() {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  return [\n    new StreamInfo(1, sampleSenders[0], sampleReceivers[0], 1, 2),\n    new StreamInfo(2, sampleSenders[1], sampleReceivers[1], 3, 4),\n    new StreamInfo(3, sampleSenders[1], sampleReceivers[0], 5, 6)\n  ];\n}\n\nexport function getSampleStream() {\n  const sampleSender = new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n\n  const sampleReceiver = new DeviceInfo(\n    \"1:22:333:989\",\n    null,\n    \"145:396\",\n    \"Receiver 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"decoder\",\n    extras\n  );\n\n  return new StreamInfo(\n    1,\n    sampleSender,\n    sampleReceiver,\n    sampleSender.channels[0].port,\n    sampleReceiver.channels[1].port\n  );\n}\n\nexport function getAllLogs(callback) {\n  const dates = [\n    \"2020-10-31T15:53:23\",\n    \"2020-11-13T12:36:30\",\n    \"2020-11-13T08:24:30\"\n  ];\n\n  const sampleLogs = [\n    new LogInfo(1, dates[0], \"Info\", \"Log 1 info\"),\n    new LogInfo(2, dates[1], \"Info\", \"Log 2 info\"),\n    new LogInfo(3, dates[2], \"Info\", \"Log 3 info\")\n  ];\n\n  callback(sampleLogs);\n}\n\nexport function getSampleStreamStats() {\n  const sampleDbStreamStats = {\n    id: 1,\n    time: 2,\n    window: {\n      flow: 31,\n      congestion: 32,\n      flight: 33\n    },\n    link: {\n      rtt: 41,\n      bandwidth: 42,\n      maxBandwidth: 43\n    },\n    send: {\n      packets: 51,\n      packetsLost: 52,\n      packetsDropped: 53,\n      packetsRetransmitted: 54,\n      bytes: 55,\n      bytesDropped: 56,\n      mbitRate: 57\n    },\n    recv: {\n      packets: 61,\n      packetsLost: 62,\n      packetsDropped: 63,\n      packetsRetransmitted: 64,\n      packetsBelated: 65,\n      bytes: 66,\n      bytesLost: 67,\n      bytesDropped: 68,\n      mbitRate: 69\n    }\n  };\n\n  return convertStatsToDataObject(sampleDbStreamStats);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogContentText from \"@material-ui/core/DialogContentText\";\n\nexport default function DialogBody(props) {\n  const { children } = props;\n  return (\n    <MuiDialogContent>\n      <MuiDialogContentText id=\"dialog-description\">\n        {children}\n      </MuiDialogContentText>\n    </MuiDialogContent>\n  );\n}\nDialogBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\n\nexport default function DialogButtons(props) {\n  const { button1, button2 } = props;\n\n  return (\n    <MuiDialogActions>\n      <Button onClick={button1.onClick} color=\"primary\">\n        {button1.name}\n      </Button>\n      {button2 ? (\n        <Button onClick={button2.onClick} color=\"secondary\" autoFocus>\n          {button2.name}\n        </Button>\n      ) : undefined}\n    </MuiDialogActions>\n  );\n}\n\nDialogButtons.propTypes = {\n  button1: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired,\n  button2: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  })\n};\n\nDialogButtons.defaultProps = {\n  button2: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MuiDialog from \"@material-ui/core/Dialog/Dialog\";\nimport { DialogTitle } from \"@material-ui/core\";\nimport DialogBody from \"./DialogBody\";\nimport DialogButtons from \"./DialogButtons\";\n\nexport default class Dialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.openDialog = this.openDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.setState({ open: true });\n  }\n\n  closeDialog() {\n    return this.setState({ open: false });\n  }\n\n  render() {\n    const { title, actionButton, children, isError } = this.props;\n    const { open } = this.state;\n\n    const button = {\n      name: actionButton ? \"Cancel\" : \"OK\",\n      onClick: this.closeDialog\n    };\n\n    return (\n      <MuiDialog\n        open={open}\n        onClose={() => this.closeDialog}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n        id=\"dialog\"\n      >\n        <DialogTitle className={isError ? \"warningText\" : undefined}>\n          {title}\n        </DialogTitle>\n        <DialogBody>{children}</DialogBody>\n        {actionButton ? (\n          <DialogButtons button1={button} button2={actionButton} />\n        ) : (\n          <DialogButtons button1={button} />\n        )}\n      </MuiDialog>\n    );\n  }\n}\n\nDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  actionButton: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }),\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  isError: PropTypes.bool\n};\n\nDialog.defaultProps = {\n  isError: false,\n  actionButton: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../../general/dialog/Dialog\";\nimport { deleteDevice } from \"../../api/DeviceApi\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport { snackbar } from \"../../general/SnackbarMessage\";\n\nexport default class DeleteDeviceDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  confirmDelete() {\n    const {\n      device: { serialNumber },\n      history\n    } = this.props;\n    this.dialogElement.current.closeDialog();\n    deleteDevice(serialNumber)\n      .then(() => {\n        history.push(\"/Devices\");\n        snackbar(\"success\", `Device deleted! (Serial Number: ${serialNumber})`);\n      })\n      .catch(() => {\n        snackbar(\n          \"error\",\n          `Could not delete device (Serial Number: ${serialNumber})`\n        );\n      });\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { device } = this.props;\n    const title = \"Confirm Delete\";\n    const message = `Are you sure you want to delete ${device.name}?`;\n\n    const actionButton = {\n      name: \"Confirm\",\n      onClick: this.confirmDelete\n    };\n\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        {message}\n      </Dialog>\n    );\n  }\n}\n\nDeleteDeviceDialog.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withRouter } from \"react-router-dom\";\nimport DeleteDeviceDialog from \"./DeleteDeviceDialog\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nclass DeleteDeviceDialogOpener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { device, history } = this.props;\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={<DeleteIcon />}\n          onClick={this.openDialog}\n        >\n          Delete\n        </Button>\n        <DeleteDeviceDialog\n          ref={this.dialogElement}\n          device={device}\n          history={history}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(DeleteDeviceDialogOpener);\n\nDeleteDeviceDialogOpener.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"@material-ui/core\";\n\nimport Dialog from \"../../general/dialog/Dialog\";\n\nimport { uploadConfiguration } from \"../../api/DeviceApi\";\nimport { snackbar } from \"../../general/SnackbarMessage\";\n\nexport default class UploadConfigDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null\n    };\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      file: event.target.files[0]\n    });\n  }\n\n  handleUpload() {\n    const { deviceId } = this.props;\n    const { file } = this.state;\n    uploadConfiguration(deviceId, file)\n      .then(() => {\n        snackbar(\"success\", \"Successfully uploaded configuration\");\n      })\n      .catch(() => {\n        snackbar(\"error\", \"Upload failed\");\n      })\n      .finally(() => {\n        this.dialogElement.current.closeDialog();\n      });\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const title = \"Upload a file\";\n    const actionButton = {\n      name: \"Upload\",\n      onClick: this.handleUpload\n    };\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        <Input\n          type=\"file\"\n          name=\"file\"\n          disableUnderline\n          onChange={this.handleChange}\n        />\n      </Dialog>\n    );\n  }\n}\n\nUploadConfigDialog.propTypes = {\n  deviceId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { CloudUpload } from \"@material-ui/icons\";\n\nimport UploadConfigDialog from \"./UploadConfigDialog\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class UploadConfigDialogOpenButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const {\n      device: { serialNumber }\n    } = this.props;\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<CloudUpload />}\n          onClick={this.openDialog}\n        >\n          Upload New\n        </Button>\n\n        <UploadConfigDialog ref={this.dialogElement} deviceId={serialNumber} />\n      </>\n    );\n  }\n}\n\nUploadConfigDialogOpenButton.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { GetApp } from \"@material-ui/icons\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class DownloadConfigButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.handleDownload = this.handleDownload.bind(this);\n  }\n\n  handleDownload() {\n    const { device } = this.props;\n    if (!device.extras) return;\n    const filename = `${device.serialNumber}.config`;\n    const element = document.createElement(\"a\");\n    element.setAttribute(\n      \"href\",\n      `data:text/plain;charset=utf-8,${atob(device.extras)}`\n    );\n    element.setAttribute(\"download\", filename);\n\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  }\n\n  render() {\n    const { device } = this.props;\n    return (\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={this.handleDownload}\n        startIcon={<GetApp />}\n        disabled={!device.extras}\n      >\n        Download\n      </Button>\n    );\n  }\n}\n\nDownloadConfigButton.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport UploadConfigDialogOpenButton from \"../configuration/UploadConfigDialogOpenButton\";\nimport DownloadConfigButton from \"../configuration/DownloadConfigButton\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function DeviceConfigActionsCard(props) {\n  const { device } = props;\n  return (\n    <DashboardCard title=\"Configuration\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <UploadConfigDialogOpenButton device={device} />\n        </Grid>\n        <Grid item xs={4}>\n          <DownloadConfigButton device={device} />\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceConfigActionsCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, Box, Container } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeviceInfoCard from \"./cards/DeviceInfoCard\";\nimport DeviceLogCard from \"./cards/DeviceLogCard\";\nimport DeviceChannelCard from \"./cards/DeviceChannelCard\";\n\nimport { getSampleSender } from \"../api/SampleData\";\nimport GridColumn from \"../general/dashboard/GridColumn\";\nimport DeleteDeviceDialogOpener from \"./DeleteDeviceDialog/DeleteDeviceDialogOpener\";\nimport DeviceConfigActionsCard from \"./cards/DeviceConfigActionsCard\";\n\nexport default function DeviceDetailsPageContents(props) {\n  const { device } = props;\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <GridColumn width={6}>\n          <Grid item xs={12}>\n            <DeviceInfoCard device={device} />\n          </Grid>\n          <Grid item xs={12}>\n            <DeviceChannelCard device={device} />\n          </Grid>\n          <Grid item xs={12}>\n            <DeviceConfigActionsCard device={device} />\n          </Grid>\n        </GridColumn>\n        <Grid item xs={6}>\n          <DeviceLogCard device={device} />\n        </Grid>\n      </Grid>\n      <Box className=\"alignRightFloatPadded\">\n        <DeleteDeviceDialogOpener device={device} />\n      </Box>\n    </Container>\n  );\n}\nDeviceDetailsPageContents.defaultProps = {\n  device: getSampleSender()\n};\n\nDeviceDetailsPageContents.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo)\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Page from \"../general/Page\";\nimport DeviceDetailsPageContents from \"./DeviceDetailsPageContents\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport { getSampleSender } from \"../api/SampleData\";\n\nexport default function DeviceDetailsPage(props) {\n  const {\n    location: {\n      state: { device }\n    }\n  } = props;\n\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"My Devices\", \"/Devices\"],\n    [\"Device Details\", `/Devices/Details/${device.serialNumber}`, { device }]\n  ];\n\n  return (\n    <Page title=\"Device Details\" breadcrumbs={breadcrumbs}>\n      <DeviceDetailsPageContents device={device} />\n    </Page>\n  );\n}\n\nDeviceDetailsPage.defaultProps = {\n  location: { state: { device: getSampleSender() } }\n};\n\nDeviceDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      device: PropTypes.instanceOf(DeviceInfo)\n    })\n  })\n};\n","import React from \"react\";\nimport StreamsTableWrapper from \"./StreamsTableWrapper\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport StreamDetailsButton from \"./StreamDetailsButton\";\nimport * as streamDataSource from \"../api/StreamApi\";\n\nexport default class DetailedStreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.detailedColumns = [\n      {\n        title: \"ID\",\n        field: \"id\"\n      },\n      {\n        title: \"Date\",\n        field: \"date\"\n      },\n      {\n        title: \"Sender\",\n        field: \"sender.name\"\n      },\n      {\n        title: \"Receiver\",\n        field: \"receiver.name\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        }\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <StreamDetailsButton streamInfo={rowData} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n  }\n\n  render() {\n    return (\n      <StreamsTableWrapper\n        dataSource={streamDataSource}\n        columns={this.detailedColumns}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport DetailedStreamsTableWrapper from \"./DetailedStreamsTableWrapper\";\n\nexport default function StreamListPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"]\n  ];\n  return (\n    <Page title=\"Active Streams\" breadcrumbs={breadcrumbs} hasStreamButton>\n      <DetailedStreamsTableWrapper />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\n\nexport default class SelectTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleListItemClick = this.handleListItemClick.bind(this);\n  }\n\n  handleListItemClick(index) {\n    const { setIndex } = this.props;\n    setIndex(index);\n  }\n\n  render() {\n    const { selectedIndex, items } = this.props;\n    return (\n      <List>\n        {items.map((item, index) => {\n          return (\n            <ListItem\n              button\n              key={item}\n              selected={selectedIndex === index}\n              onClick={() => this.handleListItemClick(index)}\n            >\n              <ListItemText primary={item} />\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n}\n\nSelectTable.propTypes = {\n  selectedIndex: PropTypes.number.isRequired,\n  setIndex: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectTable from \"./SelectTable\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function SelectDeviceTable(props) {\n  const { selectedIndex, setIndex, deviceList } = props;\n\n  const deviceNames = deviceList.map((device) => device.name);\n  return (\n    <SelectTable\n      selectedIndex={selectedIndex}\n      setIndex={setIndex}\n      items={deviceNames}\n    />\n  );\n}\n\nSelectDeviceTable.propTypes = {\n  selectedIndex: PropTypes.number.isRequired,\n  setIndex: PropTypes.func.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectTable from \"./SelectTable\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function SelectChannelTable(props) {\n  const { selectedIndex, setIndex, deviceList, deviceIndex } = props;\n\n  const channelNames = deviceList[deviceIndex].channels.map(\n    (channel) => channel.name\n  );\n  return (\n    <SelectTable\n      selectedIndex={selectedIndex}\n      setIndex={setIndex}\n      items={channelNames}\n    />\n  );\n}\n\nSelectChannelTable.propTypes = {\n  selectedIndex: PropTypes.number.isRequired,\n  setIndex: PropTypes.func.isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function SimpleTableRow(props) {\n  const { name, value, alignment } = props;\n\n  return (\n    <>\n      <TableRow>\n        <TableCell>{name}</TableCell>\n        <TableCell align={alignment}>{value}</TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nSimpleTableRow.defaultProps = {\n  alignment: \"left\"\n};\n\nSimpleTableRow.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.node.isRequired,\n  alignment: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TableBody, Table, TableContainer } from \"@material-ui/core\";\nimport SimpleTableRow from \"./SimpleTableRow\";\n\nexport default function SimpleTable(props) {\n  const { properties, alignment } = props;\n\n  const propertiesArr = Object.keys(properties).map((propertyName) => {\n    return [propertyName, properties[propertyName]];\n  });\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          {propertiesArr.map((propertyPair) => (\n            <SimpleTableRow\n              name={propertyPair[0]}\n              value={propertyPair[1]}\n              alignment={alignment}\n              key={`component_${propertyPair[0]}`}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nSimpleTable.defaultProps = {\n  alignment: \"left\"\n};\nSimpleTable.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.node).isRequired,\n  alignment: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DashboardCard from \"./dashboard/DashboardCard\";\nimport SimpleTable from \"./simpleTable/SimpleTable\";\nimport ButtonInfo from \"./dashboard/ButtonInfo\";\n\nexport default function StreamDeviceCard(props) {\n  const { title, button, device, channel } = props;\n  const properties = {\n    Name: device.name,\n    \"Serial Number\": device.serialNumber,\n    Channel: channel\n  };\n\n  return (\n    <DashboardCard title={title} button={button}>\n      <Grid item xs={12}>\n        <SimpleTable properties={properties} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nStreamDeviceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  button: PropTypes.instanceOf(ButtonInfo),\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  channel: PropTypes.number.isRequired\n};\n\nStreamDeviceCard.defaultProps = {\n  button: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\n\nexport default function StepperNextButton(props) {\n  const { disabled, isLast, handleNext, handleClose } = props;\n\n  const buttonText = isLast ? \"Confirm\" : \"Next\";\n\n  const handleClick = isLast ? handleClose : handleNext;\n\n  return (\n    <Button size=\"small\" onClick={handleClick} disabled={disabled}>\n      {buttonText}\n      <KeyboardArrowRight />\n    </Button>\n  );\n}\n\nStepperNextButton.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { Close, KeyboardArrowLeft } from \"@material-ui/icons\";\n\nexport default function StepperBackButton(props) {\n  const { isFirst, handleBack, handleClose } = props;\n\n  let handleClick = handleBack;\n  let icon = <KeyboardArrowLeft />;\n  let buttonText = \"Back\";\n\n  if (isFirst) {\n    handleClick = handleClose;\n    buttonText = \"Cancel\";\n    icon = <Close />;\n  }\n\n  return (\n    <Button size=\"small\" onClick={handleClick}>\n      {icon}\n      {buttonText}\n    </Button>\n  );\n}\n\nStepperBackButton.propTypes = {\n  isFirst: PropTypes.bool.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SwipeableViews from \"react-swipeable-views\";\nimport { DialogTitle, MobileStepper } from \"@material-ui/core\";\nimport SelectDeviceTable from \"../SelectDeviceDialog/SelectDeviceTable\";\nimport SelectChannelTable from \"../SelectDeviceDialog/SelectChannelTable\";\nimport StreamDeviceCard from \"../../general/StreamDeviceCard\";\n\nimport StepperNextButton from \"./StepperNextButton\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport StepperBackButton from \"./StepperBackButton\";\nimport \"./swipeable.css\";\n\nexport default class SelectDeviceSwipeableSteps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeStep: 0\n    };\n\n    this.steps = [`Select a Device`, `Select a Channel`, `Confirm Device`];\n    this.handleNext = this.handleNext.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n    this.getNextButton = this.getNextButton.bind(this);\n    this.getBackButton = this.getBackButton.bind(this);\n  }\n\n  handleNext() {\n    const { activeStep: previousStep } = this.state;\n    this.setState({\n      activeStep: previousStep + 1\n    });\n  }\n\n  handleBack() {\n    const { activeStep: previousStep } = this.state;\n    this.setState({\n      activeStep: previousStep - 1\n    });\n  }\n\n  getNextButton() {\n    const { handleClose } = this.props;\n    const { activeStep } = this.state;\n    const maxSteps = this.steps.length;\n\n    return (\n      <StepperNextButton\n        disabled={this.disableNext()}\n        isLast={activeStep === maxSteps - 1}\n        handleClose={handleClose}\n        handleNext={this.handleNext}\n      />\n    );\n  }\n\n  getBackButton() {\n    const { handleClose } = this.props;\n    const { activeStep } = this.state;\n\n    return (\n      <StepperBackButton\n        isFirst={activeStep === 0}\n        handleClose={handleClose}\n        handleBack={this.handleBack}\n      />\n    );\n  }\n\n  disableNext() {\n    const { activeStep } = this.state;\n    const { deviceIndex, channelIndex } = this.props;\n    switch (activeStep) {\n      case 0:\n        return deviceIndex === -1;\n      case 1:\n        return channelIndex === -1;\n      default:\n        return false;\n    }\n  }\n\n  render() {\n    const {\n      deviceList,\n      deviceIndex,\n      setDeviceIndex,\n      channelIndex,\n      setChannelIndex\n    } = this.props;\n    const { activeStep } = this.state;\n    const maxSteps = this.steps.length;\n\n    return (\n      <>\n        <DialogTitle>{this.steps[activeStep]}</DialogTitle>\n        <SwipeableViews\n          className=\"halfScreenVertically\"\n          axis=\"x\"\n          index={activeStep}\n          enableMouseEvents\n        >\n          <SelectDeviceTable\n            selectedIndex={deviceIndex}\n            setIndex={setDeviceIndex}\n            deviceList={deviceList}\n          />\n          {deviceIndex === -1 ? (\n            <></>\n          ) : (\n            <SelectChannelTable\n              selectedIndex={channelIndex}\n              setIndex={setChannelIndex}\n              deviceIndex={deviceIndex}\n              deviceList={deviceList}\n            />\n          )}\n          {deviceIndex === -1 || channelIndex === -1 ? (\n            <></>\n          ) : (\n            <StreamDeviceCard\n              title=\"Preview\"\n              device={deviceList[deviceIndex]}\n              channel={deviceList[deviceIndex].channels[channelIndex].port}\n            />\n          )}\n        </SwipeableViews>\n        <MobileStepper\n          steps={maxSteps}\n          position=\"static\"\n          variant=\"text\"\n          activeStep={activeStep}\n          nextButton={this.getNextButton()}\n          backButton={this.getBackButton()}\n        />\n      </>\n    );\n  }\n}\n\nSelectDeviceSwipeableSteps.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  setDeviceIndex: PropTypes.func.isRequired,\n  channelIndex: PropTypes.number.isRequired,\n  setChannelIndex: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport SelectDeviceSwipeableSteps from \"../SwipeableSteps/SelectDeviceSwipeableSteps\";\n\nexport default class SelectDeviceDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.openDialog = this.openDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.setState({ open: true });\n  }\n\n  closeDialog() {\n    return this.setState({ open: false });\n  }\n\n  render() {\n    const { open } = this.state;\n    const {\n      deviceList,\n      deviceIndex,\n      setDeviceIndex,\n      channelIndex,\n      setChannelIndex\n    } = this.props;\n\n    return (\n      <Dialog\n        open={open}\n        fullWidth\n        maxWidth=\"sm\"\n        onClose={this.closeDialog}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n        id=\"dialog\"\n      >\n        <SelectDeviceSwipeableSteps\n          handleClose={this.closeDialog}\n          deviceList={deviceList}\n          deviceIndex={deviceIndex}\n          setDeviceIndex={setDeviceIndex}\n          channelIndex={channelIndex}\n          setChannelIndex={setChannelIndex}\n        />\n      </Dialog>\n    );\n  }\n}\n\nSelectDeviceDialog.propTypes = {\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  setDeviceIndex: PropTypes.func.isRequired,\n  channelIndex: PropTypes.number.isRequired,\n  setChannelIndex: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ButtonInfo from \"../../general/dashboard/ButtonInfo\";\nimport StreamDeviceCard from \"../../general/StreamDeviceCard\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function SelectedDeviceCard(props) {\n  const { title, openDialog, device, channelId } = props;\n  const button = new ButtonInfo(\"\", device, \"Edit\", openDialog);\n\n  return (\n    <StreamDeviceCard\n      title={title}\n      button={button}\n      device={device}\n      channel={channelId}\n    />\n  );\n}\n\nSelectedDeviceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  openDialog: PropTypes.func.isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  channelId: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\n\nexport default function UnselectedDeviceCard(props) {\n  const { title, onClick } = props;\n\n  return (\n    <DashboardCard title={title}>\n      <Grid item xs={4}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n          {`Select ${title}`}\n        </Button>\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nUnselectedDeviceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SelectedDeviceCard from \"./SelectedDeviceCard\";\nimport UnselectedDeviceCard from \"./UnselectedDeviceCard\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function CreateStreamCardToggler(props) {\n  const { title, openDialog, deviceIndex, deviceList, channelIndex } = props;\n  if (deviceIndex !== -1 && channelIndex !== -1) {\n    return (\n      <SelectedDeviceCard\n        title={title}\n        openDialog={openDialog}\n        device={deviceList[deviceIndex]}\n        channelId={deviceList[deviceIndex].channels[channelIndex].port}\n      />\n    );\n  }\n  return <UnselectedDeviceCard title={title} onClick={openDialog} />;\n}\n\nCreateStreamCardToggler.propTypes = {\n  title: PropTypes.string.isRequired,\n  openDialog: PropTypes.func.isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  channelIndex: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport SelectDeviceDialog from \"./SelectDeviceDialog/SelectDeviceDialog\";\nimport CreateStreamCardToggler from \"./cards/CreateStreamCardToggler\";\n\nexport default class CreateStreamDeviceCardWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const {\n      title,\n      deviceList,\n      deviceIndex,\n      setDeviceIndex,\n      channelIndex,\n      setChannelIndex\n    } = this.props;\n\n    return (\n      <>\n        <CreateStreamCardToggler\n          title={title}\n          openDialog={this.openDialog}\n          deviceIndex={deviceIndex}\n          deviceList={deviceList}\n          channelIndex={channelIndex}\n        />\n        <SelectDeviceDialog\n          ref={this.dialogElement}\n          deviceList={deviceList}\n          deviceIndex={deviceIndex}\n          setDeviceIndex={setDeviceIndex}\n          channelIndex={channelIndex}\n          setChannelIndex={setChannelIndex}\n        />\n      </>\n    );\n  }\n}\n\nCreateStreamDeviceCardWrapper.propTypes = {\n  title: PropTypes.string.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  setDeviceIndex: PropTypes.func.isRequired,\n  channelIndex: PropTypes.number.isRequired,\n  setChannelIndex: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { Forward } from \"@material-ui/icons\";\n\nimport CreateStreamDeviceCardWrapper from \"./CreateStreamDeviceCardWrapper\";\nimport { getSenders, getReceivers } from \"../api/DeviceApi\";\nimport { createStream } from \"../api/StreamApi\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class CreateStreamPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      senders: [],\n      receivers: [],\n      senderDeviceIndex: -1,\n      senderChannelIndex: -1,\n      receiverDeviceIndex: -1,\n      receiverChannelIndex: -1\n    };\n\n    this.createStream = this.createStream.bind(this);\n    this.setSenders = this.setSenders.bind(this);\n    this.setReceivers = this.setReceivers.bind(this);\n    this.setSenderDeviceIndex = this.setSenderDeviceIndex.bind(this);\n    this.setReceiverDeviceIndex = this.setReceiverDeviceIndex.bind(this);\n    this.setSenderChannelIndex = this.setSenderChannelIndex.bind(this);\n    this.setReceiverChannelIndex = this.setReceiverChannelIndex.bind(this);\n  }\n\n  componentDidMount() {\n    getSenders(this.setSenders);\n    getReceivers(this.setReceivers);\n  }\n\n  setSenders(value) {\n    this.setState({\n      senders: value\n    });\n  }\n\n  setReceivers(value) {\n    this.setState({\n      receivers: value\n    });\n  }\n\n  setSenderDeviceIndex(value) {\n    this.setState({\n      senderDeviceIndex: value,\n      senderChannelIndex: -1\n    });\n  }\n\n  setReceiverDeviceIndex(value) {\n    this.setState({\n      receiverDeviceIndex: value,\n      receiverChannelIndex: -1\n    });\n  }\n\n  setSenderChannelIndex(value) {\n    this.setState({\n      senderChannelIndex: value\n    });\n  }\n\n  setReceiverChannelIndex(value) {\n    this.setState({\n      receiverChannelIndex: value\n    });\n  }\n\n  createStream() {\n    const {\n      senders,\n      receivers,\n      senderDeviceIndex,\n      senderChannelIndex,\n      receiverDeviceIndex,\n      receiverChannelIndex\n    } = this.state;\n\n    const receiver = receivers[receiverDeviceIndex];\n    const sender = senders[senderDeviceIndex];\n\n    if (receiver && sender) {\n      const recieverChannel = receiver.channels[receiverChannelIndex];\n      const senderChannel = sender.channels[senderChannelIndex];\n      if (recieverChannel && senderChannel)\n        createStream(recieverChannel.id, senderChannel.id)\n          .then(() => {\n            snackbar(\"success\", `Successfully created stream!`);\n          })\n          .catch(() => {\n            snackbar(\"error\", `Failed to create stream`);\n          });\n    }\n  }\n\n  render() {\n    const {\n      senders,\n      receivers,\n      senderDeviceIndex,\n      senderChannelIndex,\n      receiverDeviceIndex,\n      receiverChannelIndex\n    } = this.state;\n\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"stretch\"\n        direction=\"row\"\n        spacing={3}\n      >\n        <Grid item xs={5} style={{ margin: \"auto\" }}>\n          <CreateStreamDeviceCardWrapper\n            title=\"Sender\"\n            deviceList={senders}\n            deviceIndex={senderDeviceIndex}\n            setDeviceIndex={this.setSenderDeviceIndex}\n            channelIndex={senderChannelIndex}\n            setChannelIndex={this.setSenderChannelIndex}\n          />\n        </Grid>\n        <Grid item xs={2} style={{ margin: \"auto\", textAlign: \"center\" }}>\n          <Forward style={{ fontSize: 100 }} />\n        </Grid>\n        <Grid item xs={5} style={{ margin: \"auto\" }}>\n          <CreateStreamDeviceCardWrapper\n            title=\"Receiver\"\n            deviceList={receivers}\n            deviceIndex={receiverDeviceIndex}\n            setDeviceIndex={this.setReceiverDeviceIndex}\n            channelIndex={receiverChannelIndex}\n            setChannelIndex={this.setReceiverChannelIndex}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.createStream}\n          >\n            Create Stream\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport CreateStreamPageContents from \"./CreateStreamPageContents\";\n\nexport default function CreateStreamPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [\"New Stream\", \"/Streams/New\"]\n  ];\n  return (\n    <Page title=\"Create a Stream\" breadcrumbs={breadcrumbs}>\n      <CreateStreamPageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LogsTable from \"./LogsTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class LogsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.columns = [\n      {\n        title: \"ID\",\n        field: \"id\",\n        cellStyle: { width: \"5%\" }\n      },\n      {\n        title: \"Date\",\n        field: \"dateTime\",\n        defaultSort: \"desc\",\n        cellStyle: { width: \"15%\" }\n      },\n      {\n        title: \"Level\",\n        field: \"level\",\n        cellStyle: { width: \"10%\" }\n      },\n      {\n        title: \"Message\",\n        field: \"message\",\n        sorting: false\n      }\n    ];\n    this.logsDataSource = props.logsDataSource;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.logsDataSource\n      .getAllLogs()\n      .then(this.handleLogsChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch logs: ${error.message}`);\n      });\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} columns={this.columns} />;\n  }\n}\n\nLogsTableWrapper.propTypes = {\n  logsDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\n\nimport LogsTableWrapper from \"./LogsTableWrapper\";\nimport Page from \"../general/Page\";\nimport * as logsDataSource from \"../api/LogApi\";\n\nexport default function LogListPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Logs\", \"/Logs\"]\n  ];\n\n  return (\n    <Page title=\"Logs\" breadcrumbs={breadcrumbs}>\n      <LogsTableWrapper logsDataSource={logsDataSource} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, TextField, Grid } from \"@material-ui/core\";\nimport DashboardCard from \"../dashboard/DashboardCard\";\n\nexport default class FormConsole extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      passwordErrorCondition: false\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.setUsername = this.setUsername.bind(this);\n    this.setPassword = this.setPassword.bind(this);\n    this.setPasswordError = this.setPasswordError.bind(this);\n    this.passwordOnChange = this.passwordOnChange.bind(this);\n  }\n\n  onSubmit(event) {\n    const { handleSubmit } = this.props;\n    const { username, password } = this.state;\n    event.preventDefault();\n    handleSubmit(username, password);\n  }\n\n  setUsername(username) {\n    this.setState({\n      username\n    });\n  }\n\n  setPassword(password) {\n    this.setState({\n      password\n    });\n  }\n\n  setPasswordError(password) {\n    const { passwordError } = this.props;\n    if (passwordError) {\n      if (\n        password.length < passwordError.upperbound &&\n        password.length > passwordError.lowerbound\n      ) {\n        this.setState({ passwordErrorCondition: true });\n      } else {\n        this.setState({ passwordErrorCondition: false });\n      }\n    }\n  }\n\n  passwordOnChange(password) {\n    this.setPassword(password);\n    this.setPasswordError(password);\n  }\n\n  render() {\n    const {\n      buttonName,\n      isValidate,\n      passwordInputProps,\n      passwordHelperText\n    } = this.props;\n    const { passwordErrorCondition } = this.state;\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"stretch\"\n        direction=\"row\"\n        spacing={3}\n      >\n        <Grid item xs={6}>\n          <DashboardCard title=\"\">\n            <div>\n              <form noValidate={!isValidate} onSubmit={this.onSubmit}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  autoFocus\n                  onChange={(event) => this.setUsername(event.target.value)}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  error={passwordErrorCondition}\n                  inputProps={passwordInputProps}\n                  helperText={passwordHelperText}\n                  autoComplete=\"current-password\"\n                  // prettier-ignore\n                  onChange={(event) => this.passwordOnChange(event.target.value)}\n                />\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  {buttonName}\n                </Button>\n              </form>\n            </div>\n          </DashboardCard>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nFormConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  buttonName: PropTypes.string.isRequired,\n  isValidate: PropTypes.bool,\n  passwordError: PropTypes.shape({\n    upperbound: PropTypes.number.isRequired,\n    lowerbound: PropTypes.number.isRequired\n  }),\n  passwordInputProps: PropTypes.shape({\n    maxLength: PropTypes.number.isRequired,\n    minLength: PropTypes.number.isRequired\n  }),\n  passwordHelperText: PropTypes.string\n};\n\nFormConsole.defaultProps = {\n  isValidate: false,\n  passwordError: undefined,\n  passwordInputProps: undefined,\n  passwordHelperText: undefined\n};\n","import axios from \"axios\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nexport async function createUser(credentials) {\n  return axios.post(\n    process.env.REACT_APP_SIGNUP,\n    {\n      username: credentials.username,\n      password: credentials.password,\n      userRole: \"USER\"\n    },\n    getAuthorizationHeader()\n  );\n}\n","import React from \"react\";\nimport FormConsole from \"../../general/userForm/FormConsole\";\nimport { createUser } from \"../../api/UserManagementApi\";\nimport { snackbar } from \"../../general/SnackbarMessage\";\n\nfunction handleSubmit(username, password) {\n  createUser({ username, password })\n    .then(() => {\n      snackbar(\"success\", `User ${username} successfully created!`);\n    })\n    .catch((error) => {\n      snackbar(\"error\", `Failed to create user: ${error.message}`);\n    });\n}\n\nexport default class CreateUserPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = handleSubmit;\n  }\n\n  render() {\n    return (\n      <>\n        <FormConsole\n          handleSubmit={this.handleSubmit}\n          buttonName=\"Create\"\n          isValidate\n          passwordError={{ upperbound: 5, lowerbound: 0 }}\n          passwordInputProps={{ maxLength: 20, minLength: 5 }}\n          passwordHelperText=\"Password must be between 5 to 20 characters\"\n        />\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nimport Page from \"../../general/Page\";\nimport CreateUserPageContents from \"./CreateUserPageContents\";\n\nexport default function CreateUserPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Admin\"],\n    [\"Create a User\", \"/Admin/New\"]\n  ];\n\n  return (\n    <Page title=\"Create a User\" breadcrumbs={breadcrumbs}>\n      <CreateUserPageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StreamDeviceCard from \"../general/StreamDeviceCard\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport ButtonInfo from \"../general/dashboard/ButtonInfo\";\n\nexport default function StreamDetailsDeviceCard(props) {\n  const { cardTitle, device, channel } = props;\n  const button = new ButtonInfo(\n    `/Devices/Details/${device.serialNumber}`,\n    { device },\n    \"View Device\"\n  );\n\n  return (\n    <StreamDeviceCard\n      title={cardTitle}\n      button={button}\n      device={device}\n      channel={channel}\n    />\n  );\n}\n\nStreamDetailsDeviceCard.propTypes = {\n  cardTitle: PropTypes.string.isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  channel: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../general/dialog/Dialog\";\nimport { deleteStream } from \"../api/StreamApi\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class DeleteStreamDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  confirmDelete() {\n    const { deleteId, history } = this.props;\n    this.dialogElement.current.closeDialog();\n    deleteStream(deleteId)\n      .then(() => {\n        history.push(\"/Streams\");\n        snackbar(\"success\", `Stream successfully deleted!`);\n      })\n      .catch(() => {\n        snackbar(\"error\", `Failed to delete stream`);\n      });\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId } = this.props;\n    const title = \"Confirm Delete\";\n    const message = `Are you sure you want to end stream ${deleteId}?`;\n\n    const actionButton = {\n      name: \"Confirm\",\n      onClick: this.confirmDelete\n    };\n\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        {message}\n      </Dialog>\n    );\n  }\n}\n\nDeleteStreamDialog.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Tooltip } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withRouter } from \"react-router-dom\";\n\nimport DeleteStreamDialog from \"./DeleteStreamDialog\";\n\nclass DeleteStreamDialogOpener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId, history } = this.props;\n    return (\n      <>\n        <Tooltip title=\"Delete Stream\" aria-label=\"delete stream\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<DeleteIcon />}\n            onClick={this.openDialog}\n          >\n            Delete\n          </Button>\n        </Tooltip>\n        <DeleteStreamDialog\n          ref={this.dialogElement}\n          deleteId={deleteId}\n          history={history}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(DeleteStreamDialogOpener);\n\nDeleteStreamDialogOpener.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport SimpleTable from \"../general/simpleTable/SimpleTable\";\nimport { getStreamStatistics } from \"../api/StreamApi\";\nimport ButtonInfo from \"../general/dashboard/ButtonInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default class StreamStatisticsCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stats: null\n    };\n    this.stream = props.stream;\n    this.handleStatsChange = this.handleStatsChange.bind(this);\n    this.getProperties = this.getProperties.bind(this);\n    this.getButton = this.getButton.bind(this);\n  }\n\n  componentDidMount() {\n    getStreamStatistics(this.stream.id).then(this.handleStatsChange);\n  }\n\n  handleStatsChange(stats) {\n    this.setState({\n      stats\n    });\n  }\n\n  getProperties() {\n    const { stats } = this.state;\n    if (!stats) return {};\n    return {\n      Time: stats.time,\n      \"Round-Trip-Time\": stats.link.rtt,\n      \"Packets Retransmitted\": stats.send.packetsRetransmitted,\n      \"Packets Dropped\": stats.send.packetsDropped\n    };\n  }\n\n  getButton() {\n    const { stats } = this.state;\n    const { stream } = this;\n    if (!stats) return null;\n    return new ButtonInfo(\n      `/Streams/Details/${stream.id}/Statistics`,\n      { statistics: stats, stream },\n      \"More Statistics\"\n    );\n  }\n\n  render() {\n    return (\n      <DashboardCard title=\"Statistics\" button={this.getButton()}>\n        <Grid item xs={12}>\n          <SimpleTable properties={this.getProperties()} />\n        </Grid>\n      </DashboardCard>\n    );\n  }\n}\n\nStreamStatisticsCard.propTypes = {\n  stream: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LogsTable from \"../loglist/LogsTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class StreamLogTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.columns = [\n      {\n        title: \"Date\",\n        field: \"dateTime\",\n        defaultSort: \"desc\"\n      },\n      {\n        title: \"Level\",\n        field: \"level\"\n      },\n      {\n        title: \"Message\",\n        field: \"message\",\n        sorting: false\n      }\n    ];\n    this.dataSource = props.dataSource;\n    this.handleStreamLogsChange = this.handleStreamLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { streamId } = this.props;\n    this.dataSource\n      .getStreamLogs(streamId)\n      .then(this.handleStreamLogsChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch stream logs: ${error.message}`);\n      });\n  }\n\n  handleStreamLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} columns={this.columns} />;\n  }\n}\n\nStreamLogTableWrapper.propTypes = {\n  streamId: PropTypes.number.isRequired,\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport StreamLogTableWrapper from \"../StreamLogTableWrapper\";\nimport * as streamLogsDataSource from \"../../api/LogApi\";\n\nexport default function StreamLogCard(props) {\n  const { streamId } = props;\n\n  return (\n    <DashboardCard title=\"Logs\">\n      <Grid item xs={12}>\n        <StreamLogTableWrapper\n          dataSource={streamLogsDataSource}\n          streamId={streamId}\n        />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nStreamLogCard.propTypes = {\n  streamId: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Container, Grid } from \"@material-ui/core\";\n\nimport StreamInfo from \"../model/StreamInfo\";\nimport StreamDetailsDeviceCard from \"./StreamDetailsDeviceCard\";\nimport DeleteStreamDialogOpener from \"./DeleteStreamDialogOpener\";\nimport StreamStatisticsCard from \"./StreamStatisticsCard\";\nimport StreamLogCard from \"./cards/StreamLogCard\";\n\nexport default function StreamDetailsPageContents(props) {\n  const { stream } = props;\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <StreamDetailsDeviceCard\n            cardTitle=\"Sender Details\"\n            device={stream.sender}\n            channel={stream.outputChannel}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <StreamDetailsDeviceCard\n            cardTitle=\"Receiver Details\"\n            device={stream.receiver}\n            channel={stream.inputChannel}\n          />\n        </Grid>\n        <Grid item xs={7}>\n          <StreamLogCard streamId={stream.id} />\n        </Grid>\n        <Grid item xs={5}>\n          <StreamStatisticsCard stream={stream} />\n        </Grid>\n      </Grid>\n      <Box className=\"alignRightFloatPadded\">\n        <DeleteStreamDialogOpener deleteId={stream.id} />\n      </Box>\n    </Container>\n  );\n}\n\nStreamDetailsPageContents.propTypes = {\n  stream: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StreamInfo from \"../model/StreamInfo\";\nimport StreamDetailsPageContents from \"./StreamDetailsPageContents\";\nimport Page from \"../general/Page\";\n\nexport default function StreamDetailsPage(props) {\n  const {\n    location: {\n      state: { stream }\n    }\n  } = props;\n\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [`Stream Details`, `/Streams/Details/${stream.id}`, { stream }]\n  ];\n\n  return (\n    <Page title=\"Stream Details\" breadcrumbs={breadcrumbs}>\n      <StreamDetailsPageContents stream={stream} />\n    </Page>\n  );\n}\n\nStreamDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      stream: PropTypes.instanceOf(StreamInfo)\n    })\n  }).isRequired\n};\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport DashboardButton from \"./dashboard/DashboardButton\";\nimport DashboardCard from \"./dashboard/DashboardCard\";\nimport Page from \"./Page\";\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\n\nexport default function PathNotFoundPage() {\n  return (\n    <Page title=\"Error 404: Path not found\" breadcrumbs={[]}>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={6}>\n          <DashboardCard title=\"Sorry, that page doesn't exist!\">\n            {isAuthenticated() ? (\n              <DashboardButton href=\"/Home\">Go Home</DashboardButton>\n            ) : (\n              <DashboardButton href=\"/Login\">Go to Login</DashboardButton>\n            )}\n          </DashboardCard>\n        </Grid>\n      </Grid>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport StreamStatisticsInfo from \"../../model/StreamStatistics/StreamStatisticsInfo\";\nimport SimpleTable from \"../../general/simpleTable/SimpleTable\";\n\nexport default function StatisticsOverviewCard(props) {\n  const { stats } = props;\n\n  const properties = {\n    \"Stream ID\": stats.id,\n    Time: stats.time,\n    Flow: stats.window.flow,\n    Congestion: stats.window.congestion,\n    Flight: stats.window.flight,\n    Latency: stats.link.rtt,\n    Bandwidth: stats.link.bandwidth,\n    \"Maximum Bandwidth\": stats.link.maxBandwidth\n  };\n\n  return (\n    <DashboardCard title=\"Overview\">\n      <Grid item xs={12}>\n        <SimpleTable properties={properties} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nStatisticsOverviewCard.propTypes = {\n  stats: PropTypes.instanceOf(StreamStatisticsInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport StreamStatisticsInfo from \"../../model/StreamStatistics/StreamStatisticsInfo\";\nimport SimpleTable from \"../../general/simpleTable/SimpleTable\";\n\nexport default function StatisticsSendingCard(props) {\n  const { stats } = props;\n\n  const properties = {\n    Packets: stats.send.packets,\n    \"Packets Lost\": stats.send.packetsLost,\n    \"Packets Dropped\": stats.send.packetsDropped,\n    \"Packets Retransmitted\": stats.send.packetsRetransmitted,\n    Bytes: stats.send.bytes,\n    \"Bytes Dropped\": stats.send.bytesDropped,\n    \"Bitrate (Mbps)\": stats.send.mbitRate\n  };\n\n  return (\n    <>\n      <DashboardCard title=\"Sending Statistics\">\n        <Grid item xs={12}>\n          <SimpleTable properties={properties} />\n        </Grid>\n      </DashboardCard>\n    </>\n  );\n}\n\nStatisticsSendingCard.propTypes = {\n  stats: PropTypes.instanceOf(StreamStatisticsInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport StreamStatisticsInfo from \"../../model/StreamStatistics/StreamStatisticsInfo\";\nimport SimpleTable from \"../../general/simpleTable/SimpleTable\";\n\nexport default function StatisticsReceivingCard(props) {\n  const { stats } = props;\n\n  const properties = {\n    Packets: stats.receive.packets,\n    \"Packets Lost\": stats.receive.packetsLost,\n    \"Packets Dropped\": stats.receive.packetsDropped,\n    \"Packets Retransmitted\": stats.receive.packetsRetransmitted,\n    \"Packets Belated\": stats.receive.packetsBelated,\n    Bytes: stats.receive.bytes,\n    \"Bytes Lost\": stats.receive.bytesLost,\n    \"Bytes Dropped\": stats.receive.bytesDropped,\n    \"Bitrate (Mbps)\": stats.receive.mbitRate\n  };\n\n  return (\n    <DashboardCard title=\"Receiving Statistics\">\n      <Grid item xs={12}>\n        <SimpleTable properties={properties} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nStatisticsReceivingCard.propTypes = {\n  stats: PropTypes.instanceOf(StreamStatisticsInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport StreamStatisticsInfo from \"../../model/StreamStatistics/StreamStatisticsInfo\";\nimport StatisticsOverviewCard from \"./StatisticsOverviewCard\";\nimport StatisticsSendingCard from \"./StatisticsSendingCard\";\nimport StatisticsReceivingCard from \"./StatisticsReceivingCard\";\n\nexport default function StreamStatisticsPageContents(props) {\n  const { statistics } = props;\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={4}>\n        <StatisticsOverviewCard stats={statistics} />\n      </Grid>\n      <Grid item xs={4}>\n        <StatisticsSendingCard stats={statistics} />\n      </Grid>\n      <Grid item xs={4}>\n        <StatisticsReceivingCard stats={statistics} />\n      </Grid>\n    </Grid>\n  );\n}\n\nStreamStatisticsPageContents.propTypes = {\n  statistics: PropTypes.instanceOf(StreamStatisticsInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StreamStatisticsInfo from \"../../model/StreamStatistics/StreamStatisticsInfo\";\nimport Page from \"../../general/Page\";\nimport StreamStatisticsPageContents from \"./StreamStatisticsPageContents\";\nimport StreamInfo from \"../../model/StreamInfo\";\n\nexport default function StreamStatisticsPage(props) {\n  const {\n    location: {\n      state: { statistics, stream }\n    }\n  } = props;\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [\"Stream Details\", `/Streams/Details/${stream.id}`, { stream }],\n    [\n      \"Statistics\",\n      `/Streams/Details/${stream.id}/Statistics`,\n      { statistics, stream }\n    ]\n  ];\n\n  return (\n    <Page title=\"Stream Statistics\" breadcrumbs={breadcrumbs}>\n      <StreamStatisticsPageContents statistics={statistics} />\n    </Page>\n  );\n}\n\nStreamStatisticsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      statistics: PropTypes.instanceOf(StreamStatisticsInfo),\n      stream: PropTypes.instanceOf(StreamInfo).isRequired\n    })\n  }).isRequired\n};\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport ProtectedRoute from \"./ProtectedRoute\";\n\nimport LoginPage from \"../login/LoginPage\";\nimport HomePage from \"../homepage/HomePage\";\nimport DeviceListPage from \"../devicelist/DeviceListPage\";\nimport DeviceDetailsPage from \"../deviceDetailsPage/DeviceDetailsPage\";\nimport StreamListPage from \"../streamlist/StreamListPage\";\nimport CreateStreamPage from \"../createStream/CreateStreamPage\";\nimport LogListPage from \"../loglist/LogListPage\";\nimport CreateUserPage from \"../admin/createUser/CreateUserPage\";\nimport StreamDetailsPage from \"../streamDetails/StreamDetailsPage\";\nimport PathNotFoundPage from \"../general/PathNotFoundPage\";\nimport StreamStatisticsPage from \"../streamDetails/DetailedStreamStatistics/StreamStatisticsPage\";\nimport SnackbarMessage from \"../general/SnackbarMessage\";\n\nexport default function AppRouter() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <ProtectedRoute path=\"/Login\" render={() => <LoginPage />} />\n        <ProtectedRoute\n          path=\"/Home\"\n          authenticationRequired\n          render={() => {\n            return <HomePage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Devices/Details/:serialNumber\"\n          authenticationRequired\n          render={(location) => {\n            return <DeviceDetailsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Devices\"\n          authenticationRequired\n          render={() => {\n            return <DeviceListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/New\"\n          authenticationRequired\n          render={() => {\n            return <CreateStreamPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/Details/:streamId/Statistics\"\n          authenticationRequired\n          render={(location) => {\n            return <StreamStatisticsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/Details/:streamId\"\n          authenticationRequired\n          render={(location) => {\n            return <StreamDetailsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams\"\n          authenticationRequired\n          render={() => {\n            return <StreamListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Logs\"\n          authenticationRequired\n          render={() => {\n            return <LogListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Admin/New\"\n          authenticationRequired\n          render={() => {\n            return <CreateUserPage />;\n          }}\n        />\n        <Route path=\"/\">\n          <PathNotFoundPage />\n        </Route>\n      </Switch>\n      <SnackbarMessage />\n    </BrowserRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppRouter from \"./app/AppRouter\";\n\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n"],"sourceRoot":""}