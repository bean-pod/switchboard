{"version":3,"sources":["general/HeaderBar.jsx","general/DynamicBreadcrumb.jsx","general/Buttons/StreamButton.jsx","general/Buttons/AddDeviceButton.jsx","devicelist/TitleBox.jsx","devicelist/TabPanel.jsx","model/InputChannelInfo.js","model/OutputChannelInfo.js","devicelist/ChannelDetailsTableHead.jsx","devicelist/ChannelDetailsTableRow.jsx","devicelist/ChannelDetailsTable.jsx","general/StatusIndicator.jsx","model/DeviceInfo.js","model/StreamInfo.js","model/LogInfo.js","api/SampleData.js","api/DeviceApi.js","general/Buttons/DeleteDeviceButton.jsx","devicelist/ActionMenu.jsx","devicelist/DevicesTable.jsx","general/VerticalTabs.jsx","devicelist/ContentsTable.jsx","DefaultMakeStylesTheme.js","devicelist/DeviceListPage.jsx","createStream/SearchBar.jsx","createStream/SelectDeviceTableRow.jsx","createStream/SelectDevicesTable.jsx","createStream/StreamingTable.jsx","model/ConvertDataFormat.js","api/StreamApi.js","streamlist/DeleteStream.jsx","streamlist/StreamsTable.jsx","streamlist/StreamList.jsx","createStream/StreamingPage.jsx","general/HorizontalTabPanel.jsx","loglist/LogsTable.jsx","api/LogApi.js","deviceDetailsPage/TabPanels/DeviceDetailsActivityPanel.jsx","deviceDetailsPage/TabPanels/DeviceDetailsNotesPanel.jsx","deviceDetailsPage/DeviceDetailsConciseRow.jsx","deviceDetailsPage/DeviceDetailsConciseTable.jsx","deviceDetailsPage/DeviceDetailsTabTable.jsx","deviceDetailsPage/DeviceDetailsPage.jsx","loglist/LogListPage.jsx","api/AuthenticationApi.js","login/LoginFailedDialog.jsx","login/LoginConsole.jsx","index.jsx","general/HomePage.jsx","login/LoginPage.jsx"],"names":["HeaderBar","props","classes","makeStyles","theme","menuButton","marginRight","spacing","className","AppBar","position","Toolbar","IconButton","edge","this","color","aria-label","Menu","to","activeClassName","exact","id","Notifications","AccountCircle","React","Component","DynamicBreadcrumb","breadcrumbs","Box","padding","Breadcrumbs","map","crumb","i","Link","href","Typography","StreamButton","type","StyledButton","withStyles","root","background","borderRadius","border","height","margin","label","textTransform","Button","SwapHoriz","AddDeviceButton","AddSharp","TitleBox","TabPanel","children","value","index","role","hidden","aria-labelledby","p","component","InputChannelInfo","name","port","decoder","OutputChannelInfo","encoder","ChannelDetailsTableHead","TableRow","TableCell","ChannelDetailsTableRow","channel","ChannelDetailsTable","channels","Table","TableHead","TableBody","StatusIndicator","status","getStatusStyle","DeviceInfo","serial","lastCommunication","publicIpAddress","privateIpAddress","displayName","deviceType","extras","serialNumber","publicIp","privateIp","StreamInfo","sender","receiver","date","Date","toString","split","slice","join","time","LogInfo","dateTime","level","message","sampleInputChannels","InChannelInfo","sampleOutputChannels","OutChannelInfo","getAllLogs","callback","dates","getStatus","lastCommunicationString","lastCommunicationDate","now","getTime","getSenders","axios","get","process","then","senders","data","output","device","catch","SampleData","getReceivers","receivers","input","deleteDevice","deviceId","delete","REACT_APP_DEVICE","renderDeleteButton","openDeleteDialog","variant","onClick","renderDeleteMenuItem","MenuItem","DeleteDeviceButton","button","deleteId","useState","open","setOpen","history","useHistory","cancelDelete","Dialog","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","DeviceApi","location","pathname","endsWith","go","push","autoFocus","ActionMenu","state","anchorElement","setAnchorElement","bind","handleClick","handleClose","event","currentTarget","element","setState","aria-controls","aria-haspopup","size","MoreVert","anchorEl","keepMounted","Boolean","anchorOrigin","horizontal","vertical","transformOrigin","getColumnInfo","title","field","render","rowData","deviceInfo","lookup","Online","Pending","Error","Offline","filtering","sorting","align","export","DevicesTable","devices","TableContainer","style","maxHeight","components","columns","detailPanel","icon","ExpandMore","openIcon","ExpandLess","tooltip","options","toolbar","search","exportButton","headerStyle","backgroundColor","fontWeight","draggable","icons","Filter","FilterList","Search","ResetSearch","Clear","SortArrow","ArrowDownward","Export","SaveAlt","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","VerticalTabs","handleChange","newTab","setValue","tabs","Tabs","onChange","orientation","indicatorColor","Tab","ContentsTable","dataSource","handleValueChange","handleSendersChange","handleReceiversChange","tabIndex","display","flexGrow","defaultMakeStylesTheme","palette","paper","borderRight","divider","DeviceListPage","Container","useStyles","SearchBar","right","marginLeft","breakpoints","up","width","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","TextField","placeholder","InputProps","startAdornment","InputAdornment","SelectDeviceTableRow","deviceDetails","ListItem","dense","ListItemText","primary","Collapse","in","timeout","unmountOnExit","List","disablePadding","secondary","Select","defaultValue","SelectDevicesTable","overflow","StreamingTable","selectedSenderID","selectedReceiverID","onSenderSelected","onReceiverSelected","handleSubmit","post","inputChannelId","outputChannelId","preventDefault","selectedSender","target","selectedReceiver","onSubmit","Grid","container","alignContent","justify","item","xs","convertToDataObject","databaseDevice","inputs","outputs","getStream","streamId","Promise","resolve","reject","response","stream","outputChannel","inputChannel","getAllStreams","streams","all","sampleSenders","sampleReceivers","deleteStream","DeleteStream","Tooltip","Delete","StreamApi","StreamsTable","concat","Intl","DateTimeFormat","resolvedOptions","timeZone","StreamList","handleStreamsChange","StreamingPage","deviceDataSource","streamDataSource","HorizontalTabPanel","getOptions","bodyHeight","showTitle","maxBodyHeight","minBodyHeight","LogsTable","logs","cellStyle","defaultProps","getLogs","endpoint","a","log","deviceSerialNumber","DeviceDetailsActivityPanel","handleLogsChange","LogApi","Paper","DeviceDetailsNotesPanel","DeviceDetailsConciseRow","getPropertyDisplayName","createTableCellContents","createInnerTable","DeviceDetailsConciseTable","getConciseProperties","property","DeviceDetailsTabTable","textColor","tabInfo","getPanelContents","DeviceDetailsPage","paddingLeft","paddingBottom","marginTop","LogListPage","unknownErrorMessage","incorrectCredentialsMessage","error","LoginFailedDialog","closeDialog","flexDirection","form","submit","LoginConsole","username","setUsername","password","setPassword","maxWidth","noValidate","required","fullWidth","autoComplete","ReactDOM","StrictMode","path","dialogOpen","setDialogOpen","dialogMessage","setDialogMessage","AuthenticationApi","document","getElementById"],"mappings":"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ACTY,EAAOJ,aACPN,EACAU,EAAOiC,OAAO1C,gBACdS,EAAOiC,OAAOzC,iBACdQ,EAAOiC,OAAOxC,YACd2B,GAAUpB,EAAOV,mBACjBT,EACA,UACA,CAAC,6CAKRqD,OAAM,YDrCJ,SAAoBhB,GAuGzBA,EAtGsB,CACpB,IAAI9B,GACF,eACA,KACA,gBACA,UACA,WACA,SACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,QACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,UACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,UACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,SACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,QACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,UACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,UACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,SACA2B,GACA,UACApB,MC7DAwC,CAAsBjB,MAIrB,SAASkB,GAAalB,GAC3BQ,KACGC,IAAIC,sDACJC,MAAK,SAACQ,GACLnB,EACEmB,EAAUN,KAAK9F,KAAI,SAACgE,GAClB,IAAIpB,EAAW,GACXoB,EAASqC,QACXzD,EAAWoB,EAASqC,MAAMrG,KAAI,SAACqG,GAC7B,OAAO,IAAIrE,GACTqE,EAAM/G,GACN+G,EAAM3D,QAAQT,KACdoE,EAAM3D,QAAQR,KACd,UAIN,IAAMmB,EAC0B,MAA9BW,EAASX,kBACL,QACAW,EAASX,kBACf,OAAO,IAAIF,GACTa,EAASL,aACTN,EACAW,EAASgC,OAAO1C,gBAChBU,EAASgC,OAAOzC,iBAChBS,EAASgC,OAAOxC,YAChB2B,GAAUnB,EAASX,mBACnBT,EACA,UACA,CAAC,6CAKRqD,OAAM,YD0CJ,SAAsBhB,GA0M3BA,EAzMwB,CACtB,IAAI9B,GACF,eACA,KACA,gBACA,UACA,aACA,SACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,QACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,SACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,QACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,SACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,SACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,QACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,SACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,QACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,SACAyB,GACA,UACAlB,MC/OAwC,CAAwBjB,MAIvB,SAASqB,GAAaC,GAC3B,OAAOd,KACJe,OADI,UACMb,maAAYc,iBADlB,YACsCF,IAC1C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","file":"static/js/main.9f10d6ff.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\nimport { AccountCircle, Menu, Notifications } from \"@material-ui/icons/\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default class HeaderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      menuButton: {\n        marginRight: theme.spacing(2)\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"headerBar\">\n          <AppBar position=\"static\">\n            <Toolbar className=\"darkGrey\">\n              <IconButton\n                edge=\"start\"\n                className={this.classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n              >\n                <Menu />\n              </IconButton>\n              <div className=\"headerTitle\">\n                <NavLink\n                  to=\"/\"\n                  activeClassName=\"headerTitle\"\n                  className=\"headerTitle\"\n                  exact\n                >\n                  Switchboard\n                </NavLink>\n              </div>\n              <IconButton id=\"notifBtn\" color=\"inherit\">\n                <Notifications />\n              </IconButton>\n              <IconButton id=\"acctBtn\" color=\"inherit\">\n                <AccountCircle />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Box, Breadcrumbs, Link, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default function DynamicBreadcrumb(props) {\n  const { breadcrumbs } = props;\n  return (\n    <Box padding=\"2em 0em 0em 1em\">\n      <Breadcrumbs aria-label=\"breadcrumb\" id=\"breadcrumbParent\">\n        {breadcrumbs.map((crumb, i) => {\n          return (\n            <Link\n              color=\"inherit\"\n              href={crumb[1]}\n              id={`breadcrumb${i}`}\n              key={`breadcrumb ${crumb[0]}`}\n            >\n              <Typography color=\"textPrimary\">{crumb[0]}</Typography>\n            </Link>\n          );\n        })}\n      </Breadcrumbs>\n    </Box>\n  );\n}\nDynamicBreadcrumb.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired\n};\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { SwapHoriz } from \"@material-ui/icons/\";\n\nexport default function StreamButton(props) {\n  const { id, type } = props;\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      padding: \"0 5px\",\n      margin: \"1em\"\n    },\n    label: {\n      textTransform: \"\"\n    }\n  })(Button);\n\n  return (\n    <StyledButton id={id} type={type}>\n      <div className=\"buttonText\">\n        <SwapHoriz />\n        Stream\n      </div>\n    </StyledButton>\n  );\n}\n\nStreamButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport { AddSharp } from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\n\nexport default class AddDeviceButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.id = props.id;\n  }\n\n  render() {\n    const StyledButton = withStyles({\n      root: {\n        background: \"linear-gradient(45deg, #01b2fe 30%, #01b2fe 90%)\",\n        borderRadius: 90,\n        border: 0,\n        color: \"white\",\n        height: 40,\n        padding: \"0px\"\n      },\n      label: {\n        textTransform: \"\"\n      }\n    })(Button);\n\n    return (\n      <StyledButton id={this.id}>\n        <div className=\"buttonText\">\n          <AddSharp />\n          Add Device\n        </div>\n      </StyledButton>\n    );\n  }\n}\nAddDeviceButton.propTypes = {\n  id: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nimport StreamButton from \"../general/Buttons/StreamButton\";\nimport AddDeviceButton from \"../general/Buttons/AddDeviceButton\";\n\nexport default function TitleBox() {\n  return (\n    <>\n      <Box className=\"flexContents headerAreaNoUnderline\">\n        <div className=\"title\">My Devices</div>\n        <div className=\"alignRightFloat\">\n          <NavLink\n            to=\"/Streaming\"\n            activeClassName=\"hideLinkStyle\"\n            className=\"hideLinkStyle\"\n            exact\n          >\n            <StreamButton id=\"DeviceListStreamBtn\" type=\"submit\" />\n          </NavLink>\n          <AddDeviceButton id=\"DeviceListAddDevBtn\" />\n        </div>\n      </Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default function TabPanel(props) {\n  const { children, value, index } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n    >\n      {value === index && (\n        <Box p={0}>\n          <Typography component=\"span\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.element.isRequired,\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired\n};\n","export default class InputChannelInfo {\n  constructor(id, name, port, decoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.decoder = decoder;\n  }\n}\n","export default class OutputChannelInfo {\n  constructor(id, name, port, encoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.encoder = encoder;\n  }\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function ChannelDetailsTableHead() {\n  return (\n    <TableRow>\n      <TableCell className=\"lightGrey\">ID</TableCell>\n      <TableCell className=\"lightGrey\">Name</TableCell>\n      <TableCell className=\"lightGrey\">Port</TableCell>\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\n\nexport default function ChannelDetailsTableRow(props) {\n  const {\n    channel: { id, name, port }\n  } = props;\n  return (\n    <TableRow>\n      <TableCell>{id}</TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{port}</TableCell>\n    </TableRow>\n  );\n}\nChannelDetailsTableRow.propTypes = {\n  channel: PropTypes.oneOfType([\n    PropTypes.instanceOf(InputChannelInfo),\n    PropTypes.instanceOf(OutputChannelInfo)\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Table, TableBody, TableHead } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport ChannelDetailsTableHead from \"./ChannelDetailsTableHead\";\nimport ChannelDetailsTableRow from \"./ChannelDetailsTableRow\";\n\nexport default function ChannelDetailsTable(props) {\n  const { channels } = props;\n  return (\n    <Table className=\"flexContents\">\n      <TableHead>\n        <ChannelDetailsTableHead />\n      </TableHead>\n      <TableBody>\n        {channels.map((channel) => {\n          return (\n            <ChannelDetailsTableRow channel={channel} key={channel.name} />\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\nChannelDetailsTable.propTypes = {\n  channels: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.instanceOf(InputChannelInfo),\n      PropTypes.instanceOf(OutputChannelInfo)\n    ])\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class StatusIndicator extends React.Component {\n  getStatusStyle() {\n    const { status } = this.props;\n    switch (status) {\n      case \"Online\":\n        return \"green statusIndicatorBody statusTextOnline \";\n      case \"Pending\":\n        return \"yellow statusIndicatorBody statusTextOnline\";\n      case \"Error\":\n        return \"red statusIndicatorBody statusTextOnline\";\n      default:\n        return \"lightGrey statusIndicatorBody statusTextOffline\";\n    }\n  }\n\n  render() {\n    const { status } = this.props;\n    return <div className={this.getStatusStyle()}>{status}</div>;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.oneOf([\"Online\", \"Offline\", \"Error\", \"Pending\"]).isRequired\n};\n","export default class DeviceInfo {\n  constructor(\n    serial,\n    lastCommunication,\n    publicIpAddress,\n    privateIpAddress,\n    displayName,\n    status,\n    channels,\n    deviceType,\n    extras\n  ) {\n    this.serialNumber = serial;\n    this.lastCommunication = lastCommunication;\n    this.publicIp = publicIpAddress;\n    this.privateIp = privateIpAddress;\n    this.name = displayName;\n    this.status = status;\n    this.channels = channels;\n    this.deviceType = deviceType;\n    this.extras = extras;\n  }\n\n  static getConciseProperties() {\n    return [\n      \"name\",\n      \"serialNumber\",\n      \"status\",\n      \"publicIp\",\n      \"privateIp\",\n      \"channels\"\n    ];\n  }\n}\n","export default class StreamInfo {\n  // to be used once backend has date, status, type, and time fields\n  // constructor(id, date, sender, receiver, status, type, time, extras) {\n  //     this.id = id;\n  //     this.date = new Date(date).toString().split(\" \").slice(0, 5).join(\" \");\n  //     this.sender = sender;\n  //     this.receiver = receiver;\n  //     this.status = status;\n  //     this.type = type;\n  //     this.time = time;\n  //     this.extras = extras;\n  // }\n\n  // temporary with static fields until backend is up to snuff\n  constructor(id, sender, receiver, extras) {\n    this.id = id;\n    this.date = new Date(\"2020-10-31T08:15:30\")\n      .toString()\n      .split(\" \")\n      .slice(0, 5)\n      .join(\" \");\n    this.sender = sender;\n    this.receiver = receiver;\n    this.status = \"Online\";\n    this.type = \"Type 1\";\n    this.time = \"00:34:44\";\n    this.extras = extras;\n  }\n}\n","export default class LogInfo {\n  constructor(id, dateTime, level, message) {\n    this.id = id;\n    this.dateTime = new Date(dateTime)\n      .toString()\n      .split(\" \")\n      .slice(0, 5)\n      .join(\" \");\n    this.level = level;\n    this.message = message;\n  }\n}\n","import DeviceInfo from \"../model/DeviceInfo\";\nimport OutChannelInfo from \"../model/OutputChannelInfo\";\nimport InChannelInfo from \"../model/InputChannelInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport LogInfo from \"../model/LogInfo\";\n\nconst extras = [\"Additional Device details go here\"];\nconst sampleInputChannels = [\n  new InChannelInfo(1, \"Input ch 1\", 500, null),\n  new InChannelInfo(2, \"Input ch 2\", 456, null),\n  new InChannelInfo(3, \"Input ch 3\", 800, null)\n];\nconst sampleOutputChannels = [\n  new OutChannelInfo(1, \"Output ch 1\", 500, null),\n  new OutChannelInfo(2, \"Output ch 2\", 456, null),\n  new OutChannelInfo(3, \"Output ch 3\", 800, null)\n];\n\nexport function getSenders(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:30:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 3\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:40:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 4\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:50:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 5\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:60:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 6\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:70:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 7\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:80:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 8\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:90:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 9\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n\n  callback(sampleSenders);\n}\n\nexport function getSampleSender() {\n  return new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n}\n\nexport function getReceivers(callback) {\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:03:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 3\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:04:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 4\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:05:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 5\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:06:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 6\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:07:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 7\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:08:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 8\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:09:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 9\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:11:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 11\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:21:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 12\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:31:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 13\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:41:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 14\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:51:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 15\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:61:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 16\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:71:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 17\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:81:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 18\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:91:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 19\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  callback(sampleReceivers);\n}\n\nexport function getAllStreams(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  const sampleStreams = [\n    new StreamInfo(1, sampleSenders[0], sampleReceivers[0], [\n      \"Additional Stream Details go here\"\n    ]),\n    new StreamInfo(2, sampleSenders[1], sampleReceivers[1], [\n      \"Additional Stream Details go here\"\n    ]),\n    new StreamInfo(3, sampleSenders[1], sampleReceivers[0], [\n      \"Additional Stream Details go here\"\n    ])\n  ];\n\n  callback(sampleStreams);\n}\n\nexport function getAllLogs(callback) {\n  const dates = [\n    new Date(\"2020-10-31T15:53:23\"),\n    new Date(\"2020-11-13T12:36:30\"),\n    new Date(\"2020-11-13T08:24:30\")\n  ];\n\n  const sampleLogs = [\n    new LogInfo(1, dates[0], \"Info\", \"Log 1 info\"),\n    new LogInfo(2, dates[1], \"Info\", \"Log 2 info\"),\n    new LogInfo(3, dates[2], \"Info\", \"Log 3 info\")\n  ];\n\n  callback(sampleLogs);\n}\n","import axios from \"axios\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport * as SampleData from \"./SampleData\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\n\nfunction getStatus(lastCommunicationString) {\n  if (!lastCommunicationString) {\n    return \"Pending\";\n  }\n\n  const lastCommunicationDate = new Date(`${lastCommunicationString}Z`);\n  const diff = Date.now() - lastCommunicationDate.getTime();\n  const tenMinutes = 10 * 60 * 1000;\n  if (diff < tenMinutes) {\n    return \"Online\";\n  }\n  return \"Offline\";\n}\n\nexport function getSenders(callback) {\n  axios\n    .get(process.env.REACT_APP_ENCODER)\n    .then((senders) => {\n      callback(\n        senders.data.map((sender) => {\n          let channels = [];\n          if (sender.output) {\n            channels = sender.output.map((output) => {\n              return new OutputChannelInfo(\n                output.id,\n                output.channel.name,\n                output.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            sender.lastCommunication == null\n              ? \"Never\"\n              : sender.lastCommunication;\n          return new DeviceInfo(\n            sender.serialNumber,\n            lastCommunication,\n            sender.device.publicIpAddress,\n            sender.device.privateIpAddress,\n            sender.device.displayName,\n            getStatus(sender.lastCommunication),\n            channels,\n            \"encoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getSenders(callback);\n    });\n}\n\nexport function getReceivers(callback) {\n  axios\n    .get(process.env.REACT_APP_DECODER)\n    .then((receivers) => {\n      callback(\n        receivers.data.map((receiver) => {\n          let channels = [];\n          if (receiver.input) {\n            channels = receiver.input.map((input) => {\n              return new InputChannelInfo(\n                input.id,\n                input.channel.name,\n                input.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            receiver.lastCommunication == null\n              ? \"Never\"\n              : receiver.lastCommunication;\n          return new DeviceInfo(\n            receiver.serialNumber,\n            lastCommunication,\n            receiver.device.publicIpAddress,\n            receiver.device.privateIpAddress,\n            receiver.device.displayName,\n            getStatus(receiver.lastCommunication),\n            channels,\n            \"decoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getReceivers(callback);\n    });\n}\n\nexport function deleteDevice(deviceId) {\n  return axios\n    .delete(`${process.env.REACT_APP_DEVICE}/${deviceId}`)\n    .catch(() => {});\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PropTypes from \"prop-types\";\nimport { MenuItem } from \"@material-ui/core\";\nimport * as DeviceApi from \"../../api/DeviceApi\";\n\nfunction renderDeleteButton(openDeleteDialog) {\n  return (\n    <Button\n      id=\"deleteBtn\"\n      variant=\"outlined\"\n      color=\"secondary\"\n      onClick={openDeleteDialog}\n    >\n      Delete\n    </Button>\n  );\n}\n\nfunction renderDeleteMenuItem(openDeleteDialog) {\n  return (\n    <MenuItem onClick={openDeleteDialog}>\n      <span className=\"warningText\">Delete</span>\n    </MenuItem>\n  );\n}\n\nexport default function DeleteDeviceButton(props) {\n  const { button, deleteId } = props;\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n\n  const openDeleteDialog = () => {\n    return setOpen(true);\n  };\n  const cancelDelete = () => {\n    return setOpen(false);\n  };\n  const confirmDelete = () => {\n    DeviceApi.deleteDevice(deleteId).then(() => {\n      if (history.location.pathname.endsWith(\"Devices\")) {\n        history.go(0);\n      } else {\n        history.push(\"/Devices\");\n      }\n    });\n    return setOpen(false);\n  };\n\n  return (\n    <>\n      {button\n        ? renderDeleteButton(openDeleteDialog)\n        : renderDeleteMenuItem(openDeleteDialog)}\n      <Dialog\n        open={open}\n        onClose={cancelDelete}\n        aria-labelledby=\"delete-stream-dialog-title\"\n        aria-describedby=\"delete-stream-dialog-description\"\n        id=\"delete-stream-dialog\"\n      >\n        <DialogTitle id=\"delete-stream-dialog-title\">\n          Confirm Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"delete-stream-dialog-description\">\n            Are you sure you want to delete this device?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button id=\"cancelDeleteBtn\" onClick={cancelDelete} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            id=\"confirmDeleteBtn\"\n            onClick={confirmDelete}\n            color=\"secondary\"\n            autoFocus\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nDeleteDeviceButton.propTypes = {\n  button: PropTypes.bool.isRequired,\n  deleteId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { MoreVert } from \"@material-ui/icons/\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeleteDeviceButton from \"../general/Buttons/DeleteDeviceButton\";\n\nexport default class ActionMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorElement: null\n    };\n\n    this.setAnchorElement = this.setAnchorElement.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick(event) {\n    this.setAnchorElement(event.currentTarget);\n  }\n\n  handleClose() {\n    this.setAnchorElement(null);\n  }\n\n  setAnchorElement(element) {\n    this.setState({\n      anchorElement: element\n    });\n  }\n\n  render() {\n    const { anchorElement } = this.state;\n    const { device } = this.props;\n    return (\n      <>\n        <IconButton\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n          size=\"small\"\n        >\n          <MoreVert />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorElement}\n          keepMounted\n          open={Boolean(anchorElement)}\n          onClose={this.handleClose}\n          anchorOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n          transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        >\n          <MenuItem onClick={this.handleClose}>\n            <NavLink\n              to={{\n                pathname: `/Devices/Details/${device.name}`,\n                state: { device }\n              }}\n              className=\"hideLinkStyle\"\n            >\n              View Details\n            </NavLink>\n          </MenuItem>\n          <MenuItem onClick={this.handleClose}>\n            Start stream with this as receiver\n          </MenuItem>\n          <DeleteDeviceButton button={false} deleteId={device.serialNumber} />\n        </Menu>\n      </>\n    );\n  }\n}\n\nActionMenu.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  FilterList,\n  Search,\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable, { MTableToolbar } from \"material-table\";\n\nimport ChannelDetailsTable from \"./ChannelDetailsTable\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport ActionMenu from \"./ActionMenu\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nfunction getComponents() {\n  return {\n    /*  eslint-disable react/jsx-props-no-spreading */\n    Toolbar: function Components(props) {\n      return (\n        <div className=\"lightestGrey\">\n          <MTableToolbar {...props} />\n        </div>\n      );\n    }\n  };\n}\n\nfunction buildNavlink(deviceInfo) {\n  return (\n    <NavLink\n      to={{\n        pathname: `/Devices/Details/${deviceInfo.name}`,\n        state: { device: deviceInfo }\n      }}\n    >\n      {deviceInfo.name}\n    </NavLink>\n  );\n}\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"Name\",\n      field: \"name\",\n      render: (rowData) => buildNavlink(rowData)\n    },\n    {\n      title: \"Serial Number\",\n      field: \"serialNumber\"\n    },\n    {\n      title: \"Status\",\n      field: \"status\",\n      render: function Status(rowData) {\n        return <StatusIndicator status={rowData.status} />;\n      },\n      lookup: {\n        Online: \"Online\",\n        Pending: \"Pending\",\n        Error: \"Error\",\n        Offline: \"Offline\"\n      }\n    },\n    {\n      title: \"Private IP Address\",\n      field: \"privateIp\"\n    },\n    {\n      title: \"Public IP Address\",\n      field: \"publicIp\"\n    },\n    {\n      title: \"Actions\",\n      field: \"action\",\n      filtering: false,\n      sorting: false,\n      render: function Actions(rowData) {\n        return <ActionMenu device={rowData} />;\n      },\n      align: \"center\",\n      export: false\n    }\n  ];\n}\n\nfunction getDetailPanel() {\n  return [\n    {\n      icon: ExpandMore,\n      openIcon: ExpandLess,\n      tooltip: \"Show Device Details\",\n      render: function DetailPanel(rowData) {\n        return (\n          <div className=\"lightestGrey\" style={{ padding: \"1.5em\" }}>\n            <Typography variant=\"h6\">Channels</Typography>\n            <ChannelDetailsTable channels={rowData.channels} />\n          </div>\n        );\n      }\n    }\n  ];\n}\n\nfunction getOptions() {\n  return {\n    toolbar: true,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: true,\n    draggable: false\n  };\n}\n\nfunction getIcons() {\n  return {\n    Filter: FilterList,\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function DevicesTable(props) {\n  const { title, devices } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer style={{ maxHeight: 570 }}>\n          <MaterialTable\n            title={title}\n            components={getComponents()}\n            columns={getColumnInfo()}\n            data={devices}\n            detailPanel={getDetailPanel()}\n            options={getOptions()}\n            icons={getIcons()}\n          />\n        </TableContainer>\n      </Box>\n    </>\n  );\n}\n\nDevicesTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  devices: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport { Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default class VerticalTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event, newTab) {\n    const { setValue } = this.props;\n    setValue(newTab);\n  }\n\n  render() {\n    const {\n      value,\n      classes: { tabs }\n    } = this.props;\n\n    return (\n      <>\n        <Tabs\n          value={value}\n          onChange={this.handleChange}\n          aria-label=\"Vertical tabs\"\n          className={`${tabs} lightGrey blackFont flexContents`}\n          orientation=\"vertical\"\n          indicatorColor=\"primary\"\n          variant=\"scrollable\"\n        >\n          <Tab\n            label=\"Senders\"\n            id=\"vertical-tab-0\"\n            aria-controls=\"vertical-tabpanel-0\"\n          />\n          <Tab\n            label=\"Receivers\"\n            id=\"vertical-tab-1\"\n            aria-controls=\"vertical-tabpanel-1\"\n          />\n        </Tabs>\n      </>\n    );\n  }\n}\n\nVerticalTabs.propTypes = {\n  setValue: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TabPanel from \"./TabPanel\";\nimport DevicesTable from \"./DevicesTable\";\nimport VerticalTabs from \"../general/VerticalTabs\";\n\nexport default class ContentsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      value: 0\n    };\n    this.dataSource = props.dataSource;\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getSenders(this.handleSendersChange);\n    this.dataSource.getReceivers(this.handleReceiversChange);\n  }\n\n  handleValueChange(tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  render() {\n    const { receivers, senders, value } = this.state;\n    const { classes } = this.props;\n    return (\n      <>\n        <Box\n          style={{\n            display: \"flex\",\n            flexGrow: 1\n          }}\n        >\n          <VerticalTabs\n            value={value}\n            setValue={this.handleValueChange}\n            classes={classes}\n          />\n          <TabPanel value={value} index={0} className=\"lightGreyBorder\">\n            <DevicesTable devices={senders} title=\"List of Senders\" />\n          </TabPanel>\n          <TabPanel value={value} index={1} className=\"lightGreyBorder\">\n            <DevicesTable devices={receivers} title=\"List of Receivers\" />\n          </TabPanel>\n        </Box>\n      </>\n    );\n  }\n}\nContentsTable.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default function defaultMakeStylesTheme() {\n  return makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    },\n    tabs: {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }));\n}\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport TitleBox from \"./TitleBox\";\nimport ContentsTable from \"./ContentsTable\";\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport * as useStyles from \"../DefaultMakeStylesTheme\";\n\nexport default function DeviceListPage(props) {\n  const { dataSource } = props;\n  return (\n    <Container>\n      <DynamicBreadcrumb\n        breadcrumbs={[\n          [\"Home\", \"/\"],\n          [\"My Devices\", \"Devices\"]\n        ]}\n      />\n      <Box className=\"areaUnderBreadcrumbs\">\n        <TitleBox />\n        <ContentsTable classes={useStyles} dataSource={dataSource} />\n      </Box>\n    </Container>\n  );\n}\n\nDeviceListPage.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { InputAdornment, makeStyles, TextField } from \"@material-ui/core\";\n\nimport { Search } from \"@material-ui/icons/\";\n\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      search: {\n        position: \"relative\",\n        right: 0,\n        marginLeft: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n          marginLeft: theme.spacing(1),\n          width: \"auto\"\n        }\n      },\n      searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        alignItems: \"left\",\n        justifyContent: \"center\"\n      },\n      inputRoot: {\n        color: \"inherit\"\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"searchField\">\n          <TextField\n            placeholder=\"Search\"\n            InputProps={{\n              \"aria-label\": \"search\",\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {\" \"}\n                  <Search />\n                </InputAdornment>\n              )\n            }}\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n  MenuItem,\n  Select\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class SelectDeviceTableRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState((state) => ({ open: !state.open }));\n  }\n\n  render() {\n    const {\n      deviceDetails: { channels, name },\n      onChange\n    } = this.props;\n    const { open } = this.state;\n    return (\n      <>\n        <ListItem button dense onClick={this.onClick}>\n          <ListItemText primary={name} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding style={{ width: \"96%\" }}>\n            <ListItem divider>\n              <ListItemText secondary=\"Select Channel\" />\n              <Select defaultValue=\"\" onChange={onChange}>\n                {channels.map((channel) => {\n                  return (\n                    <MenuItem value={channel.id} key={`${name}_${channel.id}`}>\n                      {channel.port}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </ListItem>\n          </List>\n        </Collapse>\n      </>\n    );\n  }\n}\nSelectDeviceTableRow.propTypes = {\n  deviceDetails: PropTypes.instanceOf(DeviceInfo).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { List } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport SearchBar from \"./SearchBar\";\nimport SelectDeviceTableRow from \"./SelectDeviceTableRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function SelectDevicesTable(props) {\n  const { dataSource, name, onChange } = props;\n  return (\n    <>\n      <div className=\"subtitle\">{name}</div>\n      <SearchBar />\n      <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n        <List>\n          {dataSource.map((device) => {\n            return (\n              <SelectDeviceTableRow\n                deviceDetails={device}\n                key={device.serialNumber}\n                onChange={onChange}\n              />\n            );\n          })}\n        </List>\n      </div>\n    </>\n  );\n}\n\nSelectDevicesTable.propTypes = {\n  name: PropTypes.string.isRequired,\n  dataSource: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\nimport PropTypes from \"prop-types\";\nimport SelectDevicesTable from \"./SelectDevicesTable\";\nimport StreamButton from \"../general/Buttons/StreamButton\";\n\nexport default class StreamingTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      selectedSenderID: \"\",\n      selectedReceiverID: \"\"\n    };\n\n    this.dataSource = props.dataSource;\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n\n    this.onSenderSelected = this.onSenderSelected.bind(this);\n    this.onReceiverSelected = this.onReceiverSelected.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getSenders(this.handleSendersChange);\n    this.dataSource.getReceivers(this.handleReceiversChange);\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  handleSubmit(event) {\n    const { selectedReceiverID, selectedSenderID } = this.state;\n    if (selectedReceiverID !== \"\" && selectedSenderID !== \"\") {\n      axios.post(process.env.REACT_APP_STREAM, {\n        inputChannelId: selectedReceiverID,\n        outputChannelId: selectedSenderID\n      });\n    }\n    event.preventDefault();\n  }\n\n  onSenderSelected(selectedSender) {\n    this.setState({\n      selectedSenderID: selectedSender.target.value\n    });\n  }\n\n  onReceiverSelected(selectedReceiver) {\n    this.setState({\n      selectedReceiverID: selectedReceiver.target.value\n    });\n  }\n\n  render() {\n    const { receivers, senders } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} id=\"createStreamForm\">\n          <Grid\n            container\n            spacing={2}\n            alignContent=\"center\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"SenderTable\">\n                <SelectDevicesTable\n                  name=\"Sender Devices\"\n                  dataSource={senders}\n                  onChange={this.onSenderSelected}\n                />\n              </div>\n            </Grid>\n            <Grid\n              container\n              item\n              xs={2}\n              id=\"TableStartStreamingBtn\"\n              justify=\"center\"\n              alignContent=\"center\"\n              alignItems=\"center\"\n              display=\"flex\"\n            >\n              <StreamButton id=\"StreamingStreamBtn\" type=\"submit\" />\n            </Grid>\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"ReceiverTable\">\n                <SelectDevicesTable\n                  name=\"Receiver Devices\"\n                  dataSource={receivers}\n                  onChange={this.onReceiverSelected}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </form>\n      </>\n    );\n  }\n}\nStreamingTable.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import DeviceInfo from \"./DeviceInfo\";\n\nexport function convertToDataObject(databaseDevice) {\n  return new DeviceInfo(\n    databaseDevice.serialNumber,\n    databaseDevice.lastCommunication,\n    databaseDevice.device.publicIpAddress,\n    databaseDevice.device.privateIpAddress,\n    databaseDevice.device.displayName,\n    databaseDevice.device.status,\n    databaseDevice.inputs || databaseDevice.outputs,\n    databaseDevice.inputs ? \"receiver\" : \"sender\"\n  );\n}\n\nexport function convertToServiceObject(deviceInfo) {\n  const serviceObject = {\n    serialNumber: deviceInfo.serialNumber,\n    lastCommunication: deviceInfo.lastCommunication,\n    device: {\n      serialNumber: deviceInfo.serialNumber,\n      publicIpAddress: deviceInfo.publicIp,\n      privateIpAddress: deviceInfo.privateIp,\n      displayName: deviceInfo.name,\n      status: deviceInfo.status\n    }\n  };\n  if (deviceInfo.deviceType === \"sender\") {\n    serviceObject.outputs = deviceInfo.channels;\n  } else {\n    serviceObject.inputs = deviceInfo.channels;\n  }\n  return serviceObject;\n}\n","import axios from \"axios\";\nimport { convertToDataObject } from \"../model/ConvertDataFormat\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport * as SampleData from \"./SampleData\";\n\nexport function getStream(streamId) {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(`${process.env.REACT_APP_STREAM}/${streamId}`)\n      .then((response) => {\n        const stream = response.data;\n        resolve(\n          new StreamInfo(\n            stream.id,\n            convertToDataObject(stream.outputChannel.encoder),\n            convertToDataObject(stream.inputChannel.decoder),\n            [\"Additional stream info goes here.\"]\n          )\n        );\n      })\n      .catch(reject);\n  });\n}\n\nexport function getAllStreams(callback) {\n  axios\n    .get(process.env.REACT_APP_STREAM)\n    .then((streams) => {\n      Promise.all(\n        streams.data.map((streamId) => {\n          return getStream(streamId);\n        })\n      ).then(callback);\n    })\n    .catch(() => {\n      SampleData.getAllStreams(callback);\n    });\n}\n\nexport function deleteStream(streamId, callback) {\n  axios\n    .delete(`${process.env.REACT_APP_STREAM}/${streamId}`)\n    .then(callback)\n    .catch(() => {});\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PropTypes from \"prop-types\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport * as StreamApi from \"../api/StreamApi\";\n\nexport default function DeleteStream(props) {\n  const { deleteId } = props;\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n\n  const openDeleteDialog = () => {\n    return setOpen(true);\n  };\n  const cancelDelete = () => {\n    return setOpen(false);\n  };\n  const confirmDelete = () => {\n    StreamApi.deleteStream(deleteId, () => {\n      history.push(\"/Streaming\");\n      history.go(0);\n    });\n    return setOpen(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"Delete Stream\" aria-label=\"delete stream\">\n        <IconButton onClick={openDeleteDialog}>\n          <Delete />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        open={open}\n        onClose={cancelDelete}\n        aria-labelledby=\"delete-stream-dialog-title\"\n        aria-describedby=\"delete-stream-dialog-description\"\n        id=\"delete-stream-dialog\"\n      >\n        <DialogTitle id=\"delete-stream-dialog-title\">\n          Confirm Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"delete-stream-dialog-description\">\n            {`Are you sure you want to end stream ${deleteId}?`}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancelDelete} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={confirmDelete} color=\"secondary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nDeleteStream.propTypes = {\n  deleteId: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\n\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport DeleteStream from \"./DeleteStream\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"ID\",\n      field: \"id\"\n    },\n    {\n      title: \"Date\",\n      field: \"date\"\n    },\n    {\n      title: \"Sender\",\n      field: \"sender.name\"\n    },\n    {\n      title: \"Receiver\",\n      field: \"receiver.name\"\n    },\n    {\n      title: \"Status\",\n      field: \"status\",\n      render: function Status(rowData) {\n        return <StatusIndicator status={rowData.status} />;\n      }\n    },\n    {\n      title: \"Type\",\n      field: \"type\"\n    },\n    {\n      title: \"Time Elapsed\",\n      field: \"time\"\n    },\n    {\n      title: \"Actions\",\n      field: \"action\",\n      filtering: false,\n      sorting: false,\n      render: function Actions(rowData) {\n        return <DeleteStream deleteId={rowData.id} />;\n      },\n      align: \"center\",\n      export: false\n    }\n  ];\n}\n\nfunction getDetailPanel() {\n  return [\n    {\n      icon: ExpandMore,\n      openIcon: ExpandLess,\n      tooltip: \"Show Stream Details\",\n      render: function DetailPanel(rowData) {\n        return (\n          <div className=\"lightestGrey\">\n            <Typography variant=\"h6\">{rowData.extras}</Typography>\n          </div>\n        );\n      }\n    }\n  ];\n}\n\nfunction getOptions() {\n  return {\n    toolbar: false,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: false,\n    draggable: false\n  };\n}\n\nfunction getIcons() {\n  return {\n    SortArrow: ArrowDownward,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function StreamsTable(props) {\n  const { streams } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer>\n          <MaterialTable\n            columns={getColumnInfo()}\n            data={streams}\n            detailPanel={getDetailPanel()}\n            options={getOptions()}\n            icons={getIcons()}\n          />\n        </TableContainer>\n        <div className=\"textAlignRightPadded\">\n          {\"Time Zone: \".concat(\n            Intl.DateTimeFormat().resolvedOptions().timeZone\n          )}\n        </div>\n      </Box>\n    </>\n  );\n}\n\nStreamsTable.propTypes = {\n  streams: PropTypes.arrayOf(PropTypes.instanceOf(StreamInfo)).isRequired\n};\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport StreamsTable from \"./StreamsTable\";\n\nexport default class StreamList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: []\n    };\n    this.dataSource = props.dataSource;\n    this.handleStreamsChange = this.handleStreamsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getAllStreams(this.handleStreamsChange);\n  }\n\n  handleStreamsChange(streams) {\n    this.setState({\n      streams\n    });\n  }\n\n  render() {\n    const { streams } = this.state;\n    return (\n      <>\n        <Container>\n          <Box className=\"headerAreaUnderline\">\n            <div className=\"title\">Current Streams</div>\n          </Box>\n          <StreamsTable streams={streams} />\n        </Container>\n      </>\n    );\n  }\n}\nStreamList.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport StreamingTable from \"./StreamingTable\";\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport StreamList from \"../streamlist/StreamList\";\n\nexport default class StreamingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dataSource = props.deviceDataSource;\n  }\n\n  render() {\n    const { deviceDataSource, streamDataSource } = this.props;\n    return (\n      <Container>\n        <DynamicBreadcrumb\n          breadcrumbs={[\n            [\"Home\", \"/\"],\n            [\"My Devices\", \"Devices\"],\n            [\"Streaming\", \"Streaming\"]\n          ]}\n        />\n        <Box className=\"areaUnderBreadcrumbs\">\n          <Box className=\"flexContents headerAreaUnderline\">\n            <div className=\"title\">Streaming</div>\n          </Box>\n          <div id=\"StreamingTable\">\n            <StreamingTable dataSource={deviceDataSource} />\n          </div>\n        </Box>\n        <Box>\n          <StreamList dataSource={streamDataSource} />\n        </Box>\n      </Container>\n    );\n  }\n}\nStreamingPage.propTypes = {\n  deviceDataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  streamDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nexport default function HorizontalTabPanel(props) {\n  const { value, index, children } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </div>\n  );\n}\n\nHorizontalTabPanel.propTypes = {\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Search,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\nimport LogInfo from \"../model/LogInfo\";\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"ID\",\n      field: \"id\",\n      cellStyle: { width: \"10%\" }\n    },\n    {\n      title: \"Date\",\n      field: \"dateTime\",\n      cellStyle: { width: \"15%\" }\n    },\n    {\n      title: \"Level\",\n      field: \"level\",\n      cellStyle: { width: \"10%\" }\n    },\n    {\n      title: \"Message\",\n      field: \"message\",\n      sorting: false\n    }\n  ];\n}\n\nfunction getOptions(bodyHeight) {\n  return {\n    toolbar: true,\n    showTitle: false,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: false,\n    draggable: false,\n    maxBodyHeight: bodyHeight,\n    minBodyHeight: bodyHeight\n  };\n}\n\nfunction getIcons() {\n  return {\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function LogsTable(props) {\n  const { logs, bodyHeight, title } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer>\n          <MaterialTable\n            title={title}\n            columns={getColumnInfo()}\n            data={logs}\n            options={getOptions(bodyHeight)}\n            icons={getIcons()}\n          />\n        </TableContainer>\n        <div className=\"textAlignRightPadded\">\n          {\"Time Zone: \".concat(\n            Intl.DateTimeFormat().resolvedOptions().timeZone\n          )}\n        </div>\n      </Box>\n    </>\n  );\n}\n\nLogsTable.propTypes = {\n  logs: PropTypes.arrayOf(PropTypes.instanceOf(LogInfo)).isRequired,\n  bodyHeight: PropTypes.string,\n  title: PropTypes.string\n};\n\nLogsTable.defaultProps = {\n  bodyHeight: \"auto\",\n  title: \"Logs\"\n};\n","import axios from \"axios\";\nimport LogInfo from \"../model/LogInfo\";\nimport * as SampleData from \"./SampleData\";\n\nasync function getLogs(endpoint) {\n  return axios\n    .get(endpoint)\n    .then((response) => {\n      return Promise.resolve(\n        response.data.map((log) => {\n          return new LogInfo(log.id, log.dateTime, log.level, log.message);\n        })\n      );\n    })\n    .catch(() => {\n      return new Promise((resolve) => {\n        SampleData.getAllLogs(resolve);\n      });\n    });\n}\n\nexport async function getAllLogs() {\n  return getLogs(process.env.REACT_APP_LOGS);\n}\n\nexport async function getDeviceLogs(deviceSerialNumber) {\n  return getLogs(`${process.env.REACT_APP_LOGS}/${deviceSerialNumber}`);\n}\n","import { Container, Paper } from \"@material-ui/core\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport LogsTable from \"../../loglist/LogsTable\";\nimport * as LogApi from \"../../api/LogApi\";\n\nexport default class DeviceDetailsActivityPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.device = props.device;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    LogApi.getDeviceLogs(this.device.serialNumber).then(this.handleLogsChange);\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return (\n      <>\n        <Container component={Paper}>\n          <LogsTable\n            title={`${this.device.serialNumber} Logs`}\n            logs={logs}\n            bodyHeight=\"35vh\"\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nDeviceDetailsActivityPanel.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Paper } from \"@material-ui/core\";\n\nexport default function DeviceDetailsNotesPanel(props) {\n  const { extras } = props;\n  return <Container component={Paper}>{extras}</Container>;\n}\n\nDeviceDetailsNotesPanel.propTypes = {\n  extras: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\nimport { TableContainer, TableCell, TableRow } from \"@material-ui/core\";\nimport ChannelDetailsTable from \"../devicelist/ChannelDetailsTable\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport StatusIndicator from \"../general/StatusIndicator\";\n\nexport default class DeviceDetailsConciseRow extends React.Component {\n  static getPropertyDisplayName(name) {\n    switch (name) {\n      case \"serialNumber\":\n        return \"Serial Number\";\n      case \"lastCommunication\":\n        return \"Last Communication\";\n      case \"privateIp\":\n        return \"Private IP Address\";\n      case \"publicIp\":\n        return \"Public IP Address\";\n      case \"name\":\n        return \"Name\";\n      case \"status\":\n        return \"Status\";\n      case \"channels\":\n        return \"Channels\";\n      default:\n        return \"Additional Info\";\n    }\n  }\n\n  static createInnerTable(value) {\n    return (\n      <TableContainer>\n        <ChannelDetailsTable channels={value} />\n      </TableContainer>\n    );\n  }\n\n  static createTableCellContents(name, value) {\n    switch (name) {\n      case \"channels\":\n        return DeviceDetailsConciseRow.createInnerTable(value);\n      case \"status\":\n        return <StatusIndicator status={value} />;\n      default:\n        return value;\n    }\n  }\n\n  render() {\n    const { name, value } = this.props;\n    return (\n      <>\n        <TableRow>\n          <TableCell>\n            {DeviceDetailsConciseRow.getPropertyDisplayName(name)}\n          </TableCell>\n          <TableCell align=\"center\">\n            {DeviceDetailsConciseRow.createTableCellContents(name, value)}\n          </TableCell>\n        </TableRow>\n      </>\n    );\n  }\n}\n\nDeviceDetailsConciseRow.propTypes = {\n  name: Proptypes.string.isRequired,\n  value: Proptypes.arrayOf(\n    Proptypes.oneOfType([InputChannelInfo, OutputChannelInfo])\n  ).isRequired\n};\n","import React from \"react\";\nimport { TableContainer, Table, TableBody, Paper } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceDetailsConciseRow from \"./DeviceDetailsConciseRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function DeviceDetailsConciseTable(props) {\n  const { device } = props;\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableBody>\n            {DeviceInfo.getConciseProperties().map((property) => (\n              <DeviceDetailsConciseRow\n                name={property}\n                value={device[property]}\n                key={`device_${property}`}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nDeviceDetailsConciseTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { Container, Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport HorizontalTabPanel from \"../general/HorizontalTabPanel\";\nimport DeviceDetailsActivityPanel from \"./TabPanels/DeviceDetailsActivityPanel\";\nimport DeviceDetailsNotesPanel from \"./TabPanels/DeviceDetailsNotesPanel\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeviceDetailsConciseTable from \"./DeviceDetailsConciseTable\";\n\nexport default class DeviceDetailsTabTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleValueChange(event, tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  static getPanelContents(tabInfo, device) {\n    switch (tabInfo) {\n      case \"Overview\":\n        return <DeviceDetailsConciseTable device={device} />;\n      case \"Activity Log\":\n        return <DeviceDetailsActivityPanel device={device} />;\n      case \"Notes\":\n        return <DeviceDetailsNotesPanel extras={device.extras} />;\n\n      default:\n        return <div>Whoops not a valid value</div>;\n    }\n  }\n\n  render() {\n    const { value } = this.state;\n    const { device, tabs } = this.props;\n    return (\n      <Container>\n        <Tabs\n          value={value}\n          onChange={this.handleValueChange}\n          className=\"lightGrey blackFont flexContents\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {tabs.map((tabInfo) => {\n            let tab;\n            if (tabInfo === \"Overview\") {\n              tab = (\n                <Tab\n                  label={tabInfo}\n                  key={tabInfo}\n                  style={{ pointerEvents: \"none\" }}\n                />\n              );\n            } else {\n              tab = <Tab label={tabInfo} key={tabInfo} />;\n            }\n            return tab;\n          })}\n        </Tabs>\n        {tabs.map((tabInfo, index) => {\n          return (\n            <HorizontalTabPanel\n              value={value}\n              key={tabInfo}\n              index={index}\n              device={device}\n            >\n              {DeviceDetailsTabTable.getPanelContents(tabInfo, device)}\n            </HorizontalTabPanel>\n          );\n        })}\n      </Container>\n    );\n  }\n}\nDeviceDetailsTabTable.propTypes = {\n  tabs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Button, Container, Grid } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport DeviceDetailsTabTable from \"./DeviceDetailsTabTable\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport { getSampleSender } from \"../api/SampleData\";\nimport DeleteDeviceButton from \"../general/Buttons/DeleteDeviceButton\";\n\nexport default function DeviceDetailsPage(props) {\n  const {\n    location: {\n      state: { device }\n    }\n  } = props;\n  const tabs = [\"Activity Log\", \"Notes\"];\n\n  return (\n    <Container>\n      <DynamicBreadcrumb\n        breadcrumbs={[\n          [\"Home\", \"/\"],\n          [\"My Devices\", \"/Devices\"],\n          [device.name, device.id]\n        ]}\n      />\n      <Box className=\"areaUnderBreadcrumbs\">\n        <Box className=\"flexContents headerAreaUnderline\">\n          <Box className=\"flexContents\">\n            <div className=\"title\">{device.name}</div>\n            <Box padding={4} paddingLeft={1} paddingBottom={0}>\n              <Button>\n                <EditIcon color=\"action\" />\n              </Button>\n            </Box>\n          </Box>\n          <div className=\"alignRightFloat\">\n            <Box marginRight={2} marginTop={2}>\n              <DeleteDeviceButton button deleteId={device.serialNumber} />\n            </Box>\n          </div>\n        </Box>\n      </Box>\n      <Grid container>\n        <Grid item xs={6}>\n          <DeviceDetailsTabTable tabs={[\"Overview\"]} device={device} />\n        </Grid>\n        <Grid item xs={6}>\n          <DeviceDetailsTabTable tabs={tabs} device={device} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\nDeviceDetailsPage.defaultProps = {\n  location: { state: { device: getSampleSender() } }\n};\n\nDeviceDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      device: PropTypes.instanceOf(DeviceInfo)\n    })\n  })\n};\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport LogsTable from \"./LogsTable\";\nimport * as LogApi from \"../api/LogApi\";\n\nexport default class LogListPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    LogApi.getAllLogs().then(this.handleLogsChange);\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return (\n      <>\n        <Container>\n          <DynamicBreadcrumb\n            breadcrumbs={[\n              [\"Home\", \"/\"],\n              [\"Logs\", \"/Logs\"]\n            ]}\n          />\n          <Box className=\"areaUnderBreadcrumbs\">\n            <Box className=\"headerAreaUnderline\">\n              <div className=\"title\">Logs</div>\n            </Box>\n            <LogsTable logs={logs} />\n          </Box>\n        </Container>\n      </>\n    );\n  }\n}\n","import axios from \"axios\";\n\nexport const unknownErrorMessage =\n  \"An unknown error occurred. Please try again later.\";\nexport const incorrectCredentialsMessage =\n  \"Incorrect username and/or password. Please enter the correct credentials and try again.\";\n\nexport async function logIn() {\n  // TODO: Correct backend URL from environment variables\n  return axios\n    .post(\"backendUrl/login\")\n    .then(() => {\n      // TODO: Happy path login\n    })\n    .catch((error) => {\n      let message = unknownErrorMessage;\n      if (error.response && error.response.status === \"403\") {\n        message = incorrectCredentialsMessage;\n      }\n      return Promise.reject(new Error(message));\n    });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    color: \"#ef5350\"\n  }\n}));\n\nexport default function LoginFailedDialog(props) {\n  const classes = useStyles();\n  const { open, setOpen, message } = props;\n\n  const closeDialog = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Dialog open={open} onClose={closeDialog}>\n        <DialogTitle id=\"login-failed-dialog-title\" className={classes.title}>\n          Login Failed\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"login-failed-dialog-description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nLoginFailedDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired\n};\n","import React, { useState } from \"react\";\nimport { Button, Container, makeStyles, TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function LoginConsole(props) {\n  const { handleSubmit } = props;\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit(username, password);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nLoginConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport HeaderBar from \"./general/HeaderBar\";\nimport HomePage from \"./general/HomePage\";\nimport DeviceListPage from \"./devicelist/DeviceListPage\";\nimport StreamingTablePage from \"./createStream/StreamingPage\";\nimport DeviceDetailsPage from \"./deviceDetailsPage/DeviceDetailsPage\";\nimport LogListPage from \"./loglist/LogListPage\";\nimport LoginPage from \"./login/LoginPage\";\n\nimport * as DeviceApi from \"./api/DeviceApi\";\nimport * as StreamApi from \"./api/StreamApi\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <HeaderBar />\n      <Switch>\n        <Route exact path={[\"/\", \"/Home\"]} component={HomePage} />\n        <Route\n          exact\n          path=\"/Devices\"\n          render={(props) => (\n            <DeviceListPage {...props} dataSource={DeviceApi} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/Streaming\"\n          render={(props) => (\n            <StreamingTablePage\n              {...props}\n              deviceDataSource={DeviceApi}\n              streamDataSource={StreamApi}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/Devices/Details/:deviceId\"\n          component={DeviceDetailsPage}\n        />\n        <Route exact path=\"/Logs\" component={LogListPage} />\n        <Route exact path=\"/Login\" component={LoginPage} />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport DynamicBreadcrumb from \"./DynamicBreadcrumb\";\n\nexport default function HomePage() {\n  return (\n    <Container>\n      <DynamicBreadcrumb\n        breadcrumbs={[\n          [\"Home\", \"\"],\n          [\"My Devices\", \"Devices\"],\n          [\"Streaming\", \"Streaming\"],\n          [\"Logs\", \"Logs\"],\n          [\"Login\", \"Login\"]\n        ]}\n      />\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport * as AuthenticationApi from \"../api/AuthenticationApi\";\nimport LoginFailedDialog from \"./LoginFailedDialog\";\nimport LoginConsole from \"./LoginConsole\";\n\nexport default function LoginPage() {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [dialogMessage, setDialogMessage] = useState(\"\");\n\n  const handleSubmit = (username, password) => {\n    AuthenticationApi.logIn({ username, password }).catch((error) => {\n      setDialogMessage(error.message);\n      setDialogOpen(true);\n    });\n  };\n\n  return (\n    <Container>\n      <Box className=\"flexContents headerAreaUnderline\">\n        <div className=\"title\">Login</div>\n      </Box>\n      <LoginConsole handleSubmit={handleSubmit} />\n      <LoginFailedDialog\n        open={dialogOpen}\n        setOpen={setDialogOpen}\n        message={dialogMessage}\n      />\n    </Container>\n  );\n}\n"],"sourceRoot":""}