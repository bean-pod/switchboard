{"version":3,"sources":["api/AuthenticationUtil.js","api/AuthenticationApi.js","app/ProtectedRoute.jsx","general/DynamicBreadcrumb.jsx","general/Buttons/StreamButton.jsx","general/TitleButtons.jsx","general/Title.jsx","general/HeaderBar.jsx","general/Page.jsx","login/LoginFailedDialog.jsx","login/LoginConsole.jsx","login/LoginPageContents.jsx","login/LoginPage.jsx","general/dashboard/GridColumn.jsx","general/dashboard/DashboardCard.jsx","general/dashboard/DashboardButton.jsx","general/StatusIndicator.jsx","general/dialog/DialogBody.jsx","general/dialog/DialogButtons.jsx","general/dialog/Dialog.jsx","model/DeviceInfo.js","model/ConvertDataFormat.js","model/StreamInfo.js","model/OutputChannelInfo.js","model/InputChannelInfo.js","model/LogInfo.js","api/SampleData.js","api/StreamApi.js","streamlist/DeleteStreamDialog.jsx","streamlist/DeleteStreamDialogOpener.jsx","streamlist/StreamsTable.jsx","streamlist/StreamsTableWrapper.jsx","homepage/ActiveStreamCard.jsx","homepage/ActivityLogCard.jsx","homepage/DevicesCard.jsx","homepage/AdminPanelCard.jsx","homepage/HomePageContents.jsx","homepage/HomePage.jsx","devicelist/TabPanel.jsx","devicelist/ChannelDetailsTableHead.jsx","devicelist/ChannelDetailsTableRow.jsx","devicelist/ChannelDetailsTable.jsx","api/DeviceApi.js","general/Buttons/DeleteDeviceButton.jsx","devicelist/ActionMenu.jsx","devicelist/DevicesTable.jsx","general/VerticalTabs.jsx","devicelist/DeviceListTabTable.jsx","DefaultMakeStylesTheme.js","devicelist/DeviceListPage.jsx","general/HorizontalTabPanel.jsx","loglist/LogsTable.jsx","api/LogApi.js","deviceDetailsPage/TabPanels/DeviceDetailsActivityPanel.jsx","deviceDetailsPage/TabPanels/DeviceDetailsNotesPanel.jsx","deviceDetailsPage/EditableName.jsx","deviceDetailsPage/StaticName.jsx","deviceDetailsPage/DeviceName.jsx","deviceDetailsPage/DeviceDetailsConciseRow.jsx","deviceDetailsPage/DeviceDetailsConciseTable.jsx","deviceDetailsPage/DeviceDetailsTabTable.jsx","deviceDetailsPage/DeviceDetailsPageContents.jsx","deviceDetailsPage/DeviceDetailsPage.jsx","streamlist/StreamListPage.jsx","createStream/SearchBar.jsx","createStream/SelectDeviceTableRow.jsx","createStream/SelectDevicesTable.jsx","createStream/StreamingTable.jsx","createStream/CreateStreamPage.jsx","loglist/LogsTableWrapper.jsx","loglist/LogListPage.jsx","general/PathNotFoundPage.jsx","app/AppRouter.jsx","index.jsx"],"names":["saveToken","token","localStorage","setItem","getAuthorizationHeader","getItem","headers","Authorization","unknownErrorMessage","incorrectCredentialsMessage","credentials","a","authorizationHeader","auth","username","password","axios","get","process","then","response","authorization","catch","error","message","status","Promise","reject","Error","isAuthenticated","Cookies","isAdmin","handleLogout","remove","expires","tokens","access_token","admin_token","refresh_token","expires_in","inOneHour","Date","getTime","set","ProtectedRoute","props","component","bind","location","this","authenticationRequired","render","authenticated","to","pathname","path","exact","React","Component","defaultProps","DynamicBreadcrumb","breadcrumbs","Box","padding","Breadcrumbs","aria-label","id","map","crumb","i","Link","color","href","Typography","StreamButton","type","StyledButton","withStyles","root","background","borderRadius","border","height","margin","label","textTransform","Button","className","SwapHoriz","TitleButtons","activeClassName","Title","title","deviceList","HeaderBar","classes","makeStyles","theme","menuButton","marginRight","spacing","history","push","go","AppBar","position","Toolbar","IconButton","edge","Home","disabled","onClick","AccountCircle","withRouter","Page","children","Container","useStyles","LoginFailedDialog","open","setOpen","closeDialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","paper","marginTop","display","flexDirection","alignItems","form","width","submit","LoginConsole","handleSubmit","useState","setUsername","setPassword","maxWidth","noValidate","onSubmit","event","preventDefault","TextField","variant","required","fullWidth","name","autoComplete","autoFocus","onChange","target","value","LoginPageContents","state","dialogOpen","dialogMessage","setDialogOpen","setDialogMessage","handleLogin","logIn","setState","LoginPage","useHistory","GridColumn","Grid","item","xs","container","DashboardCard","Paper","elevation","gutterBottom","DashboardButton","minWidth","StatusIndicator","getStatusStyle","DialogBody","DialogButtons","button1","button2","Dialog","openDialog","cancelButton","actionButton","aria-labelledby","aria-describedby","DeviceInfo","serial","lastCommunication","publicIpAddress","privateIpAddress","displayName","channels","deviceType","extras","serialNumber","publicIp","privateIp","convertToDataObject","databaseDevice","device","inputs","outputs","StreamInfo","sender","receiver","outputChannel","inputChannel","date","toString","split","slice","join","time","OutputChannelInfo","port","encoder","InputChannelInfo","decoder","LogInfo","dateTime","level","sampleInputChannels","InChannelInfo","sampleOutputChannels","OutChannelInfo","getSampleSender","getAllLogs","callback","dates","getStream","streamId","stream","data","channel","getAllStreams","streams","all","deleteStream","delete","createStream","selectedReceiverID","selectedSenderID","post","inputChannelId","outputChannelId","DeleteStreamDialog","dialogElement","createRef","confirmDelete","current","deleteId","finally","afterDelete","ref","DeleteStreamDialogOpener","Tooltip","Delete","StreamsTable","columnInfo","field","rowData","filtering","sorting","align","export","options","toolbar","headerStyle","backgroundColor","fontWeight","draggable","icons","SortArrow","ArrowDownward","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","TableContainer","columns","getColumnInfo","getOptions","getIcons","concat","Intl","DateTimeFormat","resolvedOptions","timeZone","StreamsTableWrapper","dataSource","handleStreamsChange","sampleSenders","sampleReceivers","ActiveStreamCard","StreamApi","style","justify","direction","ActivityLogCard","DevicesCard","AdminPanelCard","HomePageContents","HomePage","TabPanel","index","role","hidden","p","ChannelDetailsTableHead","TableRow","TableCell","ChannelDetailsTableRow","ChannelDetailsTable","Table","TableHead","TableBody","getStatus","lastCommunicationString","lastCommunicationDate","now","getSenders","senders","output","SampleData","getReceivers","receivers","input","deleteDevice","deviceId","REACT_APP_DEVICE","updateDeviceName","updatedName","put","renderDeleteButton","openDeleteDialog","renderDeleteMenuItem","MenuItem","DeleteDeviceButton","button","cancelDelete","DeviceApi","endsWith","ActionMenu","anchorElement","setAnchorElement","handleClick","handleClose","currentTarget","element","aria-controls","aria-haspopup","size","MoreVert","Menu","anchorEl","keepMounted","Boolean","anchorOrigin","horizontal","vertical","transformOrigin","deviceInfo","lookup","Online","Pending","Offline","DevicesTable","devices","maxHeight","components","detailPanel","icon","ExpandMore","openIcon","ExpandLess","tooltip","search","exportButton","Filter","FilterList","Search","ResetSearch","Clear","Export","SaveAlt","VerticalTabs","handleChange","newTab","setValue","tabs","Tabs","orientation","indicatorColor","Tab","DeviceListTabTable","handleValueChange","handleSendersChange","handleReceiversChange","tabIndex","flexGrow","defaultMakeStylesTheme","palette","borderRight","divider","DeviceListPage","HorizontalTabPanel","bodyHeight","showTitle","maxBodyHeight","minBodyHeight","LogsTable","logs","cellStyle","getLogs","endpoint","resolve","log","getDeviceLogs","deviceSerialNumber","DeviceDetailsActivityPanel","handleLogsChange","LogApi","DeviceDetailsNotesPanel","EditableName","confirmEditing","deviceName","setName","cancelEditing","defaultValue","Cancel","Save","StaticName","startEditing","Edit","DeviceName","editing","startEdit","newName","oldName","forceUpdate","DeviceDetailsConciseRow","getPropertyDisplayName","createTableCellContents","createInnerTable","DeviceDetailsConciseTable","getConciseProperties","property","DeviceDetailsTabTable","textColor","tabInfo","pointerEvents","getPanelContents","DeviceDetailsPageContents","DeviceDetailsPage","StreamListPage","streamDataSource","SearchBar","right","marginLeft","breakpoints","up","searchIcon","justifyContent","inputRoot","placeholder","InputProps","startAdornment","InputAdornment","SelectDeviceTableRow","deviceDetails","ListItem","dense","ListItemText","primary","Collapse","in","timeout","unmountOnExit","List","disablePadding","secondary","Select","SelectDevicesTable","overflow","StreamingTable","onSenderSelected","onReceiverSelected","selectedSender","selectedReceiver","alignContent","CreateStreamPage","LogsTableWrapper","logsDataSource","LogListPage","PathNotFoundPage","AppRouter","ReactDOM","document","getElementById"],"mappings":"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N,IAAM3B,EACwB,MAA5BgB,EAAOhB,kBACH,QACAgB,EAAOhB,kBACb,OAAO,IAAIF,GACTkB,EAAOT,aACPP,EACAgB,EAAOJ,OAAOX,gBACde,EAAOJ,OAAOV,iBACdc,EAAOJ,OAAOT,YACdgI,GAAUnH,EAAOhB,mBACjBI,EACA,UACA,CAAC,6CAKR7K,OAAM,YhBtCJ,SAAoBiN,GAuGzBA,EAtGsB,CACpB,IAAI1C,GACF,eACA,KACA,gBACA,UACA,WACA,SACAsC,GACA,UACA9B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,QACAsC,GACA,UACA9B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,UACAsC,GACA,UACA9B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,UACAsC,GACA,UACA9B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,SACAsC,GACA,UACA9B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,QACAsC,GACA,UACA9B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,UACAsC,GACA,UACA9B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,UACAsC,GACA,UACA9B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,SACAsC,GACA,UACA9B,MgB5DAoI,CAAsBlG,MAIrB,SAASmG,GAAanG,GAC3BvN,IACGC,IAAIC,qDAA+Bd,KACnCe,MAAK,SAACwT,GACLpG,EACEoG,EAAU/F,KAAKzK,KAAI,SAAC6I,GAClB,IAAIb,EAAW,GACXa,EAAS4H,QACXzI,EAAWa,EAAS4H,MAAMzQ,KAAI,SAACyQ,GAC7B,OAAO,IAAIhH,GACTgH,EAAM1Q,GACN0Q,EAAM/F,QAAQxF,KACduL,EAAM/F,QAAQnB,KACd,UAIN,IAAM3B,EAC0B,MAA9BiB,EAASjB,kBACL,QACAiB,EAASjB,kBACf,OAAO,IAAIF,GACTmB,EAASV,aACTP,EACAiB,EAASL,OAAOX,gBAChBgB,EAASL,OAAOV,iBAChBe,EAASL,OAAOT,YAChBgI,GAAUlH,EAASjB,mBACnBI,EACA,UACA,CAAC,6CAKR7K,OAAM,YhByCJ,SAAsBiN,GA0M3BA,EAzMwB,CACtB,IAAI1C,GACF,eACA,KACA,gBACA,UACA,aACA,SACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,QACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,SACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,QACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,SACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,SACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,QACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,SACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,QACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACAoC,GACA,UACA5B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,SACAoC,GACA,UACA5B,MgB9OAoI,CAAwBlG,MAIvB,SAASsG,GAAaC,GAC3B,OAAO9T,IACJkO,OADI,UAEAhO,oeAAY6T,iBAFZ,YAEgCD,GACnC1U,KAEDkB,OAAM,eAGJ,SAAe0T,GAAtB,qC,8CAAO,WAAgCF,EAAUG,GAA1C,SAAAtU,EAAA,+EACEK,IACJkU,IAAIhU,oeAAY6T,iBAAkB,CACjCzI,aAAcwI,EACd5I,YAAa+I,IAEd3T,OAAM,gBANJ,4C,sBClGP,SAAS6T,GAAmBC,GAC1B,OACE,cAAC9P,EAAA,EAAD,CACEpB,GAAG,YACHgF,QAAQ,WACR3E,MAAM,YACNwC,QAASqO,EAJX,oBAWJ,SAASC,GAAqBD,GAC5B,OACE,cAACE,GAAA,EAAD,CAAUvO,QAASqO,EAAnB,SACE,sBAAM7P,UAAU,cAAhB,sBAKS,SAASgQ,GAAmB1S,GAAQ,IACzC2S,EAAqB3S,EAArB2S,OAAQ1F,EAAajN,EAAbiN,SADgC,EAExBrM,IAAMgF,UAAS,GAFS,oBAEzClB,EAFyC,KAEnCC,EAFmC,KAG1CnB,EAAUgE,cAEV+K,EAAmB,WACvB,OAAO5N,GAAQ,IAEXiO,EAAe,WACnB,OAAOjO,GAAQ,IAajB,OACE,qCACGgO,EACGL,GAAmBC,GACnBC,GAAqBD,GACzB,eAAC,KAAD,CACE7N,KAAMA,EACNG,QAAS+N,EACT9J,kBAAgB,6BAChBC,mBAAiB,mCACjB1H,GAAG,uBALL,UAOE,cAACyD,GAAA,EAAD,CAAazD,GAAG,6BAAhB,4BAGA,cAAC0D,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAmB3D,GAAG,mCAAtB,4DAIF,eAAC4D,GAAA,EAAD,WACE,cAACxC,EAAA,EAAD,CAAQpB,GAAG,kBAAkB6C,QAAS0O,EAAclR,MAAM,UAA1D,oBAGA,cAACe,EAAA,EAAD,CACEpB,GAAG,mBACH6C,QArCY,WAQpB,OAPA2O,GAAuB5F,GAAU3O,MAAK,WAChCkF,EAAQrD,SAASM,SAASqS,SAAS,WACrCtP,EAAQE,GAAG,GAEXF,EAAQC,KAAK,eAGVkB,GAAQ,IA8BPjD,MAAM,YACNgF,WAAS,EAJX,6B,ICtEWqM,G,kDACnB,WAAY/S,GAAQ,IAAD,8BACjB,cAAMA,IACD+G,MAAQ,CACXiM,cAAe,MAGjB,EAAKC,iBAAmB,EAAKA,iBAAiB/S,KAAtB,gBACxB,EAAKgT,YAAc,EAAKA,YAAYhT,KAAjB,gBACnB,EAAKiT,YAAc,EAAKA,YAAYjT,KAAjB,gBARF,E,wDAWPgG,GACV9F,KAAK6S,iBAAiB/M,EAAMkN,iB,oCAI5BhT,KAAK6S,iBAAiB,Q,uCAGPI,GACfjT,KAAKkH,SAAS,CACZ0L,cAAeK,M,+BAIT,IACAL,EAAkB5S,KAAK2G,MAAvBiM,cACAlJ,EAAW1J,KAAKJ,MAAhB8J,OACR,OACE,qCACE,cAAChG,EAAA,EAAD,CACEwP,gBAAc,cACdC,gBAAc,OACdrP,QAAS9D,KAAK8S,YACdM,KAAK,QAJP,SAME,cAACC,GAAA,EAAD,MAEF,eAACC,GAAA,EAAD,CACErS,GAAG,cACHsS,SAAUX,EACVY,aAAW,EACXlP,KAAMmP,QAAQb,GACdnO,QAASzE,KAAK+S,YACdW,aAAc,CAAEC,WAAY,QAASC,SAAU,OAC/CC,gBAAiB,CAAEF,WAAY,QAASC,SAAU,OAPpD,UASE,cAACvB,GAAA,EAAD,CAAUvO,QAAS9D,KAAK+S,YAAxB,SACE,cAAC,IAAD,CACE3S,GAAI,CACFC,SAAS,oBAAD,OAAsBqJ,EAAOtD,MACrCO,MAAO,CAAE+C,WAEXpH,UAAU,gBALZ,4BAUF,cAAC+P,GAAA,EAAD,CAAUvO,QAAS9D,KAAK+S,YAAxB,gDAGA,cAACT,GAAD,CAAoBC,QAAQ,EAAO1F,SAAUnD,EAAOL,yB,GA9DtB7I,IAAMC,WC2C9C,SAASoO,KACP,MAAO,CACL,CACElM,MAAO,OACP2K,MAAO,OACPpN,OAAQ,SAACqN,GAAD,OAlBQuG,EAkBkBvG,EAhBpC,cAAC,IAAD,CACEnN,GAAI,CACFC,SAAS,oBAAD,OAAsByT,EAAWzK,cACzC1C,MAAO,CAAE+C,OAAQoK,IAHrB,SAMGA,EAAW1N,OARlB,IAAsB0N,IAoBlB,CACEnR,MAAO,gBACP2K,MAAO,gBAET,CACE3K,MAAO,SACP2K,MAAO,SACPpN,OAAQ,SAAgBqN,GACtB,OAAO,cAAC,GAAD,CAAiB/O,OAAQ+O,EAAQ/O,UAE1CuV,OAAQ,CACNC,OAAQ,SACRC,QAAS,UACTtV,MAAO,QACPuV,QAAS,YAGb,CACEvR,MAAO,qBACP2K,MAAO,aAET,CACE3K,MAAO,oBACP2K,MAAO,YAET,CACE3K,MAAO,UACP2K,MAAO,SACPE,WAAW,EACXC,SAAS,EACTvN,OAAQ,SAAiBqN,GACvB,OAAO,cAAC,GAAD,CAAY7D,OAAQ6D,KAE7BG,MAAO,SACPC,QAAQ,IAmDC,SAASwG,GAAavU,GAAQ,IACnC+C,EAAmB/C,EAAnB+C,MAAOyR,EAAYxU,EAAZwU,QACf,OACE,mCACE,cAACvT,EAAA,EAAD,UACE,cAAC8N,GAAA,EAAD,CAAgBiB,MAAO,CAAEyE,UAAW,KAApC,SACE,cAAC,KAAD,CACE1R,MAAOA,EACP2R,WA7HH,CAEL7Q,QAAS,SAAoB7D,GAC3B,OACE,qBAAK0C,UAAU,eAAf,SACE,cAAC,iBAAD,gBAAmB1C,QAyHjBgP,QAASC,KACTlD,KAAMyI,EACNG,YAxDH,CACL,CACEC,KAAMC,KACNC,SAAUC,KACVC,QAAS,sBACT1U,OAAQ,SAAqBqN,GAC3B,OACE,sBAAKjL,UAAU,eAAesN,MAAO,CAAE9O,QAAS,SAAhD,UACE,cAACU,EAAA,EAAD,CAAYyE,QAAQ,KAApB,sBACA,cAAC4K,GAAD,CAAqB3H,SAAUqE,EAAQrE,iBAgDvC0E,QAvCH,CACLC,SAAS,EACTgH,QAAQ,EACRC,cAAc,EACdhH,YAAa,CACXC,gBAAiB,UACjBC,WAAY,QAEdR,WAAW,EACXS,WAAW,GA+BHC,MA1BH,CACL6G,OAAQC,KACRC,YACAC,YAAaC,KACbhH,UAAWC,KACXgH,OAAQC,KACRhH,eACAC,cACAC,SAAUC,KACVC,aAAcC,c,wBCxIG4G,G,kDACnB,WAAY1V,GAAQ,IAAD,8BACjB,cAAMA,IACD2V,aAAe,EAAKA,aAAazV,KAAlB,gBAFH,E,yDAKNgG,EAAO0P,IAElBC,EADqBzV,KAAKJ,MAAlB6V,UACCD,K,+BAGD,IAAD,EAIHxV,KAAKJ,MAFP6G,EAFK,EAELA,MACWiP,EAHN,EAGL5S,QAAW4S,KAGb,OACE,mCACE,eAACC,GAAA,EAAD,CACElP,MAAOA,EACPF,SAAUvG,KAAKuV,aACfvU,aAAW,gBACXsB,UAAS,UAAKoT,EAAL,qCACTE,YAAY,WACZC,eAAe,UACf5P,QAAQ,aAPV,UASE,cAAC6P,GAAA,EAAD,CACE3T,MAAM,UACNlB,GAAG,iBACHiS,gBAAc,wBAEhB,cAAC4C,GAAA,EAAD,CACE3T,MAAM,YACNlB,GAAG,iBACHiS,gBAAc,iC,GApCgB1S,IAAMC,WCI3BsV,G,kDACnB,WAAYnW,GAAQ,IAAD,8BACjB,cAAMA,IACD+G,MAAQ,CACX2K,QAAS,GACTI,UAAW,GACXjL,MAAO,GAET,EAAKuP,kBAAoB,EAAKA,kBAAkBlW,KAAvB,gBACzB,EAAKmW,oBAAsB,EAAKA,oBAAoBnW,KAAzB,gBAC3B,EAAKoW,sBAAwB,EAAKA,sBAAsBpW,KAA3B,gBATZ,E,gEAYE,IACXwP,EAAetP,KAAKJ,MAApB0P,WACRA,EAAW+B,WAAWrR,KAAKiW,qBAC3B3G,EAAWmC,aAAazR,KAAKkW,yB,wCAGbC,GAChBnW,KAAKkH,SAAS,CACZT,MAAO0P,M,0CAIS7E,GAClBtR,KAAKkH,SAAS,CACZoK,c,4CAIkBI,GACpB1R,KAAKkH,SAAS,CACZwK,gB,+BAIM,IAAD,EAC+B1R,KAAK2G,MAAnC+K,EADD,EACCA,UAAWJ,EADZ,EACYA,QAAS7K,EADrB,EACqBA,MACpB3D,EAAY9C,KAAKJ,MAAjBkD,QACR,OACE,mCACE,eAACjC,EAAA,EAAD,CACE+O,MAAO,CACL5K,QAAS,OACToR,SAAU,GAHd,UAME,cAAC,GAAD,CACE3P,MAAOA,EACPgP,SAAUzV,KAAKgW,kBACflT,QAASA,IAEX,cAACsN,GAAD,CAAU3J,MAAOA,EAAO4J,MAAO,EAAG/N,UAAU,kBAA5C,SACE,cAAC6R,GAAD,CAAcC,QAAS9C,EAAS3O,MAAM,sBAExC,cAACyN,GAAD,CAAU3J,MAAOA,EAAO4J,MAAO,EAAG/N,UAAU,kBAA5C,SACE,cAAC6R,GAAD,CAAcC,QAAS1C,EAAW/O,MAAM,iC,GAzDJnC,IAAMC,WCNvC,SAAS4V,KACtB,OAAOtT,aAAW,SAACC,GAAD,MAAY,CAC5BnB,KAAM,CACJkM,gBAAiB/K,EAAMsT,QAAQxU,WAAWgD,OAE5C4Q,KAAM,CACJa,YAAY,aAAD,OAAevT,EAAMsT,QAAQE,cCD/B,SAASC,KAKtB,OACE,cAACxS,GAAD,CAAMtB,MAAM,aAAa/B,YALR,CACjB,CAAC,OAAQ,SACT,CAAC,aAAc,aAGmCgC,YAAU,EAA5D,SACE,cAAC,GAAD,CAAoBE,QAASsB,EAAWkL,WAAYA,MCV3C,SAASoH,GAAmB9W,GAAQ,IACzC6G,EAA2B7G,EAA3B6G,MAAO4J,EAAoBzQ,EAApByQ,MAAOnM,EAAatE,EAAbsE,SACtB,OACE,qBACEoM,KAAK,WACLC,OAAQ9J,IAAU4J,EAClBpP,GAAE,8BAAyBoP,GAC3B3H,kBAAA,yBAAmC2H,GAJrC,SAMG5J,IAAU4J,GAAS,cAACxP,EAAA,EAAD,CAAK2P,EAAG,EAAR,SAAYtM,MC8BtC,SAAS4K,GAAW6H,GAClB,MAAO,CACL9I,SAAS,EACT+I,WAAW,EACX/B,QAAQ,EACRC,cAAc,EACdhH,YAAa,CACXC,gBAAiB,UACjBC,WAAY,QAEdR,WAAW,EACXS,WAAW,EACX4I,cAAeF,EACfG,cAAeH,GAiBJ,SAASI,GAAUnX,GAAQ,IAChCoX,EAA4BpX,EAA5BoX,KAAML,EAAsB/W,EAAtB+W,WAAYhU,EAAU/C,EAAV+C,MAC1B,OACE,mCACE,eAAC9B,EAAA,EAAD,WACE,cAAC8N,GAAA,EAAD,UACE,cAAC,KAAD,CACEhM,MAAOA,EACPiM,QA9DH,CACL,CACEjM,MAAO,KACP2K,MAAO,KACP2J,UAAW,CAAE7R,MAAO,QAEtB,CACEzC,MAAO,OACP2K,MAAO,WACP2J,UAAW,CAAE7R,MAAO,QAEtB,CACEzC,MAAO,QACP2K,MAAO,QACP2J,UAAW,CAAE7R,MAAO,QAEtB,CACEzC,MAAO,UACP2K,MAAO,UACPG,SAAS,IA4CH9B,KAAMqL,EACNpJ,QAASkB,GAAW6H,GACpBzI,MAvBH,CACL+G,YACAC,YAAaC,KACbhH,UAAWC,KACXgH,OAAQC,KACRhH,eACAC,cACAC,SAAUC,KACVC,aAAcC,UAkBV,qBAAKpM,UAAU,uBAAf,SACG,cAAc0M,OACbC,KAAKC,iBAAiBC,kBAAkBC,iB,SCrFrC8H,G,iFAAf,WAAuBC,GAAvB,SAAAzZ,EAAA,+EACSK,IACJC,IAAImZ,GACJjZ,MAAK,SAACC,GACL,OAAOM,QAAQ2Y,QACbjZ,EAASwN,KAAKzK,KAAI,SAACmW,GACjB,OAAO,IAAIxM,GAAQwM,EAAIpW,GAAIoW,EAAIvM,SAAUuM,EAAItM,MAAOsM,EAAI9Y,gBAI7DF,OAAM,WACL,OAAO,IAAII,SAAQ,SAAC2Y,GAClB5F,GAAsB4F,UAZ9B,4C,sBAiBO,SAAe/L,KAAtB,gC,8CAAO,sBAAA3N,EAAA,+EACEwZ,GAAQjZ,oDADV,4C,sBAIA,SAAeqZ,GAAtB,mC,8CAAO,WAA6BC,GAA7B,SAAA7Z,EAAA,+EACEwZ,GAAQ,GAAD,OAAIjZ,kDAAJ,YAAkCsZ,KAD3C,4C,sBD8EPR,GAAUrW,aAAe,CACvBiW,WAAY,OACZhU,MAAO,Q,IElGY6U,G,kDACnB,WAAY5X,GAAQ,IAAD,8BACjB,cAAMA,IACD+G,MAAQ,CACXqQ,KAAM,IAER,EAAKtN,OAAS9J,EAAM8J,OACpB,EAAK+N,iBAAmB,EAAKA,iBAAiB3X,KAAtB,gBANP,E,gEAUjB4X,GAAqB1X,KAAK0J,OAAOL,cAAcnL,KAAK8B,KAAKyX,oB,uCAG1CT,GACfhX,KAAKkH,SAAS,CACZ8P,W,+BAIM,IACAA,EAAShX,KAAK2G,MAAdqQ,KACR,OACE,mCACE,cAAC7S,EAAA,EAAD,CAAWtE,UAAW8H,KAAtB,SACE,cAACoP,GAAD,CACEpU,MAAK,UAAK3C,KAAK0J,OAAOL,aAAjB,SACL2N,KAAMA,EACNL,WAAW,iB,GA5BiCnW,IAAMC,WCH/C,SAASkX,GAAwB/X,GAAQ,IAC9CwJ,EAAWxJ,EAAXwJ,OACR,OAAO,cAACjF,EAAA,EAAD,CAAWtE,UAAW8H,KAAtB,SAA8ByB,I,wBCDxB,SAASwO,GAAahY,GAAQ,IACnCiY,EAAuDjY,EAAvDiY,eAAgBC,EAAuClY,EAAvCkY,WAAYC,EAA2BnY,EAA3BmY,QAASC,EAAkBpY,EAAlBoY,cAC7C,OACE,sBAAM1V,UAAU,qBAAqBuD,SAAUgS,EAA/C,SACE,eAAChX,EAAA,EAAD,CAAKyB,UAAU,eAAf,UACE,cAAC0D,GAAA,EAAD,CACE/E,GAAG,aACHmF,KAAK,aACLF,UAAQ,EACR+R,aAAcH,EACdvR,SAAU,SAACT,GAAD,OAAWiS,EAAQjS,EAAMU,OAAOC,UAE5C,sBAAKnE,UAAU,kBAAf,UACE,cAACoB,EAAA,EAAD,CAAYzC,GAAG,gBAAgBmS,KAAK,QAAQtP,QAASkU,EAArD,SACE,cAACE,GAAA,EAAD,MAGF,cAACxU,EAAA,EAAD,CAAYzC,GAAG,iBAAiBS,KAAK,SAASJ,MAAM,UAApD,SACE,cAAC6W,GAAA,EAAD,c,cClBG,SAASC,GAAWxY,GAAQ,IACjCkY,EAA6BlY,EAA7BkY,WAAYO,EAAiBzY,EAAjByY,aACpB,OACE,qCACGP,EACD,qBAAKxV,UAAU,kBAAf,SACE,cAACoB,EAAA,EAAD,CACEzC,GAAG,UACHmS,KAAK,QACL9R,MAAM,SACNwC,QAASuU,EAJX,SAME,cAACC,GAAA,EAAD,W,ICXWC,G,kDACnB,WAAY3Y,GAAQ,IAAD,8BACjB,cAAMA,IACDkY,WAAalY,EAAMkY,WACxB,EAAKjG,SAAWjS,EAAMiS,SACtB,EAAKlL,MAAQ,CACX6R,SAAS,EACTpS,KAAM,EAAK0R,YAGb,EAAKW,UAAY,EAAKA,UAAU3Y,KAAf,gBACjB,EAAKkY,cAAgB,EAAKA,cAAclY,KAAnB,gBACrB,EAAK+X,eAAiB,EAAKA,eAAe/X,KAApB,gBACtB,EAAKiY,QAAU,EAAKA,QAAQjY,KAAb,gBAZE,E,oDAeXkS,GACNhS,KAAKkH,SAAS,CAAEd,KAAM4L,M,kCAItBhS,KAAKkH,SAAS,CAAEsR,SAAS,M,sCAIzBxY,KAAKkH,SAAS,CAAEd,KAAMpG,KAAK8X,aAC3B9X,KAAKkH,SAAS,CAAEsR,SAAS,M,qCAGZ1S,GAAQ,IAAD,OAEpBA,EAAMC,iBAFc,IAGN2S,EAAY1Y,KAAK2G,MAAvBP,KACFuS,EAAU3Y,KAAK8X,WACrB9X,KAAK8X,WAAaY,EAClB1Y,KAAKkH,SAAS,CAAEsR,SAAS,IAEzB/F,GAA2BzS,KAAK6R,SAAU6G,GAASra,OAAM,WAEvD,EAAKyZ,WAAaa,EAClB,EAAKC,mB,+BAIC,IACAJ,EAAYxY,KAAK2G,MAAjB6R,QACR,OACE,mCACGA,EACC,cAACZ,GAAD,CACEC,eAAgB7X,KAAK6X,eACrBC,WAAY9X,KAAK8X,WACjBC,QAAS/X,KAAK+X,QACdC,cAAehY,KAAKgY,gBAGtB,cAACI,GAAD,CACEN,WAAY9X,KAAK8X,WACjBO,aAAcrY,KAAKyY,kB,GA1DSjY,IAAMC,WCKzBoY,G,uKA2CT,IAAD,EACyB7Y,KAAKJ,MAA7BwG,EADD,EACCA,KAAMK,EADP,EACOA,MAAOiD,EADd,EACcA,OACrB,OACE,eAACgH,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACGkI,EAAwBC,uBAAuB1S,KAElD,cAACuK,GAAA,EAAD,CAAWjD,MAAM,SAAjB,SACGmL,EAAwBE,wBAAwB3S,EAAMK,EAAOiD,W,8CAlDxCtD,GAC5B,OAAQA,GACN,IAAK,eACH,MAAO,gBACT,IAAK,oBACH,MAAO,qBACT,IAAK,YACH,MAAO,qBACT,IAAK,WACH,MAAO,oBACT,IAAK,OACH,MAAO,OACT,IAAK,SACH,MAAO,SACT,IAAK,WACH,MAAO,WACT,QACE,MAAO,qB,uCAIWK,GACtB,OACE,cAACkI,GAAA,EAAD,UACE,cAACkC,GAAD,CAAqB3H,SAAUzC,Q,8CAKNL,EAAMK,EAAOiD,GAC1C,OAAQtD,GACN,IAAK,WACH,OAAOyS,EAAwBG,iBAAiBvS,GAClD,IAAK,SACH,OAAO,cAAC,GAAD,CAAiBjI,OAAQiI,IAClC,IAAK,OACH,OAAO,cAAC,GAAD,CAAYqR,WAAYrR,EAAOoL,SAAUnI,EAAOL,eACzD,QACE,OAAO5C,O,GAvCsCjG,IAAMC,WCJ5C,SAASwY,GAA0BrZ,GAAQ,IAChD8J,EAAW9J,EAAX8J,OACR,OACE,mCACE,cAACiF,GAAA,EAAD,CAAgB9O,UAAW8H,KAA3B,SACE,cAACmJ,GAAA,EAAD,UACE,cAACE,GAAA,EAAD,UACGpI,GAAWsQ,uBAAuBhY,KAAI,SAACiY,GAAD,OACrC,cAAC,GAAD,CACE/S,KAAM+S,EACN1S,MAAOiD,EAAOyP,GACdzP,OAAQA,GAHV,iBAIiByP,e,ICTVC,G,kDACnB,WAAYxZ,GAAQ,IAAD,8BACjB,cAAMA,IACD+G,MAAQ,CACXF,MAAO,GAET,EAAKuP,kBAAoB,EAAKA,kBAAkBlW,KAAvB,gBALR,E,8DAQDgG,EAAOqQ,GACvBnW,KAAKkH,SAAS,CACZT,MAAO0P,M,+BAkBD,IACA1P,EAAUzG,KAAK2G,MAAfF,MADD,EAEkBzG,KAAKJ,MAAtB8J,EAFD,EAECA,OAAQgM,EAFT,EAESA,KAChB,OACE,eAACvR,EAAA,EAAD,WACE,cAACwR,GAAA,EAAD,CACElP,MAAOA,EACPF,SAAUvG,KAAKgW,kBACf1T,UAAU,mCACVuT,eAAe,UACfwD,UAAU,UALZ,SAOG3D,EAAKxU,KAAI,SAACoY,GAaT,MAXgB,aAAZA,EAEA,cAACxD,GAAA,EAAD,CACE3T,MAAOmX,EAEP1J,MAAO,CAAE2J,cAAe,SADnBD,GAKH,cAACxD,GAAA,EAAD,CAAK3T,MAAOmX,GAAcA,QAKrC5D,EAAKxU,KAAI,SAACoY,EAASjJ,GAClB,OACE,cAACqG,GAAD,CACEjQ,MAAOA,EAEP4J,MAAOA,EACP3G,OAAQA,EAJV,SAMG0P,EAAsBI,iBAAiBF,EAAS5P,IAJ5C4P,Y,wCA9COA,EAAS5P,GAC/B,OAAQ4P,GACN,IAAK,WACH,OAAO,cAACL,GAAD,CAA2BvP,OAAQA,IAC5C,IAAK,eACH,OAAO,cAAC,GAAD,CAA4BA,OAAQA,IAC7C,IAAK,QACH,OAAO,cAACiO,GAAD,CAAyBvO,OAAQM,EAAON,SAEjD,QACE,OAAO,gE,GAzBoC5I,IAAMC,WCF1C,SAASgZ,GAA0B7Z,GAAQ,IAChD8J,EAAW9J,EAAX8J,OAGR,OACE,eAACpC,GAAA,EAAD,CAAMG,WAAS,EAAf,UACE,cAACH,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,GAAD,CAAuBkO,KAAM,CAAC,YAAahM,OAAQA,MAErD,cAACpC,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,GAAD,CAAuBkO,KARhB,CAAC,eAAgB,SAQWhM,OAAQA,SCVpC,SAASgQ,GAAkB9Z,GAAQ,IAGnC8J,EAET9J,EAHFG,SACE4G,MAAS+C,OAIP9I,EAAc,CAClB,CAAC,OAAQ,SACT,CAAC,aAAc,YACf,CAAC,iBAAD,2BAAuC8I,EAAOL,gBAGhD,OACE,cAACpF,GAAD,CAAMtB,MAAM,iBAAiB/B,YAAaA,EAA1C,SACE,cAAC6Y,GAAD,CAA2B/P,OAAQA,MClB1B,SAASiQ,KAKtB,OACE,cAAC1V,GAAD,CAAMtB,MAAM,iBAAiB/B,YALX,CAClB,CAAC,OAAQ,SACT,CAAC,iBAAkB,aAGnB,SACE,cAAC,GAAD,CAAqB0O,WAAYsK,MFWvCH,GAA0B/Y,aAAe,CACvCgJ,OAAQ0B,MCIVsO,GAAkBhZ,aAAe,CAC/BX,SAAU,CAAE4G,MAAO,CAAE+C,OAAQ0B,Q,kCExBVyO,G,kDACnB,WAAYja,GAAQ,IAAD,8BACjB,cAAMA,IACDkD,QAAUC,aAAW,SAACC,GAAD,MAAY,CACpC6R,OAAO,cACLrR,SAAU,WACVsW,MAAO,EACPC,WAAY,GACX/W,EAAMgX,YAAYC,GAAG,MAAQ,CAC5BF,WAAY/W,EAAMG,QAAQ,GAC1BiC,MAAO,SAGX8U,WAAY,CACVpZ,QAASkC,EAAMG,QAAQ,EAAG,GAC1BlB,OAAQ,OACRuB,SAAU,WACV+V,cAAe,OACfrU,WAAY,OACZiV,eAAgB,UAElBC,UAAW,CACT9Y,MAAO,eArBM,E,qDA2BjB,OACE,mCACE,qBAAKgB,UAAU,cAAf,SACE,cAAC0D,GAAA,EAAD,CACEqU,YAAY,SACZC,WAAY,CACV,aAAc,SACdC,eACE,eAACC,GAAA,EAAD,CAAgBhX,SAAS,QAAzB,UACG,IACD,cAACyR,GAAA,EAAD,QAIN7B,KAAK,QACLnN,QAAQ,qB,GA3CmBzF,IAAMC,W,wCCQxBga,G,kDACnB,WAAY7a,GAAQ,IAAD,8BACjB,cAAMA,IACD+G,MAAQ,CACXrC,MAAM,GAER,EAAKR,QAAU,EAAKA,QAAQhE,KAAb,gBALE,E,sDASjBE,KAAKkH,UAAS,SAACP,GAAD,MAAY,CAAErC,MAAOqC,EAAMrC,W,+BAGjC,IAAD,EAIHtE,KAAKJ,MAJF,IAEL8a,cAAiBxR,EAFZ,EAEYA,SAAU9C,EAFtB,EAEsBA,KAC3BG,EAHK,EAGLA,SAEMjC,EAAStE,KAAK2G,MAAdrC,KACR,OACE,qCACE,eAACqW,GAAA,EAAD,CAAUpI,QAAM,EAACqI,OAAK,EAAC9W,QAAS9D,KAAK8D,QAArC,UACE,cAAC+W,GAAA,EAAD,CAAcC,QAAS1U,IACtB9B,EAAO,cAACqQ,GAAA,EAAD,IAAiB,cAACF,GAAA,EAAD,OAE3B,cAACsG,GAAA,EAAD,CAAUC,GAAI1W,EAAM2W,QAAQ,OAAOC,eAAa,EAAhD,SACE,cAACC,GAAA,EAAD,CAAMtb,UAAU,MAAMub,gBAAc,EAACxL,MAAO,CAAExK,MAAO,OAArD,SACE,eAACuV,GAAA,EAAD,CAAUnE,SAAO,EAAjB,UACE,cAACqE,GAAA,EAAD,CAAcQ,UAAU,mBACxB,cAACC,GAAA,EAAD,CAAQrD,aAAa,GAAG1R,SAAUA,EAAlC,SACG2C,EAAShI,KAAI,SAAC0K,GACb,OACE,cAACyG,GAAA,EAAD,CAAU5L,MAAOmF,EAAQ3K,GAAzB,SACG2K,EAAQnB,MADX,UAAqCrE,EAArC,YAA6CwF,EAAQ3K,wB,GAhCvBT,IAAMC,WCLzC,SAAS8a,GAAmB3b,GAAQ,IACzC0P,EAA+B1P,EAA/B0P,WAAYlJ,EAAmBxG,EAAnBwG,KAAMG,EAAa3G,EAAb2G,SAC1B,OACE,qCACE,qBAAKjE,UAAU,WAAf,SAA2B8D,IAC3B,cAAC,GAAD,IACA,qBAAKwJ,MAAO,CAAEyE,UAAW,QAASmH,SAAU,QAA5C,SACE,cAACL,GAAA,EAAD,UACG7L,EAAWpO,KAAI,SAACwI,GACf,OACE,cAAC,GAAD,CACEgR,cAAehR,EAEfnD,SAAUA,GADLmD,EAAOL,wB,ICXPoS,G,kDACnB,WAAY7b,GAAQ,IAAD,8BACjB,cAAMA,IACD+G,MAAQ,CACX2K,QAAS,GACTI,UAAW,GACXtF,iBAAkB,GAClBD,mBAAoB,IAGtB,EAAK8J,oBAAsB,EAAKA,oBAAoBnW,KAAzB,gBAC3B,EAAKoW,sBAAwB,EAAKA,sBAAsBpW,KAA3B,gBAE7B,EAAK4b,iBAAmB,EAAKA,iBAAiB5b,KAAtB,gBACxB,EAAK6b,mBAAqB,EAAKA,mBAAmB7b,KAAxB,gBAE1B,EAAKyF,aAAe,EAAKA,aAAazF,KAAlB,gBAfH,E,gEAmBjB2S,GAAqBzS,KAAKiW,qBAC1BxD,GAAuBzS,KAAKkW,yB,0CAGV5E,GAClBtR,KAAKkH,SAAS,CACZoK,c,4CAIkBI,GACpB1R,KAAKkH,SAAS,CACZwK,gB,mCAIS5L,GACXA,EAAMC,iBADY,MAE+B/F,KAAK2G,MAA9CwF,EAFU,EAEVA,mBAAoBC,EAFV,EAEUA,iBACD,KAAvBD,GAAkD,KAArBC,GAC/BF,GAAaC,EAAoBC,K,uCAIpBwP,GACf5b,KAAKkH,SAAS,CACZkF,iBAAkBwP,EAAepV,OAAOC,U,yCAIzBoV,GACjB7b,KAAKkH,SAAS,CACZiF,mBAAoB0P,EAAiBrV,OAAOC,U,+BAItC,IAAD,EACwBzG,KAAK2G,MAA5B+K,EADD,EACCA,UAAWJ,EADZ,EACYA,QACnB,OACE,mCACE,sBAAMzL,SAAU7F,KAAKuF,aAActE,GAAG,mBAAtC,SACE,eAACqG,GAAA,EAAD,CACEG,WAAS,EACTtE,QAAS,EACT2Y,aAAa,SACb5W,WAAW,SACX2K,QAAQ,SALV,UAOE,cAACvI,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,qBAAKlF,UAAU,iBAAiBrB,GAAG,cAAnC,SACE,cAACsa,GAAD,CACEnV,KAAK,iBACLkJ,WAAYgC,EACZ/K,SAAUvG,KAAK0b,uBAIrB,cAACpU,GAAA,EAAD,CACEG,WAAS,EACTF,MAAI,EACJC,GAAI,EACJvG,GAAG,yBACH4O,QAAQ,SACRiM,aAAa,SACb5W,WAAW,SACXF,QAAQ,OARV,SAUE,cAACvD,EAAD,CAAcR,GAAG,qBAAqBS,KAAK,aAE7C,cAAC4F,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,qBAAKlF,UAAU,iBAAiBrB,GAAG,gBAAnC,SACE,cAACsa,GAAD,CACEnV,KAAK,mBACLkJ,WAAYoC,EACZnL,SAAUvG,KAAK2b,oC,GA9FWnb,IAAMC,WCLnC,SAASsb,KAMtB,OACE,cAAC9X,GAAD,CAAMtB,MAAM,kBAAkB/B,YANZ,CAClB,CAAC,OAAQ,SACT,CAAC,iBAAkB,YACnB,CAAC,aAAc,iBAGf,SACE,cAAC,GAAD,M,ICReob,G,kDACnB,WAAYpc,GAAQ,IAAD,8BACjB,cAAMA,IACD+G,MAAQ,CACXqQ,KAAM,IAER,EAAKiF,eAAiBrc,EAAMqc,eAC5B,EAAKxE,iBAAmB,EAAKA,iBAAiB3X,KAAtB,gBANP,E,gEAUjBE,KAAKic,eAAe5Q,aAAanN,KAAK8B,KAAKyX,oB,uCAG5BT,GACfhX,KAAKkH,SAAS,CACZ8P,W,+BAIM,IACAA,EAAShX,KAAK2G,MAAdqQ,KACR,OAAO,cAACD,GAAD,CAAWC,KAAMA,Q,GAtBkBxW,IAAMC,WCErC,SAASyb,KAMtB,OACE,cAACjY,GAAD,CAAMtB,MAAM,OAAO/B,YAND,CAClB,CAAC,OAAQ,SACT,CAAC,OAAQ,UAIT,SACE,cAAC,GAAD,CAAkBqb,eAAgBA,MCPzB,SAASE,KACtB,OACE,cAAClY,GAAD,CAAMtB,MAAM,4BAA4B/B,YAAa,GAArD,SACE,cAAC0G,GAAA,EAAD,CAAMG,WAAS,EAACoI,QAAQ,SAASC,UAAU,MAAM3M,QAAS,EAA1D,SACE,cAACmE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAACE,GAAD,CAAe/E,MAAM,kCAArB,SACG/D,IACC,cAACkJ,GAAD,CAAiBvG,KAAK,QAAtB,qBAEA,cAACuG,GAAD,CAAiBvG,KAAK,SAAtB,iCCFC,SAAS6a,KACtB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAgB9b,KAAK,SAASJ,OAAQ,kBAAM,cAACiH,GAAD,OAC5C,cAAC,EAAD,CACE7G,KAAK,QACLL,wBAAsB,EACtBC,OAAQ,WACN,OAAO,cAACiQ,GAAD,OAGX,cAAC,EAAD,CACE7P,KAAK,iCACLL,wBAAsB,EACtBC,OAAQ,SAACH,GACP,OAAO,cAAC2Z,GAAD,CAAmB3Z,SAAUA,OAGxC,cAAC,EAAD,CACEO,KAAK,WACLL,wBAAsB,EACtBC,OAAQ,WACN,OAAO,cAACuW,GAAD,OAGX,cAAC,EAAD,CACEnW,KAAK,eACLL,wBAAsB,EACtBC,OAAQ,WACN,OAAO,cAAC6b,GAAD,OAGX,cAAC,EAAD,CACEzb,KAAK,WACLL,wBAAsB,EACtBC,OAAQ,WACN,OAAO,cAACyZ,GAAD,OAGX,cAAC,EAAD,CACErZ,KAAK,QACLL,wBAAsB,EACtBC,OAAQ,WACN,OAAO,cAACgc,GAAD,OAGX,cAAC,IAAD,CAAO5b,KAAK,IAAZ,SACE,cAAC6b,GAAD,WCzDVE,IAASnc,OAAO,cAACkc,GAAD,IAAeE,SAASC,eAAe,W","file":"static/js/main.8240afea.chunk.js","sourcesContent":["export function saveToken(token) {\n  localStorage.setItem(\"authToken\", token);\n}\n\nexport function getAuthorizationHeader() {\n  const token = localStorage.getItem(\"authToken\");\n  return {\n    headers: { Authorization: `${token}` }\n  };\n}\n\nexport default {\n  saveToken,\n  getAuthorizationHeader\n};\n","import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { saveToken } from \"./AuthenticationUtil\";\n\nexport const unknownErrorMessage =\n  \"An unknown error occurred. Please try again later.\";\nexport const incorrectCredentialsMessage =\n  \"Incorrect username and/or password. Please enter the correct credentials and try again.\";\n\nexport async function logIn(credentials) {\n  const authorizationHeader = {\n    auth: {\n      username: credentials.username,\n      password: credentials.password\n    }\n  };\n\n  return axios\n    .get(process.env.REACT_APP_TOKEN, authorizationHeader)\n    .then((response) => {\n      saveToken(response.headers.authorization);\n    })\n    .catch((error) => {\n      let message = unknownErrorMessage;\n      if (error.response && error.response.status === \"403\") {\n        message = incorrectCredentialsMessage;\n      }\n      return Promise.reject(new Error(message));\n    });\n}\n\nexport function getAccessToken() {\n  return Cookies.get(\"access_token\");\n}\n\nexport function getAdminToken() {\n  return Cookies.get(\"admin_token\");\n}\n\nexport function getRefreshToken() {\n  return Cookies.get(\"refresh_token\");\n}\n\nexport function isAuthenticated() {\n  return !!getAccessToken();\n}\n\nexport function isAdmin() {\n  return !!getAdminToken();\n}\n\nexport function handleLogout() {\n  // API call.then(response =>\n  Cookies.remove(\"access_token\");\n  Cookies.remove(\"admin_token\");\n  Cookies.remove(\"refresh_token\");\n}\n\nexport async function handleLogin() {\n  //   if (getRefreshToken()) {\n  try {\n    // const tokens = await refreshTokens() // call an API, returns tokens\n\n    const tokens = {\n      access_token: true,\n      admin_token: true,\n      refresh_token: true\n    };\n    const expires = (tokens.expires_in || 60 * 60) * 1000;\n    const inOneHour = new Date(new Date().getTime() + expires);\n\n    // you will have the exact same setters in your Login page/app too\n    Cookies.set(\"access_token\", tokens.access_token, { expires: inOneHour });\n    Cookies.set(\"admin_token\", tokens.admin_token, { expires: inOneHour });\n    Cookies.set(\"refresh_token\", tokens.refresh_token, { expires: inOneHour });\n\n    return true;\n  } catch (error) {\n    return false;\n  }\n  // }\n  // return false;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport { isAuthenticated } from \"../api/AuthenticationApi\";\n\nexport default class ProtectedRoute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.component = this.component.bind(this);\n  }\n\n  component(location) {\n    const { authenticationRequired, render } = this.props;\n    const authenticated = isAuthenticated();\n\n    if (authenticationRequired) {\n      if (authenticated) {\n        return render(location);\n      }\n\n      return <Redirect to={{ pathname: \"/Login\" }} />;\n    }\n\n    if (authenticated) {\n      return <Redirect to={{ pathname: \"/Home\" }} />;\n    }\n\n    return render(location);\n  }\n\n  render() {\n    const { path } = this.props;\n    return (\n      <Route\n        exact\n        path={path}\n        render={({ location }) => this.component(location)}\n      />\n    );\n  }\n}\n\nProtectedRoute.propTypes = {\n  path: PropTypes.string.isRequired,\n  authenticationRequired: PropTypes.bool,\n  render: PropTypes.func.isRequired\n};\n\nProtectedRoute.defaultProps = {\n  authenticationRequired: false\n};\n","import React from \"react\";\nimport { Box, Breadcrumbs, Link, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default function DynamicBreadcrumb(props) {\n  const { breadcrumbs } = props;\n  return (\n    <Box padding=\"2em 0em 0em 1em\">\n      <Breadcrumbs aria-label=\"breadcrumb\" id=\"breadcrumbParent\">\n        {breadcrumbs.map((crumb, i) => {\n          return (\n            <Link\n              color=\"inherit\"\n              href={crumb[1]}\n              id={`breadcrumb${i}`}\n              key={`breadcrumb ${crumb[0]}`}\n            >\n              <Typography color=\"textPrimary\">{crumb[0]}</Typography>\n            </Link>\n          );\n        })}\n      </Breadcrumbs>\n    </Box>\n  );\n}\nDynamicBreadcrumb.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired\n};\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { SwapHoriz } from \"@material-ui/icons/\";\n\nexport default function StreamButton(props) {\n  const { type } = props;\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      padding: \"0 5px\",\n      margin: \"1em\"\n    },\n    label: {\n      textTransform: \"\"\n    }\n  })(Button);\n\n  return (\n    <StyledButton type={type}>\n      <div className=\"buttonText\">\n        <SwapHoriz />\n        Stream\n      </div>\n    </StyledButton>\n  );\n}\n\nStreamButton.propTypes = {\n  type: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport StreamButton from \"./Buttons/StreamButton\";\n\nexport default function TitleButtons() {\n  return (\n    <div className=\"alignRightFloat\">\n      <NavLink\n        to=\"/Streams\"\n        activeClassName=\"hideLinkStyle\"\n        className=\"hideLinkStyle\"\n        exact\n      >\n        <StreamButton type=\"submit\" />\n      </NavLink>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TitleButtons from \"./TitleButtons\";\n\nexport default function Title(props) {\n  const { title, deviceList } = props;\n  return (\n    <Box className=\"flexContents headerAreaUnderline\">\n      <div className=\"title\">{title}</div>\n      {deviceList ? <TitleButtons /> : <></>}\n    </Box>\n  );\n}\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  deviceList: PropTypes.bool.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport { AppBar, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\nimport { AccountCircle, Home } from \"@material-ui/icons/\";\n\nimport { isAuthenticated, handleLogout } from \"../api/AuthenticationApi\";\n\nclass HeaderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      menuButton: {\n        marginRight: theme.spacing(2)\n      }\n    }));\n  }\n\n  handleLogout() {\n    const { history } = this.props;\n    handleLogout();\n    history.push(\"/Login\");\n    history.go(0);\n  }\n\n  render() {\n    return (\n      <div className=\"headerBar\">\n        <AppBar position=\"static\">\n          <Toolbar className=\"darkGrey\">\n            <div className=\"headerTitle\">\n              <NavLink to=\"/Home\" className=\"headerTitle\">\n                <IconButton\n                  edge=\"start\"\n                  className={this.classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"menu\"\n                >\n                  <Home />\n                </IconButton>\n              </NavLink>\n              Switchboard\n            </div>\n            <IconButton\n              id=\"acctBtn\"\n              color=\"inherit\"\n              disabled={!isAuthenticated()}\n              onClick={handleLogout}\n            >\n              <AccountCircle />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\nexport default withRouter(HeaderBar);\n\nHeaderBar.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"@material-ui/core\";\nimport DynamicBreadcrumb from \"./DynamicBreadcrumb\";\nimport Title from \"./Title\";\nimport HeaderBar from \"./HeaderBar\";\n\nexport default function Page(props) {\n  const { breadcrumbs, title, deviceList, children } = props;\n  return (\n    <>\n      <HeaderBar />\n      <Container>\n        <DynamicBreadcrumb breadcrumbs={breadcrumbs} />\n        <Title title={title} deviceList={deviceList} />\n        {children}\n      </Container>\n    </>\n  );\n}\n\nPage.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n    .isRequired,\n  title: PropTypes.string.isRequired,\n  deviceList: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\nPage.defaultProps = {\n  deviceList: false\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    color: \"#ef5350\"\n  }\n}));\n\nexport default function LoginFailedDialog(props) {\n  const classes = useStyles();\n  const { open, setOpen, message } = props;\n\n  const closeDialog = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Dialog open={open} onClose={closeDialog}>\n        <DialogTitle id=\"login-failed-dialog-title\" className={classes.title}>\n          Login Failed\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"login-failed-dialog-description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nLoginFailedDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired\n};\n","import React, { useState } from \"react\";\nimport { Button, Container, makeStyles, TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function LoginConsole(props) {\n  const { handleSubmit } = props;\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit(username, password);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nLoginConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport LoginFailedDialog from \"./LoginFailedDialog\";\nimport LoginConsole from \"./LoginConsole\";\nimport { handleLogin, logIn } from \"../api/AuthenticationApi\";\n\nexport default class LoginPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogOpen: false,\n      dialogMessage: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setDialogOpen = this.setDialogOpen.bind(this);\n    this.setDialogMessage = this.setDialogMessage.bind(this);\n  }\n\n  handleSubmit(username, password) {\n    const { history } = this.props;\n    handleLogin();\n    logIn({ username, password }).catch((error) => {\n      this.setState({\n        dialogOpen: true,\n        dialogMessage: error.message\n      });\n    });\n    history.push(\"/Home\");\n    history.go(0);\n  }\n\n  setDialogOpen(open) {\n    this.setState({\n      dialogOpen: open\n    });\n  }\n\n  setDialogMessage(message) {\n    this.setState({\n      dialogMessage: message\n    });\n  }\n\n  render() {\n    const { dialogOpen, dialogMessage } = this.state;\n    return (\n      <>\n        <LoginConsole handleSubmit={this.handleSubmit} />\n        <LoginFailedDialog\n          open={dialogOpen}\n          setOpen={this.setDialogOpen}\n          message={dialogMessage}\n        />\n      </>\n    );\n  }\n}\n\nLoginPageContents.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Page from \"../general/Page\";\nimport LoginPageContents from \"./LoginPageContents\";\n\nexport default function LoginPage() {\n  const history = useHistory();\n\n  return (\n    <Page title=\"Login\" breadcrumbs={[]}>\n      <LoginPageContents history={history} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function GridColumn(props) {\n  const { width, spacing, children } = props;\n  return (\n    <Grid item xs={width}>\n      <Grid container spacing={spacing}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\nGridColumn.propTypes = {\n  width: PropTypes.number.isRequired,\n  spacing: PropTypes.number,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nGridColumn.defaultProps = {\n  spacing: 3\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Typography, Paper } from \"@material-ui/core\";\n\nexport default function DashboardCard(props) {\n  const { title, children } = props;\n  return (\n    <>\n      <Paper className=\"dashboardCard\" elevation={2}>\n        <Typography variant=\"h5\" gutterBottom>\n          {title}\n        </Typography>\n        {children}\n      </Paper>\n    </>\n  );\n}\n\nDashboardCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nDashboardCard.defaultProps = {\n  children: \"\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Link, Button, withStyles } from \"@material-ui/core\";\n\nexport default function DashboardButton(props) {\n  const { href, children } = props;\n\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      minWidth: 100,\n      maxWidth: 200,\n      padding: \"0 5px\",\n      textTransform: \"none\"\n    }\n  })(Button);\n  return (\n    <Link color=\"inherit\" href={href}>\n      <StyledButton>{children}</StyledButton>\n    </Link>\n  );\n}\n\nDashboardButton.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class StatusIndicator extends React.Component {\n  getStatusStyle() {\n    const { status } = this.props;\n    switch (status) {\n      case \"Online\":\n        return \"green statusIndicatorBody statusTextOnline \";\n      case \"Pending\":\n        return \"yellow statusIndicatorBody statusTextOnline\";\n      case \"Error\":\n        return \"red statusIndicatorBody statusTextOnline\";\n      default:\n        return \"lightGrey statusIndicatorBody statusTextOffline\";\n    }\n  }\n\n  render() {\n    const { status } = this.props;\n    return <div className={this.getStatusStyle()}>{status}</div>;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.oneOf([\"Online\", \"Offline\", \"Error\", \"Pending\"]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogContentText from \"@material-ui/core/DialogContentText\";\n\nexport default function DialogBody(props) {\n  const { children } = props;\n  return (\n    <MuiDialogContent>\n      <MuiDialogContentText id=\"dialog-description\">\n        {children}\n      </MuiDialogContentText>\n    </MuiDialogContent>\n  );\n}\nDialogBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\n\nexport default function DialogButtons(props) {\n  const { button1, button2 } = props;\n\n  return (\n    <MuiDialogActions>\n      <Button onClick={button1.onClick} color=\"primary\">\n        {button1.name}\n      </Button>\n      <Button onClick={button2.onClick} color=\"secondary\" autoFocus>\n        {button2.name}\n      </Button>\n    </MuiDialogActions>\n  );\n}\n\nDialogButtons.propTypes = {\n  button1: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired,\n  button2: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MuiDialog from \"@material-ui/core/Dialog/Dialog\";\nimport { DialogTitle } from \"@material-ui/core\";\nimport DialogBody from \"./DialogBody\";\nimport DialogButtons from \"./DialogButtons\";\n\nexport default class Dialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.openDialog = this.openDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.setState({ open: true });\n  }\n\n  closeDialog() {\n    return this.setState({ open: false });\n  }\n\n  render() {\n    const cancelButton = {\n      name: \"Cancel\",\n      onClick: this.closeDialog\n    };\n\n    const { title, actionButton, children } = this.props;\n    const { open } = this.state;\n    return (\n      <MuiDialog\n        open={open}\n        onClose={() => this.closeDialog}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n        id=\"dialog\"\n      >\n        <DialogTitle>{title}</DialogTitle>\n        <DialogBody>{children}</DialogBody>\n        <DialogButtons button1={cancelButton} button2={actionButton} />\n      </MuiDialog>\n    );\n  }\n}\n\nDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  actionButton: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","export default class DeviceInfo {\n  constructor(\n    serial,\n    lastCommunication,\n    publicIpAddress,\n    privateIpAddress,\n    displayName,\n    status,\n    channels,\n    deviceType,\n    extras\n  ) {\n    this.serialNumber = serial;\n    this.lastCommunication = lastCommunication;\n    this.publicIp = publicIpAddress;\n    this.privateIp = privateIpAddress;\n    this.name = displayName;\n    this.status = status;\n    this.channels = channels;\n    this.deviceType = deviceType;\n    this.extras = extras;\n  }\n\n  static getConciseProperties() {\n    return [\n      \"name\",\n      \"serialNumber\",\n      \"status\",\n      \"publicIp\",\n      \"privateIp\",\n      \"channels\"\n    ];\n  }\n}\n","import DeviceInfo from \"./DeviceInfo\";\n\nexport function convertToDataObject(databaseDevice) {\n  return new DeviceInfo(\n    databaseDevice.serialNumber,\n    databaseDevice.lastCommunication,\n    databaseDevice.device.publicIpAddress,\n    databaseDevice.device.privateIpAddress,\n    databaseDevice.device.displayName,\n    databaseDevice.device.status,\n    databaseDevice.inputs || databaseDevice.outputs,\n    databaseDevice.inputs ? \"receiver\" : \"sender\"\n  );\n}\n\nexport function convertToServiceObject(deviceInfo) {\n  const serviceObject = {\n    serialNumber: deviceInfo.serialNumber,\n    lastCommunication: deviceInfo.lastCommunication,\n    device: {\n      serialNumber: deviceInfo.serialNumber,\n      publicIpAddress: deviceInfo.publicIp,\n      privateIpAddress: deviceInfo.privateIp,\n      displayName: deviceInfo.name,\n      status: deviceInfo.status\n    }\n  };\n  if (deviceInfo.deviceType === \"sender\") {\n    serviceObject.outputs = deviceInfo.channels;\n  } else {\n    serviceObject.inputs = deviceInfo.channels;\n  }\n  return serviceObject;\n}\n","export default class StreamInfo {\n  // to be used once backend has date, status, type, and time fields\n  // constructor(id, date, sender, receiver, status, type, time, extras) {\n  //     this.id = id;\n  //     this.date = new Date(date).toString().split(\" \").slice(0, 5).join(\" \");\n  //     this.sender = sender;\n  //     this.receiver = receiver;\n  //     this.status = status;\n  //     this.type = type;\n  //     this.time = time;\n  //     this.extras = extras;\n  // }\n\n  // temporary with static fields until backend is up to snuff\n  constructor(id, sender, receiver, outputChannel, inputChannel) {\n    this.id = id;\n    this.date = new Date(\"2020-10-31T08:15:30\")\n      .toString()\n      .split(\" \")\n      .slice(0, 5)\n      .join(\" \");\n    this.sender = sender;\n    this.receiver = receiver;\n    this.outputChannel = outputChannel;\n    this.inputChannel = inputChannel;\n    this.status = \"Online\";\n    this.type = \"Type 1\";\n    this.time = \"00:34:44\";\n  }\n}\n","export default class OutputChannelInfo {\n  constructor(id, name, port, encoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.encoder = encoder;\n  }\n}\n","export default class InputChannelInfo {\n  constructor(id, name, port, decoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.decoder = decoder;\n  }\n}\n","export default class LogInfo {\n  constructor(id, dateTime, level, message) {\n    this.id = id;\n    this.dateTime = new Date(dateTime)\n      .toString()\n      .split(\" \")\n      .slice(0, 5)\n      .join(\" \");\n    this.level = level;\n    this.message = message;\n  }\n}\n","import DeviceInfo from \"../model/DeviceInfo\";\nimport OutChannelInfo from \"../model/OutputChannelInfo\";\nimport InChannelInfo from \"../model/InputChannelInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport LogInfo from \"../model/LogInfo\";\n\nconst extras = [\"Additional Device details go here\"];\nconst sampleInputChannels = [\n  new InChannelInfo(1, \"Input ch 1\", 500, null),\n  new InChannelInfo(2, \"Input ch 2\", 456, null),\n  new InChannelInfo(3, \"Input ch 3\", 800, null)\n];\nconst sampleOutputChannels = [\n  new OutChannelInfo(1, \"Output ch 1\", 500, null),\n  new OutChannelInfo(2, \"Output ch 2\", 456, null),\n  new OutChannelInfo(3, \"Output ch 3\", 800, null)\n];\n\nexport function getSenders(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:30:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 3\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:40:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 4\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:50:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 5\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:60:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 6\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:70:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 7\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:80:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 8\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:90:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 9\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n\n  callback(sampleSenders);\n}\n\nexport function getSampleSender() {\n  return new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n}\n\nexport function getReceivers(callback) {\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:03:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 3\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:04:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 4\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:05:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 5\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:06:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 6\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:07:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 7\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:08:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 8\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:09:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 9\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:11:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 11\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:21:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 12\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:31:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 13\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:41:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 14\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:51:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 15\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:61:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 16\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:71:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 17\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:81:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 18\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:91:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 19\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  callback(sampleReceivers);\n}\n\nexport function getAllStreams() {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  return [\n    new StreamInfo(1, sampleSenders[0], sampleReceivers[0]),\n    new StreamInfo(2, sampleSenders[1], sampleReceivers[1]),\n    new StreamInfo(3, sampleSenders[1], sampleReceivers[0])\n  ];\n}\n\nexport function getAllLogs(callback) {\n  const dates = [\n    new Date(\"2020-10-31T15:53:23\"),\n    new Date(\"2020-11-13T12:36:30\"),\n    new Date(\"2020-11-13T08:24:30\")\n  ];\n\n  const sampleLogs = [\n    new LogInfo(1, dates[0], \"Info\", \"Log 1 info\"),\n    new LogInfo(2, dates[1], \"Info\", \"Log 2 info\"),\n    new LogInfo(3, dates[2], \"Info\", \"Log 3 info\")\n  ];\n\n  callback(sampleLogs);\n}\n","import axios from \"axios\";\nimport { convertToDataObject } from \"../model/ConvertDataFormat\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport * as SampleData from \"./SampleData\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nexport async function getStream(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAM}/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      const stream = response.data;\n      return new StreamInfo(\n        stream.id,\n        convertToDataObject(stream.outputChannel.encoder),\n        convertToDataObject(stream.inputChannel.decoder),\n        stream.outputChannel.channel.port,\n        stream.inputChannel.channel.port\n      );\n    });\n}\n\nexport async function getAllStreams() {\n  return axios\n    .get(process.env.REACT_APP_STREAM, getAuthorizationHeader())\n    .then((streams) => {\n      return Promise.all(\n        streams.data.map((streamId) => {\n          return getStream(streamId);\n        })\n      );\n    });\n}\n\nexport async function deleteStream(streamId) {\n  return axios.delete(\n    `${process.env.REACT_APP_STREAM}/${streamId}`,\n    getAuthorizationHeader()\n  );\n}\n\nexport function createStream(selectedReceiverID, selectedSenderID) {\n  return axios.post(\n    process.env.REACT_APP_STREAM,\n    {\n      inputChannelId: selectedReceiverID,\n      outputChannelId: selectedSenderID\n    },\n    getAuthorizationHeader()\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../general/dialog/Dialog\";\nimport { deleteStream } from \"../api/StreamApi\";\n\nexport default class DeleteStreamDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  afterDelete() {\n    const { history } = this.props;\n    this.dialogElement.current.closeDialog();\n    history.push(\"/Streams\");\n    history.go(0);\n  }\n\n  confirmDelete() {\n    const { deleteId } = this.props;\n    deleteStream(deleteId).finally(this.afterDelete());\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId } = this.props;\n    const title = \"Confirm Delete\";\n    const message = `Are you sure you want to end stream ${deleteId}?`;\n\n    const actionButton = {\n      name: \"Confirm\",\n      onClick: this.confirmDelete\n    };\n\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        {message}\n      </Dialog>\n    );\n  }\n}\n\nDeleteStreamDialog.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport { withRouter } from \"react-router-dom\";\n\nimport DeleteStreamDialog from \"./DeleteStreamDialog\";\n\nclass DeleteStreamDialogOpener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId, history } = this.props;\n    return (\n      <>\n        <Tooltip title=\"Delete Stream\" aria-label=\"delete stream\">\n          <IconButton onClick={this.openDialog}>\n            <Delete />\n          </IconButton>\n        </Tooltip>\n        <DeleteStreamDialog\n          ref={this.dialogElement}\n          deleteId={deleteId}\n          history={history}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(DeleteStreamDialogOpener);\n\nDeleteStreamDialogOpener.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  ArrowDownward,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\n\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport DeleteStreamDialogOpener from \"./DeleteStreamDialogOpener\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default class StreamsTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.columnInfo = [\n      {\n        title: \"ID\",\n        field: \"id\"\n      },\n      {\n        title: \"Date\",\n        field: \"date\"\n      },\n      {\n        title: \"Sender\",\n        field: \"sender.name\"\n      },\n      {\n        title: \"Receiver\",\n        field: \"receiver.name\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        }\n      },\n      {\n        title: \"Type\",\n        field: \"type\"\n      },\n      {\n        title: \"Time Elapsed\",\n        field: \"time\"\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <DeleteStreamDialogOpener deleteId={rowData.id} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n    this.options = {\n      toolbar: false,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: false,\n      draggable: false\n    };\n    this.icons = {\n      SortArrow: ArrowDownward,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  getColumnInfo() {\n    return this.columnInfo;\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  getIcons() {\n    return this.icons;\n  }\n\n  render() {\n    const { streams } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer>\n            <MaterialTable\n              columns={this.getColumnInfo()}\n              data={streams}\n              options={this.getOptions()}\n              icons={this.getIcons()}\n            />\n          </TableContainer>\n          <div className=\"textAlignRightPadded\">\n            {\"Time Zone: \".concat(\n              Intl.DateTimeFormat().resolvedOptions().timeZone\n            )}\n          </div>\n        </Box>\n      </>\n    );\n  }\n}\n\nStreamsTable.propTypes = {\n  streams: PropTypes.arrayOf(PropTypes.instanceOf(StreamInfo)).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StreamsTable from \"./StreamsTable\";\nimport { getAllStreams } from \"../api/SampleData\";\n\nexport default class StreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: []\n    };\n    this.dataSource = props.dataSource;\n    this.handleStreamsChange = this.handleStreamsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource\n      .getAllStreams()\n      .then(this.handleStreamsChange)\n      .catch(() => {\n        this.handleStreamsChange(getAllStreams());\n      });\n  }\n\n  handleStreamsChange(streams) {\n    this.setState({\n      streams\n    });\n  }\n\n  render() {\n    const { streams } = this.state;\n    return <StreamsTable streams={streams} />;\n  }\n}\n\nStreamsTableWrapper.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\nimport StreamsTableWrapper from \"../streamlist/StreamsTableWrapper\";\n\nimport * as StreamApi from \"../api/StreamApi\";\n\nexport default function ActiveStreamCard() {\n  const dataSource = StreamApi;\n\n  return (\n    <DashboardCard title=\"Active Streams\" style={{ height: \"100%\" }}>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={12}>\n          <StreamsTableWrapper dataSource={dataSource} />\n        </Grid>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Streams\">See more</DashBoardButton>\n        </Grid>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Streams/New\">Start Stream</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function ActivityLogCard() {\n  return (\n    <DashboardCard title=\"Activity Logs\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Logs\">View All</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function DevicesCard() {\n  return (\n    <DashboardCard title=\"Devices\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Devices\">View Senders</DashBoardButton>\n        </Grid>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Devices\">View Receivers</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function AdminPanelCard() {\n  return (\n    <DashboardCard title=\"Admin Panel\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Admin\">View Users</DashBoardButton>\n        </Grid>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Admin\">Create a User</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport GridColumn from \"../general/dashboard/GridColumn\";\nimport ActiveStreamCard from \"./ActiveStreamCard\";\nimport ActivityLogCard from \"./ActivityLogCard\";\nimport DevicesCard from \"./DevicesCard\";\nimport AdminPanelCard from \"./AdminPanelCard\";\n\nimport { isAdmin } from \"../api/AuthenticationApi\";\n\nexport default function HomePageContents() {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"stretch\"\n      direction=\"row\"\n      spacing={3}\n    >\n      <Grid item xs={6}>\n        <Grid style={{ height: \"100%\" }}>\n          <ActiveStreamCard />\n        </Grid>\n      </Grid>\n      <GridColumn width={6}>\n        <Grid item xs={12}>\n          <DevicesCard />\n        </Grid>\n        <Grid item xs={12}>\n          <ActivityLogCard />\n        </Grid>\n        {isAdmin() ? (\n          <Grid item xs={12}>\n            <AdminPanelCard />\n          </Grid>\n        ) : (\n          <div />\n        )}\n      </GridColumn>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport HomePageContents from \"./HomePageContents\";\n\nexport default function HomePage() {\n  return (\n    <Page title=\"Dashboard\" breadcrumbs={[[\"Home\", \"\"]]}>\n      <HomePageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default function TabPanel(props) {\n  const { children, value, index } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n    >\n      {value === index && (\n        <Box p={0}>\n          <Typography component=\"span\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.element.isRequired,\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function ChannelDetailsTableHead() {\n  return (\n    <TableRow>\n      <TableCell className=\"lightGrey\">ID</TableCell>\n      <TableCell className=\"lightGrey\">Name</TableCell>\n      <TableCell className=\"lightGrey\">Port</TableCell>\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\n\nexport default function ChannelDetailsTableRow(props) {\n  const {\n    channel: { id, name, port }\n  } = props;\n  return (\n    <TableRow>\n      <TableCell>{id}</TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{port}</TableCell>\n    </TableRow>\n  );\n}\nChannelDetailsTableRow.propTypes = {\n  channel: PropTypes.oneOfType([\n    PropTypes.instanceOf(InputChannelInfo),\n    PropTypes.instanceOf(OutputChannelInfo)\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Table, TableBody, TableHead } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport ChannelDetailsTableHead from \"./ChannelDetailsTableHead\";\nimport ChannelDetailsTableRow from \"./ChannelDetailsTableRow\";\n\nexport default function ChannelDetailsTable(props) {\n  const { channels } = props;\n  return (\n    <Table className=\"flexContents\">\n      <TableHead>\n        <ChannelDetailsTableHead />\n      </TableHead>\n      <TableBody>\n        {channels.map((channel) => {\n          return (\n            <ChannelDetailsTableRow channel={channel} key={channel.name} />\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\nChannelDetailsTable.propTypes = {\n  channels: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.instanceOf(InputChannelInfo),\n      PropTypes.instanceOf(OutputChannelInfo)\n    ])\n  ).isRequired\n};\n","import axios from \"axios\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport * as SampleData from \"./SampleData\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nfunction getStatus(lastCommunicationString) {\n  if (!lastCommunicationString) {\n    return \"Pending\";\n  }\n\n  const lastCommunicationDate = new Date(`${lastCommunicationString}Z`);\n  const diff = Date.now() - lastCommunicationDate.getTime();\n  const tenMinutes = 10 * 60 * 1000;\n  if (diff < tenMinutes) {\n    return \"Online\";\n  }\n  return \"Offline\";\n}\n\nexport function getSenders(callback) {\n  axios\n    .get(process.env.REACT_APP_ENCODER, getAuthorizationHeader())\n    .then((senders) => {\n      callback(\n        senders.data.map((sender) => {\n          let channels = [];\n          if (sender.output) {\n            channels = sender.output.map((output) => {\n              return new OutputChannelInfo(\n                output.id,\n                output.channel.name,\n                output.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            sender.lastCommunication == null\n              ? \"Never\"\n              : sender.lastCommunication;\n          return new DeviceInfo(\n            sender.serialNumber,\n            lastCommunication,\n            sender.device.publicIpAddress,\n            sender.device.privateIpAddress,\n            sender.device.displayName,\n            getStatus(sender.lastCommunication),\n            channels,\n            \"encoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getSenders(callback);\n    });\n}\n\nexport function getReceivers(callback) {\n  axios\n    .get(process.env.REACT_APP_DECODER, getAuthorizationHeader())\n    .then((receivers) => {\n      callback(\n        receivers.data.map((receiver) => {\n          let channels = [];\n          if (receiver.input) {\n            channels = receiver.input.map((input) => {\n              return new InputChannelInfo(\n                input.id,\n                input.channel.name,\n                input.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            receiver.lastCommunication == null\n              ? \"Never\"\n              : receiver.lastCommunication;\n          return new DeviceInfo(\n            receiver.serialNumber,\n            lastCommunication,\n            receiver.device.publicIpAddress,\n            receiver.device.privateIpAddress,\n            receiver.device.displayName,\n            getStatus(receiver.lastCommunication),\n            channels,\n            \"decoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getReceivers(callback);\n    });\n}\n\nexport function deleteDevice(deviceId) {\n  return axios\n    .delete(\n      `${process.env.REACT_APP_DEVICE}/${deviceId}`,\n      getAuthorizationHeader()\n    )\n    .catch(() => {});\n}\n\nexport async function updateDeviceName(deviceId, updatedName) {\n  return axios\n    .put(process.env.REACT_APP_DEVICE, {\n      serialNumber: deviceId,\n      displayName: updatedName\n    })\n    .catch(() => {});\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PropTypes from \"prop-types\";\nimport { MenuItem } from \"@material-ui/core\";\nimport * as DeviceApi from \"../../api/DeviceApi\";\n\nfunction renderDeleteButton(openDeleteDialog) {\n  return (\n    <Button\n      id=\"deleteBtn\"\n      variant=\"outlined\"\n      color=\"secondary\"\n      onClick={openDeleteDialog}\n    >\n      Delete\n    </Button>\n  );\n}\n\nfunction renderDeleteMenuItem(openDeleteDialog) {\n  return (\n    <MenuItem onClick={openDeleteDialog}>\n      <span className=\"warningText\">Delete</span>\n    </MenuItem>\n  );\n}\n\nexport default function DeleteDeviceButton(props) {\n  const { button, deleteId } = props;\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n\n  const openDeleteDialog = () => {\n    return setOpen(true);\n  };\n  const cancelDelete = () => {\n    return setOpen(false);\n  };\n  const confirmDelete = () => {\n    DeviceApi.deleteDevice(deleteId).then(() => {\n      if (history.location.pathname.endsWith(\"Devices\")) {\n        history.go(0);\n      } else {\n        history.push(\"/Devices\");\n      }\n    });\n    return setOpen(false);\n  };\n\n  return (\n    <>\n      {button\n        ? renderDeleteButton(openDeleteDialog)\n        : renderDeleteMenuItem(openDeleteDialog)}\n      <Dialog\n        open={open}\n        onClose={cancelDelete}\n        aria-labelledby=\"delete-stream-dialog-title\"\n        aria-describedby=\"delete-stream-dialog-description\"\n        id=\"delete-stream-dialog\"\n      >\n        <DialogTitle id=\"delete-stream-dialog-title\">\n          Confirm Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"delete-stream-dialog-description\">\n            Are you sure you want to delete this device?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button id=\"cancelDeleteBtn\" onClick={cancelDelete} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            id=\"confirmDeleteBtn\"\n            onClick={confirmDelete}\n            color=\"secondary\"\n            autoFocus\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nDeleteDeviceButton.propTypes = {\n  button: PropTypes.bool.isRequired,\n  deleteId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { MoreVert } from \"@material-ui/icons/\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeleteDeviceButton from \"../general/Buttons/DeleteDeviceButton\";\n\nexport default class ActionMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorElement: null\n    };\n\n    this.setAnchorElement = this.setAnchorElement.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick(event) {\n    this.setAnchorElement(event.currentTarget);\n  }\n\n  handleClose() {\n    this.setAnchorElement(null);\n  }\n\n  setAnchorElement(element) {\n    this.setState({\n      anchorElement: element\n    });\n  }\n\n  render() {\n    const { anchorElement } = this.state;\n    const { device } = this.props;\n    return (\n      <>\n        <IconButton\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n          size=\"small\"\n        >\n          <MoreVert />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorElement}\n          keepMounted\n          open={Boolean(anchorElement)}\n          onClose={this.handleClose}\n          anchorOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n          transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        >\n          <MenuItem onClick={this.handleClose}>\n            <NavLink\n              to={{\n                pathname: `/Devices/Details/${device.name}`,\n                state: { device }\n              }}\n              className=\"hideLinkStyle\"\n            >\n              View Details\n            </NavLink>\n          </MenuItem>\n          <MenuItem onClick={this.handleClose}>\n            Start stream with this as receiver\n          </MenuItem>\n          <DeleteDeviceButton button={false} deleteId={device.serialNumber} />\n        </Menu>\n      </>\n    );\n  }\n}\n\nActionMenu.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  FilterList,\n  Search,\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable, { MTableToolbar } from \"material-table\";\n\nimport ChannelDetailsTable from \"./ChannelDetailsTable\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport ActionMenu from \"./ActionMenu\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nfunction getComponents() {\n  return {\n    /*  eslint-disable react/jsx-props-no-spreading */\n    Toolbar: function Components(props) {\n      return (\n        <div className=\"lightestGrey\">\n          <MTableToolbar {...props} />\n        </div>\n      );\n    }\n  };\n}\n\nfunction buildNavlink(deviceInfo) {\n  return (\n    <NavLink\n      to={{\n        pathname: `/Devices/Details/${deviceInfo.serialNumber}`,\n        state: { device: deviceInfo }\n      }}\n    >\n      {deviceInfo.name}\n    </NavLink>\n  );\n}\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"Name\",\n      field: \"name\",\n      render: (rowData) => buildNavlink(rowData)\n    },\n    {\n      title: \"Serial Number\",\n      field: \"serialNumber\"\n    },\n    {\n      title: \"Status\",\n      field: \"status\",\n      render: function Status(rowData) {\n        return <StatusIndicator status={rowData.status} />;\n      },\n      lookup: {\n        Online: \"Online\",\n        Pending: \"Pending\",\n        Error: \"Error\",\n        Offline: \"Offline\"\n      }\n    },\n    {\n      title: \"Private IP Address\",\n      field: \"privateIp\"\n    },\n    {\n      title: \"Public IP Address\",\n      field: \"publicIp\"\n    },\n    {\n      title: \"Actions\",\n      field: \"action\",\n      filtering: false,\n      sorting: false,\n      render: function Actions(rowData) {\n        return <ActionMenu device={rowData} />;\n      },\n      align: \"center\",\n      export: false\n    }\n  ];\n}\n\nfunction getDetailPanel() {\n  return [\n    {\n      icon: ExpandMore,\n      openIcon: ExpandLess,\n      tooltip: \"Show Device Details\",\n      render: function DetailPanel(rowData) {\n        return (\n          <div className=\"lightestGrey\" style={{ padding: \"1.5em\" }}>\n            <Typography variant=\"h6\">Channels</Typography>\n            <ChannelDetailsTable channels={rowData.channels} />\n          </div>\n        );\n      }\n    }\n  ];\n}\n\nfunction getOptions() {\n  return {\n    toolbar: true,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: true,\n    draggable: false\n  };\n}\n\nfunction getIcons() {\n  return {\n    Filter: FilterList,\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function DevicesTable(props) {\n  const { title, devices } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer style={{ maxHeight: 570 }}>\n          <MaterialTable\n            title={title}\n            components={getComponents()}\n            columns={getColumnInfo()}\n            data={devices}\n            detailPanel={getDetailPanel()}\n            options={getOptions()}\n            icons={getIcons()}\n          />\n        </TableContainer>\n      </Box>\n    </>\n  );\n}\n\nDevicesTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  devices: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport { Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default class VerticalTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event, newTab) {\n    const { setValue } = this.props;\n    setValue(newTab);\n  }\n\n  render() {\n    const {\n      value,\n      classes: { tabs }\n    } = this.props;\n\n    return (\n      <>\n        <Tabs\n          value={value}\n          onChange={this.handleChange}\n          aria-label=\"Vertical tabs\"\n          className={`${tabs} lightGrey blackFont flexContents`}\n          orientation=\"vertical\"\n          indicatorColor=\"primary\"\n          variant=\"scrollable\"\n        >\n          <Tab\n            label=\"Senders\"\n            id=\"vertical-tab-0\"\n            aria-controls=\"vertical-tabpanel-0\"\n          />\n          <Tab\n            label=\"Receivers\"\n            id=\"vertical-tab-1\"\n            aria-controls=\"vertical-tabpanel-1\"\n          />\n        </Tabs>\n      </>\n    );\n  }\n}\n\nVerticalTabs.propTypes = {\n  setValue: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TabPanel from \"./TabPanel\";\nimport DevicesTable from \"./DevicesTable\";\nimport VerticalTabs from \"../general/VerticalTabs\";\n\nexport default class DeviceListTabTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      value: 0\n    };\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { dataSource } = this.props;\n    dataSource.getSenders(this.handleSendersChange);\n    dataSource.getReceivers(this.handleReceiversChange);\n  }\n\n  handleValueChange(tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  render() {\n    const { receivers, senders, value } = this.state;\n    const { classes } = this.props;\n    return (\n      <>\n        <Box\n          style={{\n            display: \"flex\",\n            flexGrow: 1\n          }}\n        >\n          <VerticalTabs\n            value={value}\n            setValue={this.handleValueChange}\n            classes={classes}\n          />\n          <TabPanel value={value} index={0} className=\"lightGreyBorder\">\n            <DevicesTable devices={senders} title=\"List of Senders\" />\n          </TabPanel>\n          <TabPanel value={value} index={1} className=\"lightGreyBorder\">\n            <DevicesTable devices={receivers} title=\"List of Receivers\" />\n          </TabPanel>\n        </Box>\n      </>\n    );\n  }\n}\nDeviceListTabTable.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default function defaultMakeStylesTheme() {\n  return makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    },\n    tabs: {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }));\n}\n","import React from \"react\";\n\nimport Page from \"../general/Page\";\nimport DeviceListTabTable from \"./DeviceListTabTable\";\nimport * as useStyles from \"../DefaultMakeStylesTheme\";\nimport * as dataSource from \"../api/DeviceApi\";\n\nexport default function DeviceListPage() {\n  const breadcrumb = [\n    [\"Home\", \"/Home\"],\n    [\"My Devices\", \"/Devices\"]\n  ];\n  return (\n    <Page title=\"My Devices\" breadcrumbs={breadcrumb} deviceList>\n      <DeviceListTabTable classes={useStyles} dataSource={dataSource} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nexport default function HorizontalTabPanel(props) {\n  const { value, index, children } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </div>\n  );\n}\n\nHorizontalTabPanel.propTypes = {\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Search,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\nimport LogInfo from \"../model/LogInfo\";\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"ID\",\n      field: \"id\",\n      cellStyle: { width: \"10%\" }\n    },\n    {\n      title: \"Date\",\n      field: \"dateTime\",\n      cellStyle: { width: \"15%\" }\n    },\n    {\n      title: \"Level\",\n      field: \"level\",\n      cellStyle: { width: \"10%\" }\n    },\n    {\n      title: \"Message\",\n      field: \"message\",\n      sorting: false\n    }\n  ];\n}\n\nfunction getOptions(bodyHeight) {\n  return {\n    toolbar: true,\n    showTitle: false,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: false,\n    draggable: false,\n    maxBodyHeight: bodyHeight,\n    minBodyHeight: bodyHeight\n  };\n}\n\nfunction getIcons() {\n  return {\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function LogsTable(props) {\n  const { logs, bodyHeight, title } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer>\n          <MaterialTable\n            title={title}\n            columns={getColumnInfo()}\n            data={logs}\n            options={getOptions(bodyHeight)}\n            icons={getIcons()}\n          />\n        </TableContainer>\n        <div className=\"textAlignRightPadded\">\n          {\"Time Zone: \".concat(\n            Intl.DateTimeFormat().resolvedOptions().timeZone\n          )}\n        </div>\n      </Box>\n    </>\n  );\n}\n\nLogsTable.propTypes = {\n  logs: PropTypes.arrayOf(PropTypes.instanceOf(LogInfo)).isRequired,\n  bodyHeight: PropTypes.string,\n  title: PropTypes.string\n};\n\nLogsTable.defaultProps = {\n  bodyHeight: \"auto\",\n  title: \"Logs\"\n};\n","import axios from \"axios\";\nimport LogInfo from \"../model/LogInfo\";\nimport * as SampleData from \"./SampleData\";\n\nasync function getLogs(endpoint) {\n  return axios\n    .get(endpoint)\n    .then((response) => {\n      return Promise.resolve(\n        response.data.map((log) => {\n          return new LogInfo(log.id, log.dateTime, log.level, log.message);\n        })\n      );\n    })\n    .catch(() => {\n      return new Promise((resolve) => {\n        SampleData.getAllLogs(resolve);\n      });\n    });\n}\n\nexport async function getAllLogs() {\n  return getLogs(process.env.REACT_APP_LOGS);\n}\n\nexport async function getDeviceLogs(deviceSerialNumber) {\n  return getLogs(`${process.env.REACT_APP_LOGS}/${deviceSerialNumber}`);\n}\n","import { Container, Paper } from \"@material-ui/core\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport LogsTable from \"../../loglist/LogsTable\";\nimport * as LogApi from \"../../api/LogApi\";\n\nexport default class DeviceDetailsActivityPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.device = props.device;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    LogApi.getDeviceLogs(this.device.serialNumber).then(this.handleLogsChange);\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return (\n      <>\n        <Container component={Paper}>\n          <LogsTable\n            title={`${this.device.serialNumber} Logs`}\n            logs={logs}\n            bodyHeight=\"35vh\"\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nDeviceDetailsActivityPanel.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Paper } from \"@material-ui/core\";\n\nexport default function DeviceDetailsNotesPanel(props) {\n  const { extras } = props;\n  return <Container component={Paper}>{extras}</Container>;\n}\n\nDeviceDetailsNotesPanel.propTypes = {\n  extras: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\nimport { Cancel, Save } from \"@material-ui/icons\";\n\nexport default function EditableName(props) {\n  const { confirmEditing, deviceName, setName, cancelEditing } = props;\n  return (\n    <form className=\"deviceNameEditForm\" onSubmit={confirmEditing}>\n      <Box className=\"flexContents\">\n        <TextField\n          id=\"deviceName\"\n          name=\"deviceName\"\n          required\n          defaultValue={deviceName}\n          onChange={(event) => setName(event.target.value)}\n        />\n        <div className=\"alignRightFloat\">\n          <IconButton id=\"cancelEditBtn\" size=\"small\" onClick={cancelEditing}>\n            <Cancel />\n          </IconButton>\n\n          <IconButton id=\"confirmEditBtn\" type=\"submit\" color=\"primary\">\n            <Save />\n          </IconButton>\n        </div>\n      </Box>\n    </form>\n  );\n}\n\nEditableName.propTypes = {\n  confirmEditing: PropTypes.func.isRequired,\n  deviceName: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired,\n  cancelEditing: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Edit } from \"@material-ui/icons\";\n\nexport default function StaticName(props) {\n  const { deviceName, startEditing } = props;\n  return (\n    <>\n      {deviceName}\n      <div className=\"alignRightFloat\">\n        <IconButton\n          id=\"editBtn\"\n          size=\"small\"\n          color=\"action\"\n          onClick={startEditing}\n        >\n          <Edit />\n        </IconButton>\n      </div>\n    </>\n  );\n}\n\nStaticName.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  startEditing: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as DeviceApi from \"../api/DeviceApi\";\nimport EditableName from \"./EditableName\";\nimport StaticName from \"./StaticName\";\n\nexport default class DeviceName extends React.Component {\n  constructor(props) {\n    super(props);\n    this.deviceName = props.deviceName;\n    this.deviceId = props.deviceId;\n    this.state = {\n      editing: false,\n      name: this.deviceName\n    };\n\n    this.startEdit = this.startEdit.bind(this);\n    this.cancelEditing = this.cancelEditing.bind(this);\n    this.confirmEditing = this.confirmEditing.bind(this);\n    this.setName = this.setName.bind(this);\n  }\n\n  setName(updatedName) {\n    this.setState({ name: updatedName });\n  }\n\n  startEdit() {\n    this.setState({ editing: true });\n  }\n\n  cancelEditing() {\n    this.setState({ name: this.deviceName });\n    this.setState({ editing: false });\n  }\n\n  confirmEditing(event) {\n    // api call\n    event.preventDefault();\n    const { name: newName } = this.state;\n    const oldName = this.deviceName;\n    this.deviceName = newName;\n    this.setState({ editing: false });\n\n    DeviceApi.updateDeviceName(this.deviceId, newName).catch(() => {\n      // If update was unsuccessful, return to the old name\n      this.deviceName = oldName;\n      this.forceUpdate();\n    });\n  }\n\n  render() {\n    const { editing } = this.state;\n    return (\n      <>\n        {editing ? (\n          <EditableName\n            confirmEditing={this.confirmEditing}\n            deviceName={this.deviceName}\n            setName={this.setName}\n            cancelEditing={this.cancelEditing}\n          />\n        ) : (\n          <StaticName\n            deviceName={this.deviceName}\n            startEditing={this.startEdit}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nDeviceName.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  deviceId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\n\nimport { TableContainer, TableCell, TableRow } from \"@material-ui/core\";\nimport ChannelDetailsTable from \"../devicelist/ChannelDetailsTable\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport DeviceName from \"./DeviceName\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class DeviceDetailsConciseRow extends React.Component {\n  static getPropertyDisplayName(name) {\n    switch (name) {\n      case \"serialNumber\":\n        return \"Serial Number\";\n      case \"lastCommunication\":\n        return \"Last Communication\";\n      case \"privateIp\":\n        return \"Private IP Address\";\n      case \"publicIp\":\n        return \"Public IP Address\";\n      case \"name\":\n        return \"Name\";\n      case \"status\":\n        return \"Status\";\n      case \"channels\":\n        return \"Channels\";\n      default:\n        return \"Additional Info\";\n    }\n  }\n\n  static createInnerTable(value) {\n    return (\n      <TableContainer>\n        <ChannelDetailsTable channels={value} />\n      </TableContainer>\n    );\n  }\n\n  static createTableCellContents(name, value, device) {\n    switch (name) {\n      case \"channels\":\n        return DeviceDetailsConciseRow.createInnerTable(value);\n      case \"status\":\n        return <StatusIndicator status={value} />;\n      case \"name\":\n        return <DeviceName deviceName={value} deviceId={device.serialNumber} />;\n      default:\n        return value;\n    }\n  }\n\n  render() {\n    const { name, value, device } = this.props;\n    return (\n      <TableRow>\n        <TableCell>\n          {DeviceDetailsConciseRow.getPropertyDisplayName(name)}\n        </TableCell>\n        <TableCell align=\"center\">\n          {DeviceDetailsConciseRow.createTableCellContents(name, value, device)}\n        </TableCell>\n      </TableRow>\n    );\n  }\n}\n\nDeviceDetailsConciseRow.propTypes = {\n  name: Proptypes.string.isRequired,\n  value: Proptypes.oneOfType([\n    Proptypes.string,\n    Proptypes.arrayOf(\n      Proptypes.oneOfType([InputChannelInfo, OutputChannelInfo])\n    )\n  ]).isRequired,\n  device: Proptypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { TableContainer, Table, TableBody, Paper } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceDetailsConciseRow from \"./DeviceDetailsConciseRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function DeviceDetailsConciseTable(props) {\n  const { device } = props;\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableBody>\n            {DeviceInfo.getConciseProperties().map((property) => (\n              <DeviceDetailsConciseRow\n                name={property}\n                value={device[property]}\n                device={device}\n                key={`device_${property}`}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nDeviceDetailsConciseTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { Container, Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport HorizontalTabPanel from \"../general/HorizontalTabPanel\";\nimport DeviceDetailsActivityPanel from \"./TabPanels/DeviceDetailsActivityPanel\";\nimport DeviceDetailsNotesPanel from \"./TabPanels/DeviceDetailsNotesPanel\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeviceDetailsConciseTable from \"./DeviceDetailsConciseTable\";\n\nexport default class DeviceDetailsTabTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleValueChange(event, tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  static getPanelContents(tabInfo, device) {\n    switch (tabInfo) {\n      case \"Overview\":\n        return <DeviceDetailsConciseTable device={device} />;\n      case \"Activity Log\":\n        return <DeviceDetailsActivityPanel device={device} />;\n      case \"Notes\":\n        return <DeviceDetailsNotesPanel extras={device.extras} />;\n\n      default:\n        return <div>Whoops not a valid value</div>;\n    }\n  }\n\n  render() {\n    const { value } = this.state;\n    const { device, tabs } = this.props;\n    return (\n      <Container>\n        <Tabs\n          value={value}\n          onChange={this.handleValueChange}\n          className=\"lightGrey blackFont flexContents\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {tabs.map((tabInfo) => {\n            let tab;\n            if (tabInfo === \"Overview\") {\n              tab = (\n                <Tab\n                  label={tabInfo}\n                  key={tabInfo}\n                  style={{ pointerEvents: \"none\" }}\n                />\n              );\n            } else {\n              tab = <Tab label={tabInfo} key={tabInfo} />;\n            }\n            return tab;\n          })}\n        </Tabs>\n        {tabs.map((tabInfo, index) => {\n          return (\n            <HorizontalTabPanel\n              value={value}\n              key={tabInfo}\n              index={index}\n              device={device}\n            >\n              {DeviceDetailsTabTable.getPanelContents(tabInfo, device)}\n            </HorizontalTabPanel>\n          );\n        })}\n      </Container>\n    );\n  }\n}\nDeviceDetailsTabTable.propTypes = {\n  tabs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceDetailsTabTable from \"./DeviceDetailsTabTable\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport { getSampleSender } from \"../api/SampleData\";\n\nexport default function DeviceDetailsPageContents(props) {\n  const { device } = props;\n  const tabs = [\"Activity Log\", \"Notes\"];\n\n  return (\n    <Grid container>\n      <Grid item xs={6}>\n        <DeviceDetailsTabTable tabs={[\"Overview\"]} device={device} />\n      </Grid>\n      <Grid item xs={6}>\n        <DeviceDetailsTabTable tabs={tabs} device={device} />\n      </Grid>\n    </Grid>\n  );\n}\nDeviceDetailsPageContents.defaultProps = {\n  device: getSampleSender()\n};\n\nDeviceDetailsPageContents.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo)\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Page from \"../general/Page\";\nimport DeviceDetailsPageContents from \"./DeviceDetailsPageContents\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport { getSampleSender } from \"../api/SampleData\";\n\nexport default function DeviceDetailsPage(props) {\n  const {\n    location: {\n      state: { device }\n    }\n  } = props;\n\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"My Devices\", \"/Devices\"],\n    [\"Device Details\", `/Devices/Details/${device.serialNumber}`]\n  ];\n\n  return (\n    <Page title=\"Device Details\" breadcrumbs={breadcrumbs}>\n      <DeviceDetailsPageContents device={device} />\n    </Page>\n  );\n}\n\nDeviceDetailsPage.defaultProps = {\n  location: { state: { device: getSampleSender() } }\n};\n\nDeviceDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      device: PropTypes.instanceOf(DeviceInfo)\n    })\n  })\n};\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport StreamsTableWrapper from \"./StreamsTableWrapper\";\nimport * as streamDataSource from \"../api/StreamApi\";\n\nexport default function StreamListPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"]\n  ];\n  return (\n    <Page title=\"Active Streams\" breadcrumbs={breadcrumbs}>\n      <StreamsTableWrapper dataSource={streamDataSource} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { InputAdornment, makeStyles, TextField } from \"@material-ui/core\";\n\nimport { Search } from \"@material-ui/icons/\";\n\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      search: {\n        position: \"relative\",\n        right: 0,\n        marginLeft: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n          marginLeft: theme.spacing(1),\n          width: \"auto\"\n        }\n      },\n      searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        alignItems: \"left\",\n        justifyContent: \"center\"\n      },\n      inputRoot: {\n        color: \"inherit\"\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"searchField\">\n          <TextField\n            placeholder=\"Search\"\n            InputProps={{\n              \"aria-label\": \"search\",\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {\" \"}\n                  <Search />\n                </InputAdornment>\n              )\n            }}\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n  MenuItem,\n  Select\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class SelectDeviceTableRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState((state) => ({ open: !state.open }));\n  }\n\n  render() {\n    const {\n      deviceDetails: { channels, name },\n      onChange\n    } = this.props;\n    const { open } = this.state;\n    return (\n      <>\n        <ListItem button dense onClick={this.onClick}>\n          <ListItemText primary={name} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding style={{ width: \"96%\" }}>\n            <ListItem divider>\n              <ListItemText secondary=\"Select Channel\" />\n              <Select defaultValue=\"\" onChange={onChange}>\n                {channels.map((channel) => {\n                  return (\n                    <MenuItem value={channel.id} key={`${name}_${channel.id}`}>\n                      {channel.port}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </ListItem>\n          </List>\n        </Collapse>\n      </>\n    );\n  }\n}\nSelectDeviceTableRow.propTypes = {\n  deviceDetails: PropTypes.instanceOf(DeviceInfo).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { List } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport SearchBar from \"./SearchBar\";\nimport SelectDeviceTableRow from \"./SelectDeviceTableRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function SelectDevicesTable(props) {\n  const { dataSource, name, onChange } = props;\n  return (\n    <>\n      <div className=\"subtitle\">{name}</div>\n      <SearchBar />\n      <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n        <List>\n          {dataSource.map((device) => {\n            return (\n              <SelectDeviceTableRow\n                deviceDetails={device}\n                key={device.serialNumber}\n                onChange={onChange}\n              />\n            );\n          })}\n        </List>\n      </div>\n    </>\n  );\n}\n\nSelectDevicesTable.propTypes = {\n  name: PropTypes.string.isRequired,\n  dataSource: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport SelectDevicesTable from \"./SelectDevicesTable\";\nimport StreamButton from \"../general/Buttons/StreamButton\";\n\nimport * as DeviceApi from \"../api/DeviceApi\";\nimport { createStream } from \"../api/StreamApi\";\n\nexport default class StreamingTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      selectedSenderID: \"\",\n      selectedReceiverID: \"\"\n    };\n\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n\n    this.onSenderSelected = this.onSenderSelected.bind(this);\n    this.onReceiverSelected = this.onReceiverSelected.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    DeviceApi.getSenders(this.handleSendersChange);\n    DeviceApi.getReceivers(this.handleReceiversChange);\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { selectedReceiverID, selectedSenderID } = this.state;\n    if (selectedReceiverID !== \"\" && selectedSenderID !== \"\") {\n      createStream(selectedReceiverID, selectedSenderID);\n    }\n  }\n\n  onSenderSelected(selectedSender) {\n    this.setState({\n      selectedSenderID: selectedSender.target.value\n    });\n  }\n\n  onReceiverSelected(selectedReceiver) {\n    this.setState({\n      selectedReceiverID: selectedReceiver.target.value\n    });\n  }\n\n  render() {\n    const { receivers, senders } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} id=\"createStreamForm\">\n          <Grid\n            container\n            spacing={2}\n            alignContent=\"center\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"SenderTable\">\n                <SelectDevicesTable\n                  name=\"Sender Devices\"\n                  dataSource={senders}\n                  onChange={this.onSenderSelected}\n                />\n              </div>\n            </Grid>\n            <Grid\n              container\n              item\n              xs={2}\n              id=\"TableStartStreamingBtn\"\n              justify=\"center\"\n              alignContent=\"center\"\n              alignItems=\"center\"\n              display=\"flex\"\n            >\n              <StreamButton id=\"StreamingStreamBtn\" type=\"submit\" />\n            </Grid>\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"ReceiverTable\">\n                <SelectDevicesTable\n                  name=\"Receiver Devices\"\n                  dataSource={receivers}\n                  onChange={this.onReceiverSelected}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </form>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport StreamingTable from \"./StreamingTable\";\n\nexport default function CreateStreamPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [\"New Stream\", \"/Streams/New\"]\n  ];\n  return (\n    <Page title=\"Create a Stream\" breadcrumbs={breadcrumbs}>\n      <StreamingTable />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LogsTable from \"./LogsTable\";\n\nexport default class LogsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.logsDataSource = props.logsDataSource;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.logsDataSource.getAllLogs().then(this.handleLogsChange);\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} />;\n  }\n}\n\nLogsTableWrapper.propTypes = {\n  logsDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\n\nimport LogsTableWrapper from \"./LogsTableWrapper\";\nimport Page from \"../general/Page\";\nimport * as logsDataSource from \"../api/LogApi\";\n\nexport default function LogListPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Logs\", \"/Logs\"]\n  ];\n\n  return (\n    <Page title=\"Logs\" breadcrumbs={breadcrumbs}>\n      <LogsTableWrapper logsDataSource={logsDataSource} />\n    </Page>\n  );\n}\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport DashboardButton from \"./dashboard/DashboardButton\";\nimport DashboardCard from \"./dashboard/DashboardCard\";\nimport Page from \"./Page\";\nimport { isAuthenticated } from \"../api/AuthenticationApi\";\n\nexport default function PathNotFoundPage() {\n  return (\n    <Page title=\"Error 404: Path not found\" breadcrumbs={[]}>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={6}>\n          <DashboardCard title=\"Sorry, that page doesn't exist!\">\n            {isAuthenticated() ? (\n              <DashboardButton href=\"/Home\">Go Home</DashboardButton>\n            ) : (\n              <DashboardButton href=\"/Login\">Go to Login</DashboardButton>\n            )}\n          </DashboardCard>\n        </Grid>\n      </Grid>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport ProtectedRoute from \"./ProtectedRoute\";\n\nimport LoginPage from \"../login/LoginPage\";\nimport HomePage from \"../homepage/HomePage\";\nimport DeviceListPage from \"../devicelist/DeviceListPage\";\nimport DeviceDetailsPage from \"../deviceDetailsPage/DeviceDetailsPage\";\nimport StreamListPage from \"../streamlist/StreamListPage\";\nimport CreateStreamPage from \"../createStream/CreateStreamPage\";\nimport LogListPage from \"../loglist/LogListPage\";\nimport PathNotFoundPage from \"../general/PathNotFoundPage\";\n\nexport default function AppRouter() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <ProtectedRoute path=\"/Login\" render={() => <LoginPage />} />\n        <ProtectedRoute\n          path=\"/Home\"\n          authenticationRequired\n          render={() => {\n            return <HomePage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Devices/Details/:serialNumber\"\n          authenticationRequired\n          render={(location) => {\n            return <DeviceDetailsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Devices\"\n          authenticationRequired\n          render={() => {\n            return <DeviceListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/New\"\n          authenticationRequired\n          render={() => {\n            return <CreateStreamPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams\"\n          authenticationRequired\n          render={() => {\n            return <StreamListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Logs\"\n          authenticationRequired\n          render={() => {\n            return <LogListPage />;\n          }}\n        />\n        <Route path=\"/\">\n          <PathNotFoundPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppRouter from \"./app/AppRouter\";\n\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n"],"sourceRoot":""}