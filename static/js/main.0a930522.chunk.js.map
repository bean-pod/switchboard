{"version":3,"sources":["general/HeaderBar.jsx","general/DynamicBreadcrumb.jsx","general/HomePage.jsx","general/Buttons/StreamButton.jsx","general/Buttons/AddDeviceButton.jsx","devicelist/TitleBox.jsx","devicelist/TabPanel.jsx","model/InputChannelInfo.js","model/OutputChannelInfo.js","devicelist/ChannelDetailsTableHead.jsx","devicelist/ChannelDetailsTableRow.jsx","devicelist/ChannelDetailsTable.jsx","general/StatusIndicator.jsx","devicelist/ActionMenu.jsx","model/DeviceInfo.js","devicelist/DevicesTable.jsx","general/VerticalTabs.jsx","devicelist/ContentsTable.jsx","DefaultMakeStylesTheme.js","devicelist/DeviceListPage.jsx","createStream/SearchBar.jsx","createStream/SelectDeviceTableRow.jsx","createStream/SelectDevicesTable.jsx","createStream/StreamingTable.jsx","model/HeadCell.js","streamlist/HeadCells.jsx","model/StreamInfo.js","streamlist/SingleStreamRow.jsx","streamlist/ActionButtons.jsx","streamlist/StreamsTable.jsx","streamlist/StreamList.jsx","createStream/StreamingPage.jsx","DeviceDetailsPage/DeviceDetailsConciseRow.jsx","DeviceDetailsPage/DeviceDetailsConciseTable.jsx","general/HorizontalTabPanel.jsx","DeviceDetailsPage/TabPanels/DeviceDetailsActivityPanel.jsx","DeviceDetailsPage/TabPanels/DeviceDetailsNotesPanel.jsx","DeviceDetailsPage/DeviceDetailsTabTable.jsx","api/SampleData.js","DeviceDetailsPage/DeviceDetailsPage.jsx","api/DeviceApi.js","model/ConvertDataFormat.js","api/StreamApi.js","index.jsx"],"names":["HeaderBar","props","classes","makeStyles","theme","menuButton","marginRight","spacing","className","AppBar","position","IconButton","edge","this","color","aria-label","Menu","to","activeClassName","exact","id","Notifications","AccountCircle","React","Component","DynamicBreadcrumb","breadcrumbs","i","Box","padding","Breadcrumbs","map","crumb","Link","href","Typography","HomePage","Container","StreamButton","type","StyledButton","withStyles","root","background","borderRadius","border","height","margin","label","textTransform","Button","SwapHoriz","AddDeviceButton","AddSharp","TitleBox","TabPanel","children","value","index","other","role","hidden","aria-labelledby","p","component","InputChannelInfo","name","port","decoder","OutputChannelInfo","encoder","ChannelDetailsTableHead","TableRow","TableCell","ChannelDetailsTableRow","channel","ChannelDetailsTable","channels","Table","style","maxWidth","TableHead","TableBody","StatusIndicator","status","getStatusStyle","ActionMenu","state","anchorElement","setAnchorElement","bind","handleClick","handleClose","event","currentTarget","element","setState","aria-controls","aria-haspopup","onClick","size","MoreVert","anchorEl","keepMounted","open","Boolean","onClose","anchorOrigin","horizontal","vertical","transformOrigin","MenuItem","DeviceInfo","serial","lastCommunication","publicIpAddress","privateIpAddress","displayName","extras","serialNumber","publicIp","privateIp","getColumnInfo","title","field","render","rowData","deviceInfo","pathname","device","lookup","Online","Pending","Error","Offline","filtering","sorting","align","export","DevicesTable","devices","TableContainer","maxHeight","components","Toolbar","columns","data","detailPanel","icon","ExpandMore","openIcon","ExpandLess","tooltip","variant","options","toolbar","search","exportButton","headerStyle","backgroundColor","fontWeight","actionsColumnIndex","draggable","icons","Filter","FilterList","Search","ResetSearch","Clear","SortArrow","ArrowDownward","Export","SaveAlt","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","VerticalTabs","handleChange","newTab","setValue","tabs","Tabs","onChange","orientation","Tab","getTabProps","ContentsTable","senders","receivers","dataSource","handleValueChange","handleSendersChange","handleReceiversChange","getSenders","getReceivers","tabIndex","display","flexGrow","defaultMakeStylesTheme","palette","paper","borderRight","divider","DeviceListPage","useStyles","SearchBar","right","marginLeft","breakpoints","up","width","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","TextField","placeholder","InputProps","startAdornment","InputAdornment","SelectDeviceTableRow","deviceDetails","ListItem","button","dense","ListItemText","primary","Collapse","in","timeout","unmountOnExit","List","disablePadding","secondary","Select","defaultValue","SelectDevicesTable","overflow","StreamingTable","selectedSenderID","selectedReceiverID","onSenderSelected","onReceiverSelected","handleSubmit","axios","post","process","inputChannelId","outputChannelId","preventDefault","selectedSender","target","selectedReceiver","onSubmit","Grid","container","alignContent","justify","item","xs","HeadCell","isNum","isNumeric","searchID","HeadCells","headcells","getHeadCellData","paddingLeft","headCell","TableSortLabel","StreamInfo","sender","receiver","date","time","SingleStreamRow","join","streamDetails","receiverName","senderName","Sync","Pause","Block","colSpan","rowExtras","StreamsTable","streams","handleStreamsChange","getAllStreams","stickyHeader","stream","StreamList","StreamingPage","deviceDataSource","streamDataSource","DeviceDetailsConciseRow","getPropertyDisplayName","createTableCellContents","createInnerTable","DeviceDetailsConciseTable","Paper","getConciseProperties","property","HorizontalTabPanel","DeviceDetailsActivityPanel","DeviceDetailsNotesPanel","DeviceDetailsTabTable","indicatorColor","textColor","tabInfo","getPanelContents","sampleInputChannels","InChannelInfo","sampleOutputChannels","OutChannelInfo","DeviceDetailsPage","location","getStatus","lastCommunicationString","lastCommunicationDate","Date","now","getTime","callback","get","then","output","catch","error","SampleData","input","convertToDataObject","databaseDevice","inputs","Promise","all","streamId","getStream","sampleSenders","sampleReceivers","resolve","reject","response","outputChannel","inputChannel","defaultProps","ReactDOM","StrictMode","path","DeviceApi","StreamApi","document","getElementById"],"mappings":"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hBiK,EAASnJ,OAAOb,iBAChBgK,EAASnJ,OAAOZ,YAChB4M,GAAU7C,EAASlK,mBACnBrC,EACA,CAAC,6CAKR8P,OAAM,SAACC,IFiCL,SAAsBL,GAwL3BA,EAvLwB,CACtB,IAAIvN,GACF,eACA,KACA,gBACA,UACA,aACA,SACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,aACA,QACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,aACA,UACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,aACA,UACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,aACA,SACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,aACA,QACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,aACA,UACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,aACA,UACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,aACA,SACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,cACA,SACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,cACA,QACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,cACA,UACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,cACA,UACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,cACA,SACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,cACA,QACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,cACA,UACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,cACA,UACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,cACA,SACA2M,GACArM,MEpNAuN,CAAwBN,MC5FvB,SAASQ,GAAoBC,GAClC,OAAO,IAAIhO,GACTgO,EAAezN,aACfyN,EAAe9N,kBACf8N,EAAe/M,OAAOd,gBACtB6N,EAAe/M,OAAOb,iBACtB4N,EAAe/M,OAAOZ,YACtB2N,EAAe/M,OAAO7C,OACtB4P,EAAeC,QCLZ,SAAS7C,GAAcmC,GAC5B/E,KACGgF,IAAI9E,qDACJ+E,MAAK,SAACvC,GACLgD,QAAQC,IACNjD,EAAQhJ,KAAKnH,KAAI,SAACqT,GAChB,OAAOC,GAAUD,OAEnBX,KAAKF,MAERI,OAAM,SAACC,IJ0SL,SAAuBL,GAC5B,IAAMe,EAAgB,CACpB,IAAItO,GACF,eACA,KACA,gBACA,UACA,WACA,SACA6M,GACAvM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,WACA,QACA6M,GACAvM,KAGEiO,EAAkB,CACtB,IAAIvO,GACF,eACA,KACA,gBACA,UACA,aACA,SACA2M,GACArM,IAEF,IAAIN,GACF,eACA,KACA,gBACA,UACA,aACA,QACA2M,GACArM,KAgBJiN,EAZsB,CACpB,IAAIrD,GAAW,EAAGoE,EAAc,GAAIC,EAAgB,GAAI,CACtD,sCAEF,IAAIrE,GAAW,EAAGoE,EAAc,GAAIC,EAAgB,GAAI,CACtD,sCAEF,IAAIrE,GAAW,EAAGoE,EAAc,GAAIC,EAAgB,GAAI,CACtD,wCI/VAV,CAAyBN,MAIxB,SAASc,GAAUD,GACxB,OAAO,IAAIF,SAAQ,SAACM,EAASC,GAC3BjG,KACGgF,IADH,UACU9E,oDADV,YAC0C0F,IACvCX,MAAK,SAACiB,GACL,IAAMpD,EAASoD,EAASxM,KACxBsM,EACE,IAAItE,GACFoB,EAAOlR,GACP2T,GAAoBzC,EAAOqD,cAAcrR,SACzCyQ,GAAoBzC,EAAOsD,aAAaxR,SACxC,CAAC,0CAINuQ,MAAMc,MHkBb1B,GAAkB8B,aAAe,CAC/B7B,SAAU,CAAEzO,MAAO,CAAE0C,OD6Dd,IAAIjB,GACT,eACA,KACA,UACA,WACA,SACA6M,GACAvM,OK7GJwO,IAASjO,OACP,cAAC,IAAMkO,WAAP,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO5U,OAAK,EAAC6U,KAAM,CAAC,IAAK,SAAUhS,UAAW5B,IAC9C,cAAC,IAAD,CACEjB,OAAK,EACL6U,KAAK,WACLnO,OAAQ,SAAC5H,GAAD,OACN,cAAC,GAAD,2BAAoBA,GAApB,IAA2B+L,WAAYiK,QAG3C,cAAC,IAAD,CACE9U,OAAK,EACL6U,KAAK,aACLnO,OAAQ,SAAC5H,GAAD,OACN,cAAC,GAAD,2BACMA,GADN,IAEEwS,iBAAkBwD,EAClBvD,iBAAkBwD,QAIxB,cAAC,IAAD,CACE/U,OAAK,EACL6U,KAAK,6BACLhS,UAAW+P,aAKnBoC,SAASC,eAAe,W","file":"static/js/main.0a930522.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\nimport { AccountCircle, Menu, Notifications } from \"@material-ui/icons/\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default class HeaderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      menuButton: {\n        marginRight: theme.spacing(2)\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"headerBar\">\n          <AppBar position=\"static\">\n            <Toolbar className=\"darkGrey\">\n              <IconButton\n                edge=\"start\"\n                className={this.classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n              >\n                <Menu />\n              </IconButton>\n              <div className=\"headerTitle\">\n                <NavLink\n                  to=\"/\"\n                  activeClassName=\"headerTitle\"\n                  className=\"headerTitle\"\n                  exact\n                >\n                  Switchboard\n                </NavLink>\n              </div>\n              <IconButton id=\"notifBtn\" color=\"inherit\">\n                <Notifications />\n              </IconButton>\n              <IconButton id=\"acctBtn\" color=\"inherit\">\n                <AccountCircle />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Box, Breadcrumbs, Link, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default class DynamicBreadcrumb extends React.Component {\n  render() {\n    const { breadcrumbs } = this.props;\n    let i = 0;\n    return (\n      <Box padding=\"2em 0em 0em 1em\">\n        <Breadcrumbs aria-label=\"breadcrumb\" id=\"breadcrumbParent\">\n          {breadcrumbs.map((crumb) => {\n            return (\n              <Link\n                color=\"inherit\"\n                href={crumb[1]}\n                id={`breadcrumb${i}`}\n                key={`breadcrumb${i++}`}\n              >\n                <Typography color=\"textPrimary\">{crumb[0]}</Typography>\n              </Link>\n            );\n          })}\n        </Breadcrumbs>\n      </Box>\n    );\n  }\n}\nDynamicBreadcrumb.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired\n};\n","import React from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport DynamicBreadcrumb from \"./DynamicBreadcrumb\";\n\nexport default class HomePage extends React.Component {\n  render() {\n    return (\n      <Container>\n        <DynamicBreadcrumb\n          breadcrumbs={[\n            [\"Home\", \"\"],\n            [\"My Devices\", \"Devices\"],\n            [\"Streaming\", \"Streaming\"]\n          ]}\n        />\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { SwapHoriz } from \"@material-ui/icons/\";\n\nexport default class StreamButton extends React.Component {\n  render() {\n    const { id, type } = this.props;\n    const StyledButton = withStyles({\n      root: {\n        background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n        borderRadius: 90,\n        border: 0,\n        color: \"white\",\n        height: 40,\n        padding: \"0 5px\",\n        margin: \"1em\"\n      },\n      label: {\n        textTransform: \"\"\n      }\n    })(Button);\n\n    return (\n      <StyledButton id={id} type={type}>\n        <div className=\"buttonText\">\n          <SwapHoriz />\n          Stream\n        </div>\n      </StyledButton>\n    );\n  }\n}\nStreamButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport { AddSharp } from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\n\nexport default class AddDeviceButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.id = props.id;\n  }\n\n  render() {\n    const StyledButton = withStyles({\n      root: {\n        background: \"linear-gradient(45deg, #01b2fe 30%, #01b2fe 90%)\",\n        borderRadius: 90,\n        border: 0,\n        color: \"white\",\n        height: 40,\n        padding: \"0px\"\n      },\n      label: {\n        textTransform: \"\"\n      }\n    })(Button);\n\n    return (\n      <StyledButton id={this.id}>\n        <div className=\"buttonText\">\n          <AddSharp />\n          Add Device\n        </div>\n      </StyledButton>\n    );\n  }\n}\nAddDeviceButton.propTypes = {\n  id: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nimport StreamButton from \"../general/Buttons/StreamButton\";\nimport AddDeviceButton from \"../general/Buttons/AddDeviceButton\";\n\nexport default class TitleBox extends React.Component {\n  render() {\n    return (\n      <>\n        <Box className=\"flexContents headerAreaNoUnderline\">\n          <div className=\"title\">My Devices</div>\n          <div className=\"alignRightFloat\" spacing={2}>\n            <NavLink\n              to=\"/Streaming\"\n              activeClassName=\"hideLinkStyle\"\n              className=\"hideLinkStyle\"\n              exact\n            >\n              <StreamButton id=\"DeviceListStreamBtn\" type=\"submit\" />\n            </NavLink>\n            <AddDeviceButton id=\"DeviceListAddDevBtn\" />\n          </div>\n        </Box>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default function TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={0}>\n          <Typography component=\"span\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.element.isRequired,\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired\n};\n","export default class InputChannelInfo {\n  constructor(id, name, port, decoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.decoder = decoder;\n  }\n}\n","export default class OutputChannelInfo {\n  constructor(id, name, port, encoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.encoder = encoder;\n  }\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function ChannelDetailsTableHead() {\n  return (\n    <TableRow>\n      <TableCell className=\"lightGrey\">ID</TableCell>\n      <TableCell className=\"lightGrey\">Name</TableCell>\n      <TableCell className=\"lightGrey\">Port</TableCell>\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\n\nexport default function ChannelDetailsTableRow(props) {\n  const {\n    channel: { id, name, port }\n  } = props;\n  return (\n    <TableRow>\n      <TableCell>{id}</TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{port}</TableCell>\n    </TableRow>\n  );\n}\nChannelDetailsTableRow.propTypes = {\n  channel: PropTypes.oneOfType([\n    PropTypes.instanceOf(InputChannelInfo),\n    PropTypes.instanceOf(OutputChannelInfo)\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Table, TableBody, TableHead } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport ChannelDetailsTableHead from \"./ChannelDetailsTableHead\";\nimport ChannelDetailsTableRow from \"./ChannelDetailsTableRow\";\n\nexport default function ChannelDetailsTable(props) {\n  const { channels } = props;\n  return (\n    <Table style={{ margin: \"1em\", maxWidth: \"98%\" }} className=\"flexContents\">\n      <TableHead>\n        <ChannelDetailsTableHead />\n      </TableHead>\n      <TableBody>\n        {channels.map((channel) => {\n          return (\n            <ChannelDetailsTableRow channel={channel} key={channel.name} />\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\nChannelDetailsTable.propTypes = {\n  channels: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.instanceOf(InputChannelInfo),\n      PropTypes.instanceOf(OutputChannelInfo)\n    ])\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class StatusIndicator extends React.Component {\n  getStatusStyle() {\n    const { status } = this.props;\n    switch (status) {\n      case \"Online\":\n        return \"green statusIndicatorBody statusTextOnline \";\n      case \"Pending\":\n        return \"yellow statusIndicatorBody statusTextOnline\";\n      case \"Error\":\n        return \"red statusIndicatorBody statusTextOnline\";\n      default:\n        return \"lightGrey statusIndicatorBody statusTextOffline\";\n    }\n  }\n\n  render() {\n    const { status } = this.props;\n    return <div className={this.getStatusStyle()}>{status}</div>;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.oneOf([\"Online\", \"Offline\", \"Error\", \"Pending\"]).isRequired\n};\n","import React from \"react\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\n\nimport { MoreVert } from \"@material-ui/icons/\";\n\nexport default class ActionMenu extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      anchorElement: null\n    };\n\n    this.setAnchorElement = this.setAnchorElement.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick(event) {\n    this.setAnchorElement(event.currentTarget);\n  }\n\n  handleClose() {\n    this.setAnchorElement(null);\n  }\n\n  setAnchorElement(element) {\n    this.setState({\n      anchorElement: element\n    });\n  }\n\n  render() {\n    const { anchorElement } = this.state;\n    return (\n      <>\n        <IconButton\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n          size=\"small\"\n        >\n          <MoreVert />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorElement}\n          keepMounted\n          open={Boolean(anchorElement)}\n          onClose={this.handleClose}\n          anchorOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n          transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        >\n          <MenuItem onClick={this.handleClose}>View details</MenuItem>\n          <MenuItem onClick={this.handleClose}>\n            Start stream with this as receiver\n          </MenuItem>\n          <MenuItem onClick={this.handleClose}>\n            <span className=\"warningText\">Delete</span>\n          </MenuItem>\n        </Menu>\n      </>\n    );\n  }\n}\n","export default class DeviceInfo {\n  constructor(\n    serial,\n    lastCommunication,\n    publicIpAddress,\n    privateIpAddress,\n    displayName,\n    status,\n    channels,\n    extras\n  ) {\n    this.serialNumber = serial;\n    this.lastCommunication = lastCommunication;\n    this.publicIp = publicIpAddress;\n    this.privateIp = privateIpAddress;\n    this.name = displayName;\n    this.status = status;\n    this.channels = channels;\n    this.extras = extras;\n  }\n\n  static getConciseProperties() {\n    return [\n      \"name\",\n      \"serialNumber\",\n      \"status\",\n      \"publicIp\",\n      \"privateIp\",\n      \"channels\"\n    ];\n  }\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  FilterList,\n  Search,\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable, { MTableToolbar } from \"material-table\";\n\nimport ChannelDetailsTable from \"./ChannelDetailsTable\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport ActionMenu from \"./ActionMenu\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nfunction getComponents() {\n  return {\n    /*  eslint-disable react/jsx-props-no-spreading */\n    Toolbar: (props) => (\n      <div className=\"lightestGrey\">\n        <MTableToolbar {...props} />\n      </div>\n    )\n  };\n}\n\nfunction buildNavlink(deviceInfo) {\n  return (\n    <NavLink\n      to={{\n        pathname: `/Devices/Details/${deviceInfo.name}`,\n        state: { device: deviceInfo }\n      }}\n    >\n      {deviceInfo.name}\n    </NavLink>\n  );\n}\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"Name\",\n      field: \"name\",\n      render: (rowData) => buildNavlink(rowData)\n    },\n    {\n      title: \"Serial Number\",\n      field: \"serialNumber\"\n    },\n    {\n      title: \"Status\",\n      field: \"status\",\n      render: (rowData) => <StatusIndicator status={rowData.status} />,\n      lookup: {\n        Online: \"Online\",\n        Pending: \"Pending\",\n        Error: \"Error\",\n        Offline: \"Offline\"\n      }\n    },\n    {\n      title: \"Private IP Address\",\n      field: \"privateIp\"\n    },\n    {\n      title: \"Public IP Address\",\n      field: \"publicIp\"\n    },\n    {\n      title: \"Actions\",\n      field: \"action\",\n      filtering: false,\n      sorting: false,\n      render: () => <ActionMenu />,\n      align: \"center\",\n      export: false\n    }\n  ];\n}\n\nfunction getDetailPanel() {\n  return [\n    {\n      icon: ExpandMore,\n      openIcon: ExpandLess,\n      tooltip: \"Show Device Details\",\n      render: (rowData) => {\n        return (\n          <div className=\"lightestGrey\">\n            <Box margin={2}>\n              <Typography variant=\"h6\">Channels</Typography>\n              <ChannelDetailsTable channels={rowData.channels} />\n            </Box>\n          </div>\n        );\n      }\n    }\n  ];\n}\n\nfunction getOptions() {\n  return {\n    toolbar: true,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n      // position: 'sticky', top: 0\n    },\n    // maxBodyHeight: '650px',\n    // above lines commented out b/c scrollbar bug, see: https://github.com/mbrn/material-table/issues/780\n    actionsColumnIndex: -1,\n    filtering: true,\n    draggable: false\n  };\n}\n\nfunction getIcons() {\n  return {\n    Filter: FilterList,\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default class DevicesTable extends React.Component {\n  render() {\n    const { title, devices } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer style={{ maxHeight: 570 }}>\n            <MaterialTable\n              title={title}\n              components={getComponents()}\n              columns={getColumnInfo()}\n              data={devices}\n              detailPanel={getDetailPanel()}\n              options={getOptions()}\n              icons={getIcons()}\n            />\n          </TableContainer>\n        </Box>\n      </>\n    );\n  }\n}\n\nDevicesTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  devices: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport { Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default class VerticalTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event, newTab) {\n    const { setValue } = this.props;\n    setValue(newTab);\n  }\n\n  getTabProps(index) {\n    return {\n      id: `vertical-tab-${index}`,\n      \"aria-controls\": `vertical-tabpanel-${index}`\n    };\n  }\n\n  render() {\n    const {\n      value,\n      classes: { tabs }\n    } = this.props;\n    return (\n      <>\n        <Tabs\n          value={value}\n          onChange={this.handleChange}\n          aria-label=\"Vertical tabs\"\n          className={`${tabs} lightGrey blackFont flexContents`}\n          orientation=\"vertical\"\n          variant=\"scrollable\"\n        >\n          <Tab label=\"Senders\" {...this.getTabProps(0)} />\n          <Tab label=\"Receivers\" {...this.getTabProps(1)} />\n        </Tabs>\n      </>\n    );\n  }\n}\nVerticalTabs.propTypes = {\n  setValue: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TabPanel from \"./TabPanel\";\nimport DevicesTable from \"./DevicesTable\";\nimport VerticalTabs from \"../general/VerticalTabs\";\n\nexport default class ContentsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      value: 0\n    };\n    this.dataSource = props.dataSource;\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getSenders(this.handleSendersChange);\n    this.dataSource.getReceivers(this.handleReceiversChange);\n  }\n\n  handleValueChange(tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  render() {\n    const { receivers, senders, value } = this.state;\n    const { classes } = this.props;\n    return (\n      <>\n        <Box\n          style={{\n            display: \"flex\",\n            flexGrow: 1\n          }}\n        >\n          <VerticalTabs\n            value={value}\n            setValue={this.handleValueChange}\n            classes={classes}\n          />\n          <TabPanel value={value} index={0} className=\"lightGreyBorder\">\n            <DevicesTable devices={senders} title=\"List of Senders\" />\n          </TabPanel>\n          <TabPanel value={value} index={1} className=\"lightGreyBorder\">\n            <DevicesTable devices={receivers} title=\"List of Receivers\" />\n          </TabPanel>\n        </Box>\n      </>\n    );\n  }\n}\nContentsTable.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default function defaultMakeStylesTheme() {\n  return makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    },\n    tabs: {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }));\n}\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport TitleBox from \"./TitleBox\";\nimport ContentsTable from \"./ContentsTable\";\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport * as useStyles from \"../DefaultMakeStylesTheme\";\n\nexport default class DeviceListPage extends React.Component {\n  render() {\n    const { dataSource } = this.props;\n    return (\n      <Container>\n        <DynamicBreadcrumb\n          breadcrumbs={[\n            [\"Home\", \"/\"],\n            [\"My Devices\", \"Devices\"]\n          ]}\n        />\n        <Box className=\"areaUnderBreadcrumbs\">\n          <TitleBox />\n          <ContentsTable classes={useStyles} dataSource={dataSource} />\n        </Box>\n      </Container>\n    );\n  }\n}\nDeviceListPage.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { InputAdornment, makeStyles, TextField } from \"@material-ui/core\";\n\nimport { Search } from \"@material-ui/icons/\";\n\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      search: {\n        position: \"relative\",\n        right: 0,\n        marginLeft: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n          marginLeft: theme.spacing(1),\n          width: \"auto\"\n        }\n      },\n      searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        alignItems: \"left\",\n        justifyContent: \"center\"\n      },\n      inputRoot: {\n        color: \"inherit\"\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"searchField\">\n          <TextField\n            placeholder=\"Search\"\n            InputProps={{\n              \"aria-label\": \"search\",\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {\" \"}\n                  <Search />\n                </InputAdornment>\n              )\n            }}\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n  MenuItem,\n  Select\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class SelectDeviceTableRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState((state) => ({ open: !state.open }));\n  }\n\n  render() {\n    const {\n      deviceDetails: { channels, name },\n      onChange\n    } = this.props;\n    const { open } = this.state;\n    return (\n      <>\n        <ListItem button dense onClick={this.onClick}>\n          <ListItemText primary={name} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding style={{ width: \"96%\" }}>\n            <ListItem divider>\n              <ListItemText secondary=\"Select Channel\" />\n              <Select defaultValue=\"\" onChange={onChange}>\n                {channels.map((channel) => {\n                  return (\n                    <MenuItem value={channel.id} key={`${name}_${channel.id}`}>\n                      {channel.port}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </ListItem>\n          </List>\n        </Collapse>\n      </>\n    );\n  }\n}\nSelectDeviceTableRow.propTypes = {\n  deviceDetails: PropTypes.instanceOf(DeviceInfo).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { List } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport SearchBar from \"./SearchBar\";\nimport SelectDeviceTableRow from \"./SelectDeviceTableRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class SelectDevicesTable extends React.Component {\n  render() {\n    const { dataSource, name, onChange } = this.props;\n    return (\n      <>\n        <div className=\"subtitle\">{name}</div>\n        <SearchBar />\n        <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n          <List>\n            {dataSource.map((device) => {\n              return (\n                <SelectDeviceTableRow\n                  deviceDetails={device}\n                  key={device.serialNumber}\n                  onChange={onChange}\n                />\n              );\n            })}\n          </List>\n        </div>\n      </>\n    );\n  }\n}\nSelectDevicesTable.propTypes = {\n  name: PropTypes.string.isRequired,\n  dataSource: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\nimport PropTypes from \"prop-types\";\nimport SelectDevicesTable from \"./SelectDevicesTable\";\nimport StreamButton from \"../general/Buttons/StreamButton\";\n\nexport default class StreamingTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      selectedSenderID: \"\",\n      selectedReceiverID: \"\"\n    };\n\n    this.dataSource = props.dataSource;\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n\n    this.onSenderSelected = this.onSenderSelected.bind(this);\n    this.onReceiverSelected = this.onReceiverSelected.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getSenders(this.handleSendersChange);\n    this.dataSource.getReceivers(this.handleReceiversChange);\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  handleSubmit(event) {\n    const { selectedReceiverID, selectedSenderID } = this.state;\n    if (selectedReceiverID !== \"\" && selectedSenderID !== \"\") {\n      axios.post(process.env.REACT_APP_STREAM, {\n        inputChannelId: selectedReceiverID,\n        outputChannelId: selectedSenderID\n      });\n    }\n    event.preventDefault();\n  }\n\n  onSenderSelected(selectedSender) {\n    this.setState({\n      selectedSenderID: selectedSender.target.value\n    });\n  }\n\n  onReceiverSelected(selectedReceiver) {\n    this.setState({\n      selectedReceiverID: selectedReceiver.target.value\n    });\n  }\n\n  render() {\n    const { receivers, senders } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} id=\"createStreamForm\">\n          <Grid\n            container\n            spacing={2}\n            alignContent=\"center\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"SenderTable\">\n                <SelectDevicesTable\n                  name=\"Sender Devices\"\n                  dataSource={senders}\n                  onChange={this.onSenderSelected}\n                />\n              </div>\n            </Grid>\n            <Grid\n              container\n              item\n              xs={2}\n              id=\"TableStartStreamingBtn\"\n              justify=\"center\"\n              alignContent=\"center\"\n              alignItems=\"center\"\n              display=\"flex\"\n            >\n              <StreamButton id=\"StreamingStreamBtn\" type=\"submit\" />\n            </Grid>\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"ReceiverTable\">\n                <SelectDevicesTable\n                  name=\"Receiver Devices\"\n                  dataSource={receivers}\n                  onChange={this.onReceiverSelected}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </form>\n      </>\n    );\n  }\n}\nStreamingTable.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","export default class HeadCell {\n  constructor(id, label, isNum, padding) {\n    this.id = id;\n    this.label = label;\n    this.isNumeric = isNum;\n    this.searchID = `${id}Search`;\n    this.padding = padding;\n  }\n}\n","import React from \"react\";\nimport { TableCell, TableSortLabel, Typography } from \"@material-ui/core\";\nimport HeadCell from \"../model/HeadCell\";\n\nexport default class HeadCells extends React.Component {\n  constructor(props) {\n    super(props);\n    this.headcells = this.getHeadCellData();\n  }\n\n  getHeadCellData() {\n    return [\n      new HeadCell(\"id\", \"ID\", true, true),\n      new HeadCell(\"date\", \"Date\", true, true),\n      new HeadCell(\"sendername\", \"Sender\", false, true),\n      new HeadCell(\"receivername\", \"Receiver\", false, true),\n      new HeadCell(\"status\", \"Status\", false, true),\n      new HeadCell(\"type\", \"Type\", false, true),\n      new HeadCell(\"timeelapsed\", \"Time Elapsed\", true, true)\n    ];\n  }\n\n  render() {\n    return (\n      <>\n        <TableCell\n          className=\"tableHeadCell lightestGrey\"\n          style={{ width: 1, padding: 0, paddingLeft: 5 }}\n        />\n\n        {this.headcells.map((headCell) => (\n          <TableCell\n            className=\"tableHeadCell lightestGrey\"\n            key={headCell.id}\n            padding={headCell.padding ? \"default\" : \"none\"}\n          >\n            <TableSortLabel>\n              <Typography component=\"span\" variant=\"caption\">\n                {headCell.label}\n              </Typography>\n            </TableSortLabel>\n          </TableCell>\n        ))}\n        <TableCell className=\"tableHeadCell lightestGrey\" align=\"center\">\n          <Typography variant=\"caption\">Actions</Typography>\n        </TableCell>\n      </>\n    );\n  }\n}\n","export default class StreamInfo {\n  // to be used once backend has date, status, type, and time fields\n  // constructor(id, date, sender, receiver, status, type, time, extras) {\n  //     this.id = id;\n  //     this.date = date;\n  //     this.sender = sender;\n  //     this.receiver = receiver;\n  //     this.status = status;\n  //     this.type = type;\n  //     this.time = time;\n  //     this.extras = extras;\n  // }\n\n  // temporary with static fields until backend is up to snuff\n  constructor(id, sender, receiver, extras) {\n    this.id = id;\n    this.date = \"2020-10-31T08:15:30\";\n    this.sender = sender;\n    this.receiver = receiver;\n    this.status = \"Online\";\n    this.type = \"Type 1\";\n    this.time = \"00:34:44\";\n    this.extras = extras;\n  }\n}\n","import React from \"react\";\nimport {\n  Box,\n  Collapse,\n  IconButton,\n  TableCell,\n  TableRow,\n  Typography\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons/\";\n\nimport PropTypes from \"prop-types\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport ActionButtons from \"./ActionButtons\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default class SingleStreamRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n  }\n\n  rowExtras(extras) {\n    return extras.join(\" \");\n  }\n\n  render() {\n    const {\n      streamDetails: {\n        date,\n        id,\n        receiver: { name: receiverName },\n        sender: { name: senderName },\n        status,\n        type,\n        time,\n        extras\n      }\n    } = this.props;\n    const { open } = this.state;\n    return (\n      <>\n        <TableRow key={id} className=\"singleStreamRow\">\n          <TableCell\n            className=\"tableCell dropdownButton\"\n            style={{ width: 1, padding: 0, paddingLeft: 5 }}\n          >\n            <IconButton onClick={() => this.setState({ open: !open })}>\n              {open ? <ExpandLess /> : <ExpandMore />}\n            </IconButton>\n          </TableCell>\n          <TableCell className=\"tableCell numeric\">{id}</TableCell>\n          <TableCell className=\"tableCell\">{date}</TableCell>\n          <TableCell className=\"tableCell\">{senderName}</TableCell>\n          <TableCell className=\"tableCell\">{receiverName}</TableCell>\n          <TableCell className=\"tableCell\">\n            <StatusIndicator status={status} />\n          </TableCell>\n          <TableCell className=\"tableCell\">{type}</TableCell>\n          <TableCell className=\"tableCell\">{time}</TableCell>\n          <TableCell className=\"tableCell actionButtons\">\n            {ActionButtons()}\n          </TableCell>\n        </TableRow>\n        <TableRow className=\"streamDetails\">\n          <TableCell className=\"chevronText lightestGrey\" colSpan={9}>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n              <Box margin={2}>\n                <Typography variant=\"caption\">\n                  {this.rowExtras(extras)}\n                </Typography>\n              </Box>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n      </>\n    );\n  }\n}\nSingleStreamRow.propTypes = {\n  streamDetails: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","import React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Block, Pause, Sync } from \"@material-ui/icons\";\n\nexport default function ActionButtons() {\n  return (\n    <>\n      <div align=\"center\">\n        <IconButton>\n          <Sync />\n        </IconButton>\n        <IconButton>\n          <Pause />\n        </IconButton>\n        <IconButton>\n          <Block />\n        </IconButton>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport HeadCells from \"./HeadCells\";\nimport SingleStreamRow from \"./SingleStreamRow\";\n\nexport default class StreamsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: []\n    };\n    this.dataSource = props.dataSource;\n    this.handleStreamsChange = this.handleStreamsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getAllStreams(this.handleStreamsChange);\n  }\n\n  handleStreamsChange(streams) {\n    this.setState({\n      streams\n    });\n  }\n\n  render() {\n    const { streams } = this.state;\n    return (\n      <>\n        <Box>\n          <TableContainer style={{ maxHeight: 450 }}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  <HeadCells />\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {streams.map((stream) => {\n                  return (\n                    <SingleStreamRow key={stream.id} streamDetails={stream} />\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </>\n    );\n  }\n}\nStreamsTable.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport * as useStyles from \"../DefaultMakeStylesTheme\";\nimport StreamsTable from \"./StreamsTable\";\n\nexport default function StreamList(props) {\n  const { dataSource } = props;\n  return (\n    <Container>\n      <Box className=\"headerAreaUnderline\">\n        <div className=\"title\">Current Streams</div>\n      </Box>\n      <StreamsTable classes={useStyles} dataSource={dataSource} />\n    </Container>\n  );\n}\nStreamList.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport StreamingTable from \"./StreamingTable\";\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport StreamList from \"../streamlist/StreamList\";\n\nexport default class StreamingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dataSource = props.deviceDataSource;\n  }\n\n  render() {\n    const { deviceDataSource, streamDataSource } = this.props;\n    return (\n      <Container>\n        <DynamicBreadcrumb\n          breadcrumbs={[\n            [\"Home\", \"/\"],\n            [\"My Devices\", \"Devices\"],\n            [\"Streaming\", \"Streaming\"]\n          ]}\n        />\n        <Box className=\"areaUnderBreadcrumbs\">\n          <Box className=\"flexContents headerAreaUnderline\">\n            <div className=\"title\">Streaming</div>\n          </Box>\n          <div id=\"StreamingTable\">\n            <StreamingTable dataSource={deviceDataSource} />\n          </div>\n        </Box>\n        <Box>\n          <StreamList dataSource={streamDataSource} />\n        </Box>\n      </Container>\n    );\n  }\n}\nStreamingPage.propTypes = {\n  deviceDataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  streamDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\nimport { TableContainer, TableCell, TableRow } from \"@material-ui/core\";\nimport ChannelDetailsTable from \"../devicelist/ChannelDetailsTable\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport StatusIndicator from \"../general/StatusIndicator\";\n\nexport default class DeviceDetailsConciseRow extends React.Component {\n  static getPropertyDisplayName(name) {\n    switch (name) {\n      case \"serialNumber\":\n        return \"Serial Number\";\n      case \"lastCommunication\":\n        return \"Last Communication\";\n      case \"privateIp\":\n        return \"Private IP Address\";\n      case \"publicIp\":\n        return \"Public IP Address\";\n      case \"name\":\n        return \"Name\";\n      case \"status\":\n        return \"Status\";\n      case \"channels\":\n        return \"Channels\";\n      default:\n        return \"Additional Info\";\n    }\n  }\n\n  static createInnerTable(value) {\n    return (\n      <TableContainer>\n        <ChannelDetailsTable channels={value} />\n      </TableContainer>\n    );\n  }\n\n  static createTableCellContents(name, value) {\n    switch (name) {\n      case \"channels\":\n        return DeviceDetailsConciseRow.createInnerTable(value);\n      case \"status\":\n        return <StatusIndicator status={value} />;\n      default:\n        return value;\n    }\n  }\n\n  render() {\n    const { name, value } = this.props;\n    return (\n      <>\n        <TableRow>\n          <TableCell>\n            {DeviceDetailsConciseRow.getPropertyDisplayName(name)}\n          </TableCell>\n          <TableCell align=\"center\">\n            {DeviceDetailsConciseRow.createTableCellContents(name, value)}\n          </TableCell>\n        </TableRow>\n      </>\n    );\n  }\n}\n\nDeviceDetailsConciseRow.propTypes = {\n  name: Proptypes.string.isRequired,\n  value: Proptypes.arrayOf(\n    Proptypes.oneOfType([InputChannelInfo, OutputChannelInfo])\n  ).isRequired\n};\n","import React from \"react\";\nimport { TableContainer, Table, TableBody, Paper } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceDetailsConciseRow from \"./DeviceDetailsConciseRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function DeviceDetailsConciseTable(props) {\n  const { device } = props;\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableBody>\n            {DeviceInfo.getConciseProperties().map((property) => (\n              <DeviceDetailsConciseRow\n                name={property}\n                value={device[property]}\n                key={`device_${property}`}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nDeviceDetailsConciseTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nexport default function HorizontalTabPanel(props) {\n  const { value, index, children } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </div>\n  );\n}\n\nHorizontalTabPanel.propTypes = {\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import { Container } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function DeviceDetailsActivityPanel() {\n  return <Container>TODO: Design activity log</Container>;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"@material-ui/core\";\n\nexport default function DeviceDetailsNotesPanel(props) {\n  const { extras } = props;\n  return <Container>{extras}</Container>;\n}\n\nDeviceDetailsNotesPanel.propTypes = {\n  extras: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport { Container, Paper, Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport HorizontalTabPanel from \"../general/HorizontalTabPanel\";\nimport DeviceDetailsConciseTable from \"./DeviceDetailsConciseTable\";\nimport DeviceDetailsActivityPanel from \"./TabPanels/DeviceDetailsActivityPanel\";\nimport DeviceDetailsNotesPanel from \"./TabPanels/DeviceDetailsNotesPanel\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class DeviceDetailsTabTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleValueChange(event, tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  static getPanelContents(tabInfo, device) {\n    switch (tabInfo) {\n      case \"Overview\":\n        return <DeviceDetailsConciseTable device={device} />;\n      case \"Activity Log\":\n        return <DeviceDetailsActivityPanel device={device} />;\n      case \"Notes\":\n        return <DeviceDetailsNotesPanel extras={device.extras} />;\n\n      default:\n        return <div>Whoops not a valid value</div>;\n    }\n  }\n\n  render() {\n    const { value } = this.state;\n    const { device, tabs } = this.props;\n    return (\n      <Container component={Paper}>\n        <Tabs\n          value={value}\n          onChange={this.handleValueChange}\n          className=\"lightGrey blackFont flexContents\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"full width tabs example\"\n        >\n          {tabs.map((tabInfo) => {\n            return <Tab label={tabInfo} key={tabInfo} />;\n          })}\n        </Tabs>\n        {tabs.map((tabInfo, index) => {\n          return (\n            <HorizontalTabPanel\n              value={value}\n              key={tabInfo}\n              index={index}\n              device={device}\n            >\n              {DeviceDetailsTabTable.getPanelContents(tabInfo, device)}\n            </HorizontalTabPanel>\n          );\n        })}\n      </Container>\n    );\n  }\n}\nDeviceDetailsTabTable.propTypes = {\n  tabs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import DeviceInfo from \"../model/DeviceInfo\";\nimport OutChannelInfo from \"../model/OutputChannelInfo\";\nimport InChannelInfo from \"../model/InputChannelInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nconst extras = [\"Additional Device details go here\"];\nconst sampleInputChannels = [\n  new InChannelInfo(1, \"Input ch 1\", 500, null),\n  new InChannelInfo(2, \"Input ch 2\", 456, null),\n  new InChannelInfo(3, \"Input ch 3\", 800, null)\n];\nconst sampleOutputChannels = [\n  new OutChannelInfo(1, \"Output ch 1\", 500, null),\n  new OutChannelInfo(2, \"Output ch 2\", 456, null),\n  new OutChannelInfo(3, \"Output ch 3\", 800, null)\n];\n\nexport function getSenders(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:30:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 3\",\n      \"Offline\",\n      sampleOutputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:40:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 4\",\n      \"Pending\",\n      sampleOutputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:50:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 5\",\n      \"Online\",\n      sampleOutputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:60:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 6\",\n      \"Error\",\n      sampleOutputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:70:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 7\",\n      \"Offline\",\n      sampleOutputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:80:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 8\",\n      \"Pending\",\n      sampleOutputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:90:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 9\",\n      \"Online\",\n      sampleOutputChannels,\n      extras\n    )\n  ];\n\n  callback(sampleSenders);\n}\n\nexport function getSampleSender() {\n  return new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    extras\n  );\n}\n\nexport function getReceivers(callback) {\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:03:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 3\",\n      \"Offline\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:04:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 4\",\n      \"Pending\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:05:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 5\",\n      \"Online\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:06:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 6\",\n      \"Error\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:07:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 7\",\n      \"Offline\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:08:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 8\",\n      \"Pending\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:09:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 9\",\n      \"Online\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:11:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 11\",\n      \"Online\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:21:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 12\",\n      \"Error\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:31:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 13\",\n      \"Offline\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:41:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 14\",\n      \"Pending\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:51:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 15\",\n      \"Online\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:61:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 16\",\n      \"Error\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:71:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 17\",\n      \"Offline\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:81:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 18\",\n      \"Pending\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:91:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 19\",\n      \"Online\",\n      sampleInputChannels,\n      extras\n    )\n  ];\n\n  callback(sampleReceivers);\n}\n\nexport function getAllStreams(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      extras\n    )\n  ];\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      extras\n    )\n  ];\n\n  const sampleStreams = [\n    new StreamInfo(1, sampleSenders[0], sampleReceivers[0], [\n      \"Additional Stream Details go here\"\n    ]),\n    new StreamInfo(2, sampleSenders[1], sampleReceivers[1], [\n      \"Additional Stream Details go here\"\n    ]),\n    new StreamInfo(3, sampleSenders[1], sampleReceivers[0], [\n      \"Additional Stream Details go here\"\n    ])\n  ];\n\n  callback(sampleStreams);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Container, Grid } from \"@material-ui/core\";\n\nimport DeviceDetailsConciseTable from \"./DeviceDetailsConciseTable\";\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport DeviceDetailsTabTable from \"./DeviceDetailsTabTable\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport { getSampleSender } from \"../api/SampleData\";\n\nexport default function DeviceDetailsPage(props) {\n  const {\n    location: {\n      state: { device }\n    }\n  } = props;\n  const tabs = [\"Overview\", \"Activity Log\", \"Notes\"];\n\n  return (\n    <Container>\n      <DynamicBreadcrumb\n        breadcrumbs={[\n          [\"Home\", \"/\"],\n          [\"My Devices\", \"/Devices\"],\n          [device.name, device.id]\n        ]}\n      />\n      <Grid container spacing={1}>\n        <Grid item xs={12} className=\"flexContents headerAreaUnderline\">\n          <div className=\"title\">{device.name}</div>\n        </Grid>\n        <Grid item xs={12} />\n        <Grid container xs={5} spacing={2}>\n          <Grid item xs={12}>\n            <DeviceDetailsConciseTable device={device} />\n          </Grid>\n          <Grid item xs={2}>\n            <Button variant=\"contained\" color=\"primary\">\n              Edit\n            </Button>\n          </Grid>\n          <Grid item xs={2}>\n            <Button variant=\"outlined\">Delete</Button>\n          </Grid>\n        </Grid>\n        <Grid item xs={1} />\n        <Grid item xs={6}>\n          <DeviceDetailsTabTable tabs={tabs} device={device} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\nDeviceDetailsPage.defaultProps = {\n  location: { state: { device: getSampleSender() } }\n};\n\nDeviceDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      device: PropTypes.instanceOf(DeviceInfo)\n    })\n  })\n};\n","import axios from \"axios\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport * as SampleData from \"./SampleData\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\n\nfunction getStatus(lastCommunicationString) {\n  if (!lastCommunicationString) {\n    return \"Pending\";\n  }\n\n  const lastCommunicationDate = new Date(`${lastCommunicationString}Z`);\n  const diff = Date.now() - lastCommunicationDate.getTime();\n  const tenMinutes = 10 * 60 * 1000;\n  if (diff < tenMinutes) {\n    return \"Online\";\n  }\n  return \"Offline\";\n}\n\nexport function getSenders(callback) {\n  axios\n    .get(process.env.REACT_APP_ENCODER)\n    .then((senders) => {\n      callback(\n        senders.data.map((sender) => {\n          let channels = [];\n          if (sender.output) {\n            channels = sender.output.map((output) => {\n              return new OutputChannelInfo(\n                output.id,\n                output.channel.name,\n                output.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            sender.lastCommunication == null\n              ? \"Never\"\n              : sender.lastCommunication;\n          return new DeviceInfo(\n            sender.serialNumber,\n            lastCommunication,\n            sender.device.publicIpAddress,\n            sender.device.privateIpAddress,\n            sender.device.displayName,\n            getStatus(sender.lastCommunication),\n            channels,\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch((error) => {\n      SampleData.getSenders(callback);\n    });\n}\n\nexport function getReceivers(callback) {\n  axios\n    .get(process.env.REACT_APP_DECODER)\n    .then((receivers) => {\n      callback(\n        receivers.data.map((receiver) => {\n          let channels = [];\n          if (receiver.input) {\n            channels = receiver.input.map((input) => {\n              return new InputChannelInfo(\n                input.id,\n                input.channel.name,\n                input.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            receiver.lastCommunication == null\n              ? \"Never\"\n              : receiver.lastCommunication;\n          return new DeviceInfo(\n            receiver.serialNumber,\n            lastCommunication,\n            receiver.device.publicIpAddress,\n            receiver.device.privateIpAddress,\n            receiver.device.displayName,\n            getStatus(receiver.lastCommunication),\n            channels,\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch((error) => {\n      SampleData.getReceivers(callback);\n    });\n}\n","import DeviceInfo from \"./DeviceInfo\";\n\nexport function convertToDataObject(databaseDevice) {\n  return new DeviceInfo(\n    databaseDevice.serialNumber,\n    databaseDevice.lastCommunication,\n    databaseDevice.device.publicIpAddress,\n    databaseDevice.device.privateIpAddress,\n    databaseDevice.device.displayName,\n    databaseDevice.device.status,\n    databaseDevice.inputs\n  );\n}\n\nexport function convertToServiceObject(deviceInfo) {\n  if (Object.prototype.hasOwnProperty.call(deviceInfo, \"outputs\")) {\n    return {\n      serialNumber: deviceInfo.serialNumber,\n      lastCommunication: deviceInfo.lastCommunication,\n      device: {\n        serialNumber: deviceInfo.serialNumber,\n        publicIpAddress: deviceInfo.publicIp,\n        privateIpAddress: deviceInfo.privateIp,\n        displayName: deviceInfo.name,\n        status: deviceInfo.status\n      },\n      outputs: deviceInfo.channels\n    };\n  }\n  return {\n    serialNumber: deviceInfo.serialNumber,\n    lastCommunication: deviceInfo.lastCommunication,\n    device: {\n      serialNumber: deviceInfo.serialNumber,\n      publicIpAddress: deviceInfo.publicIp,\n      privateIpAddress: deviceInfo.privateIp,\n      displayName: deviceInfo.name,\n      status: deviceInfo.status\n    },\n    inputs: deviceInfo.channels\n  };\n}\n","import axios from \"axios\";\nimport { convertToDataObject } from \"../model/ConvertDataFormat\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport * as SampleData from \"./SampleData\";\n\nexport function getAllStreams(callback) {\n  axios\n    .get(process.env.REACT_APP_STREAM)\n    .then((streams) => {\n      Promise.all(\n        streams.data.map((streamId) => {\n          return getStream(streamId);\n        })\n      ).then(callback);\n    })\n    .catch((error) => {\n      SampleData.getAllStreams(callback);\n    });\n}\n\nexport function getStream(streamId) {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(`${process.env.REACT_APP_STREAM}/${streamId}`)\n      .then((response) => {\n        const stream = response.data;\n        resolve(\n          new StreamInfo(\n            stream.id,\n            convertToDataObject(stream.outputChannel.encoder),\n            convertToDataObject(stream.inputChannel.decoder),\n            [\"Additional stream info goes here.\"]\n          )\n        );\n      })\n      .catch(reject);\n  });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport HeaderBar from \"./general/HeaderBar\";\nimport HomePage from \"./general/HomePage\";\nimport DeviceListPage from \"./devicelist/DeviceListPage\";\nimport StreamingTablePage from \"./createStream/StreamingPage\";\nimport DeviceDetailsPage from \"./DeviceDetailsPage/DeviceDetailsPage\";\n\nimport * as DeviceApi from \"./api/DeviceApi\";\nimport * as StreamApi from \"./api/StreamApi\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <HeaderBar />\n      <Switch>\n        <Route exact path={[\"/\", \"/Home\"]} component={HomePage} />\n        <Route\n          exact\n          path=\"/Devices\"\n          render={(props) => (\n            <DeviceListPage {...props} dataSource={DeviceApi} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/Streaming\"\n          render={(props) => (\n            <StreamingTablePage\n              {...props}\n              deviceDataSource={DeviceApi}\n              streamDataSource={StreamApi}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/Devices/Details/:deviceId\"\n          component={DeviceDetailsPage}\n        />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}