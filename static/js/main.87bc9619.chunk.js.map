{"version":3,"sources":["general/HeaderBar.jsx","general/DynamicBreadcrumb.jsx","general/Buttons/StreamButton.jsx","general/Buttons/AddDeviceButton.jsx","devicelist/TitleBox.jsx","devicelist/TabPanel.jsx","model/InputChannelInfo.js","model/OutputChannelInfo.js","devicelist/ChannelDetailsTableHead.jsx","devicelist/ChannelDetailsTableRow.jsx","devicelist/ChannelDetailsTable.jsx","general/StatusIndicator.jsx","model/DeviceInfo.js","model/StreamInfo.js","model/LogInfo.js","api/SampleData.js","api/DeviceApi.js","general/Buttons/DeleteDeviceButton.jsx","devicelist/ActionMenu.jsx","devicelist/DevicesTable.jsx","general/VerticalTabs.jsx","devicelist/ContentsTable.jsx","DefaultMakeStylesTheme.js","devicelist/DeviceListPage.jsx","createStream/SearchBar.jsx","createStream/SelectDeviceTableRow.jsx","createStream/SelectDevicesTable.jsx","createStream/StreamingTable.jsx","general/dialog/DialogBody.jsx","general/dialog/DialogButtons.jsx","general/dialog/Dialog.jsx","model/ConvertDataFormat.js","api/StreamApi.js","streamlist/DeleteStreamDialog.jsx","streamlist/DeleteStreamDialogOpener.jsx","streamlist/StreamsTable.jsx","streamlist/StreamsTableWrapper.jsx","streamlist/StreamListPage.jsx","createStream/StreamingPage.jsx","general/HorizontalTabPanel.jsx","loglist/LogsTable.jsx","api/LogApi.js","deviceDetailsPage/TabPanels/DeviceDetailsActivityPanel.jsx","deviceDetailsPage/TabPanels/DeviceDetailsNotesPanel.jsx","deviceDetailsPage/DeviceDetailsConciseRow.jsx","deviceDetailsPage/DeviceDetailsConciseTable.jsx","deviceDetailsPage/DeviceDetailsTabTable.jsx","deviceDetailsPage/DeviceNameDetail.jsx","deviceDetailsPage/DeviceDetailsPage.jsx","loglist/LogsTableWrapper.jsx","loglist/LogListPage.jsx","api/AuthenticationApi.js","login/LoginFailedDialog.jsx","login/LoginConsole.jsx","index.jsx","general/HomePage.jsx","login/LoginPage.jsx"],"names":["HeaderBar","props","classes","makeStyles","theme","menuButton","marginRight","spacing","className","AppBar","position","Toolbar","IconButton","edge","this","color","aria-label","Menu","to","activeClassName","exact","id","Notifications","AccountCircle","React","Component","DynamicBreadcrumb","breadcrumbs","Box","padding","Breadcrumbs","map","crumb","i","Link","href","Typography","StreamButton","type","StyledButton","withStyles","root","background","borderRadius","border","height","margin","label","textTransform","Button","SwapHoriz","AddDeviceButton","AddSharp","TitleBox","TabPanel","children","value","index","role","hidden","aria-labelledby","p","component","InputChannelInfo","name","port","decoder","OutputChannelInfo","encoder","ChannelDetailsTableHead","TableRow","TableCell","ChannelDetailsTableRow","channel","ChannelDetailsTable","channels","Table","TableHead","TableBody","StatusIndicator","status","getStatusStyle","DeviceInfo","serial","lastCommunication","publicIpAddress","privateIpAddress","displayName","deviceType","extras","serialNumber","publicIp","privateIp","StreamInfo","sender","receiver","date","Date","toString","split","slice","join","time","LogInfo","dateTime","level","message","sampleInputChannels","InChannelInfo","sampleOutputChannels","OutChannelInfo","getAllLogs","callback","dates","getStatus","lastCommunicationString","lastCommunicationDate","now","getTime","getSenders","axios","get","process","then","senders","data","output","device","catch","SampleData","getReceivers","receivers","input","deleteDevice","deviceId","delete","REACT_APP_DEVICE","updateDeviceName","updatedName","a","put","renderDeleteButton","openDeleteDialog","variant","onClick","renderDeleteMenuItem","MenuItem","DeleteDeviceButton","button","deleteId","useState","open","setOpen","history","useHistory","cancelDelete","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","DeviceApi","location","pathname","endsWith","go","push","autoFocus","ActionMenu","state","anchorElement","setAnchorElement","bind","handleClick","handleClose","event","currentTarget","element","setState","aria-controls","aria-haspopup","size","MoreVert","anchorEl","keepMounted","Boolean","anchorOrigin","horizontal","vertical","transformOrigin","getColumnInfo","title","field","render","rowData","deviceInfo","lookup","Online","Pending","Error","Offline","filtering","sorting","align","export","DevicesTable","devices","TableContainer","style","maxHeight","components","columns","detailPanel","icon","ExpandMore","openIcon","ExpandLess","tooltip","options","toolbar","search","exportButton","headerStyle","backgroundColor","fontWeight","draggable","icons","Filter","FilterList","Search","ResetSearch","Clear","SortArrow","ArrowDownward","Export","SaveAlt","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","VerticalTabs","handleChange","newTab","setValue","tabs","Tabs","onChange","orientation","indicatorColor","Tab","ContentsTable","dataSource","handleValueChange","handleSendersChange","handleReceiversChange","tabIndex","display","flexGrow","defaultMakeStylesTheme","palette","paper","borderRight","divider","DeviceListPage","Container","useStyles","SearchBar","right","marginLeft","breakpoints","up","width","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","TextField","placeholder","InputProps","startAdornment","InputAdornment","SelectDeviceTableRow","deviceDetails","ListItem","dense","ListItemText","primary","Collapse","in","timeout","unmountOnExit","List","disablePadding","secondary","Select","defaultValue","SelectDevicesTable","overflow","StreamingTable","selectedSenderID","selectedReceiverID","onSenderSelected","onReceiverSelected","handleSubmit","post","inputChannelId","outputChannelId","preventDefault","selectedSender","target","selectedReceiver","onSubmit","Grid","container","alignContent","justify","item","xs","DialogBody","DialogButtons","button1","button2","Dialog","openDialog","closeDialog","cancelButton","actionButton","convertToDataObject","databaseDevice","inputs","outputs","getStream","streamId","Promise","resolve","reject","response","stream","outputChannel","inputChannel","getAllStreams","streams","all","sampleSenders","sampleReceivers","deleteStream","DeleteStreamDialog","dialogElement","createRef","confirmDelete","current","finally","afterDelete","ref","DeleteStreamDialogOpener","Tooltip","Delete","withRouter","StreamsTable","columnInfo","getDetailPanel","getOptions","getIcons","concat","Intl","DateTimeFormat","resolvedOptions","timeZone","StreamsTableWrapper","handleStreamsChange","StreamListPage","StreamingPage","deviceDataSource","streamDataSource","HorizontalTabPanel","bodyHeight","showTitle","maxBodyHeight","minBodyHeight","LogsTable","logs","cellStyle","getLogs","endpoint","log","getDeviceLogs","deviceSerialNumber","defaultProps","DeviceDetailsActivityPanel","handleLogsChange","LogApi","Paper","DeviceDetailsNotesPanel","DeviceDetailsConciseRow","getPropertyDisplayName","createTableCellContents","createInnerTable","DeviceDetailsConciseTable","getConciseProperties","property","DeviceDetailsTabTable","textColor","tabInfo","getPanelContents","DeviceNameDetail","deviceName","editing","startEdit","cancelEditing","confirmEditing","setName","paddingLeft","paddingBottom","required","paddingRight","disableElevation","renderEditName","renderStaticName","DeviceDetailsPage","marginTop","LogsTableWrapper","logsDataSource","LogListPage","unknownErrorMessage","incorrectCredentialsMessage","error","LoginFailedDialog","flexDirection","form","submit","LoginConsole","username","setUsername","password","setPassword","maxWidth","noValidate","fullWidth","autoComplete","ReactDOM","StrictMode","path","StreamApi","dialogOpen","setDialogOpen","dialogMessage","setDialogMessage","AuthenticationApi","document","getElementById"],"mappings":"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ACTY,EAAOJ,aACPN,EACAU,EAAOiC,OAAO1C,gBACdS,EAAOiC,OAAOzC,iBACdQ,EAAOiC,OAAOxC,YACd2B,GAAUpB,EAAOV,mBACjBT,EACA,UACA,CAAC,6CAKRqD,OAAM,YDrCJ,SAAoBhB,GAuGzBA,EAtGsB,CACpB,IAAI9B,GACF,eACA,KACA,gBACA,UACA,WACA,SACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,QACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,UACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,UACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,SACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,QACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,UACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,UACA2B,GACA,UACApB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,SACA2B,GACA,UACApB,MC7DAwC,CAAsBjB,MAIrB,SAASkB,GAAalB,GAC3BQ,KACGC,IAAIC,sDACJC,MAAK,SAACQ,GACLnB,EACEmB,EAAUN,KAAK9F,KAAI,SAACgE,GAClB,IAAIpB,EAAW,GACXoB,EAASqC,QACXzD,EAAWoB,EAASqC,MAAMrG,KAAI,SAACqG,GAC7B,OAAO,IAAIrE,GACTqE,EAAM/G,GACN+G,EAAM3D,QAAQT,KACdoE,EAAM3D,QAAQR,KACd,UAIN,IAAMmB,EAC0B,MAA9BW,EAASX,kBACL,QACAW,EAASX,kBACf,OAAO,IAAIF,GACTa,EAASL,aACTN,EACAW,EAASgC,OAAO1C,gBAChBU,EAASgC,OAAOzC,iBAChBS,EAASgC,OAAOxC,YAChB2B,GAAUnB,EAASX,mBACnBT,EACA,UACA,CAAC,6CAKRqD,OAAM,YD0CJ,SAAsBhB,GA0M3BA,EAzMwB,CACtB,IAAI9B,GACF,eACA,KACA,gBACA,UACA,aACA,SACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,QACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,SACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,QACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,SACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,SACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,QACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,SACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,QACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,UACAyB,GACA,UACAlB,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,SACAyB,GACA,UACAlB,MC/OAwC,CAAwBjB,MAIvB,SAASqB,GAAaC,GAC3B,OAAOd,KACJe,OADI,UACMb,maAAYc,iBADlB,YACsCF,IAC1C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","file":"static/js/main.87bc9619.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\nimport { AccountCircle, Menu, Notifications } from \"@material-ui/icons/\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default class HeaderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      menuButton: {\n        marginRight: theme.spacing(2)\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"headerBar\">\n          <AppBar position=\"static\">\n            <Toolbar className=\"darkGrey\">\n              <IconButton\n                edge=\"start\"\n                className={this.classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n              >\n                <Menu />\n              </IconButton>\n              <div className=\"headerTitle\">\n                <NavLink\n                  to=\"/\"\n                  activeClassName=\"headerTitle\"\n                  className=\"headerTitle\"\n                  exact\n                >\n                  Switchboard\n                </NavLink>\n              </div>\n              <IconButton id=\"notifBtn\" color=\"inherit\">\n                <Notifications />\n              </IconButton>\n              <IconButton id=\"acctBtn\" color=\"inherit\">\n                <AccountCircle />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Box, Breadcrumbs, Link, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default function DynamicBreadcrumb(props) {\n  const { breadcrumbs } = props;\n  return (\n    <Box padding=\"2em 0em 0em 1em\">\n      <Breadcrumbs aria-label=\"breadcrumb\" id=\"breadcrumbParent\">\n        {breadcrumbs.map((crumb, i) => {\n          return (\n            <Link\n              color=\"inherit\"\n              href={crumb[1]}\n              id={`breadcrumb${i}`}\n              key={`breadcrumb ${crumb[0]}`}\n            >\n              <Typography color=\"textPrimary\">{crumb[0]}</Typography>\n            </Link>\n          );\n        })}\n      </Breadcrumbs>\n    </Box>\n  );\n}\nDynamicBreadcrumb.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired\n};\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { SwapHoriz } from \"@material-ui/icons/\";\n\nexport default function StreamButton(props) {\n  const { id, type } = props;\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      padding: \"0 5px\",\n      margin: \"1em\"\n    },\n    label: {\n      textTransform: \"\"\n    }\n  })(Button);\n\n  return (\n    <StyledButton id={id} type={type}>\n      <div className=\"buttonText\">\n        <SwapHoriz />\n        Stream\n      </div>\n    </StyledButton>\n  );\n}\n\nStreamButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport { AddSharp } from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\n\nexport default class AddDeviceButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.id = props.id;\n  }\n\n  render() {\n    const StyledButton = withStyles({\n      root: {\n        background: \"linear-gradient(45deg, #01b2fe 30%, #01b2fe 90%)\",\n        borderRadius: 90,\n        border: 0,\n        color: \"white\",\n        height: 40,\n        padding: \"0px\"\n      },\n      label: {\n        textTransform: \"\"\n      }\n    })(Button);\n\n    return (\n      <StyledButton id={this.id}>\n        <div className=\"buttonText\">\n          <AddSharp />\n          Add Device\n        </div>\n      </StyledButton>\n    );\n  }\n}\nAddDeviceButton.propTypes = {\n  id: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nimport StreamButton from \"../general/Buttons/StreamButton\";\nimport AddDeviceButton from \"../general/Buttons/AddDeviceButton\";\n\nexport default function TitleBox() {\n  return (\n    <>\n      <Box className=\"flexContents headerAreaNoUnderline\">\n        <div className=\"title\">My Devices</div>\n        <div className=\"alignRightFloat\">\n          <NavLink\n            to=\"/Streaming\"\n            activeClassName=\"hideLinkStyle\"\n            className=\"hideLinkStyle\"\n            exact\n          >\n            <StreamButton id=\"DeviceListStreamBtn\" type=\"submit\" />\n          </NavLink>\n          <AddDeviceButton id=\"DeviceListAddDevBtn\" />\n        </div>\n      </Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default function TabPanel(props) {\n  const { children, value, index } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n    >\n      {value === index && (\n        <Box p={0}>\n          <Typography component=\"span\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.element.isRequired,\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired\n};\n","export default class InputChannelInfo {\n  constructor(id, name, port, decoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.decoder = decoder;\n  }\n}\n","export default class OutputChannelInfo {\n  constructor(id, name, port, encoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.encoder = encoder;\n  }\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function ChannelDetailsTableHead() {\n  return (\n    <TableRow>\n      <TableCell className=\"lightGrey\">ID</TableCell>\n      <TableCell className=\"lightGrey\">Name</TableCell>\n      <TableCell className=\"lightGrey\">Port</TableCell>\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\n\nexport default function ChannelDetailsTableRow(props) {\n  const {\n    channel: { id, name, port }\n  } = props;\n  return (\n    <TableRow>\n      <TableCell>{id}</TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{port}</TableCell>\n    </TableRow>\n  );\n}\nChannelDetailsTableRow.propTypes = {\n  channel: PropTypes.oneOfType([\n    PropTypes.instanceOf(InputChannelInfo),\n    PropTypes.instanceOf(OutputChannelInfo)\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Table, TableBody, TableHead } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport ChannelDetailsTableHead from \"./ChannelDetailsTableHead\";\nimport ChannelDetailsTableRow from \"./ChannelDetailsTableRow\";\n\nexport default function ChannelDetailsTable(props) {\n  const { channels } = props;\n  return (\n    <Table className=\"flexContents\">\n      <TableHead>\n        <ChannelDetailsTableHead />\n      </TableHead>\n      <TableBody>\n        {channels.map((channel) => {\n          return (\n            <ChannelDetailsTableRow channel={channel} key={channel.name} />\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\nChannelDetailsTable.propTypes = {\n  channels: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.instanceOf(InputChannelInfo),\n      PropTypes.instanceOf(OutputChannelInfo)\n    ])\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class StatusIndicator extends React.Component {\n  getStatusStyle() {\n    const { status } = this.props;\n    switch (status) {\n      case \"Online\":\n        return \"green statusIndicatorBody statusTextOnline \";\n      case \"Pending\":\n        return \"yellow statusIndicatorBody statusTextOnline\";\n      case \"Error\":\n        return \"red statusIndicatorBody statusTextOnline\";\n      default:\n        return \"lightGrey statusIndicatorBody statusTextOffline\";\n    }\n  }\n\n  render() {\n    const { status } = this.props;\n    return <div className={this.getStatusStyle()}>{status}</div>;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.oneOf([\"Online\", \"Offline\", \"Error\", \"Pending\"]).isRequired\n};\n","export default class DeviceInfo {\n  constructor(\n    serial,\n    lastCommunication,\n    publicIpAddress,\n    privateIpAddress,\n    displayName,\n    status,\n    channels,\n    deviceType,\n    extras\n  ) {\n    this.serialNumber = serial;\n    this.lastCommunication = lastCommunication;\n    this.publicIp = publicIpAddress;\n    this.privateIp = privateIpAddress;\n    this.name = displayName;\n    this.status = status;\n    this.channels = channels;\n    this.deviceType = deviceType;\n    this.extras = extras;\n  }\n\n  static getConciseProperties() {\n    return [\n      \"name\",\n      \"serialNumber\",\n      \"status\",\n      \"publicIp\",\n      \"privateIp\",\n      \"channels\"\n    ];\n  }\n}\n","export default class StreamInfo {\n  // to be used once backend has date, status, type, and time fields\n  // constructor(id, date, sender, receiver, status, type, time, extras) {\n  //     this.id = id;\n  //     this.date = new Date(date).toString().split(\" \").slice(0, 5).join(\" \");\n  //     this.sender = sender;\n  //     this.receiver = receiver;\n  //     this.status = status;\n  //     this.type = type;\n  //     this.time = time;\n  //     this.extras = extras;\n  // }\n\n  // temporary with static fields until backend is up to snuff\n  constructor(id, sender, receiver, extras) {\n    this.id = id;\n    this.date = new Date(\"2020-10-31T08:15:30\")\n      .toString()\n      .split(\" \")\n      .slice(0, 5)\n      .join(\" \");\n    this.sender = sender;\n    this.receiver = receiver;\n    this.status = \"Online\";\n    this.type = \"Type 1\";\n    this.time = \"00:34:44\";\n    this.extras = extras;\n  }\n}\n","export default class LogInfo {\n  constructor(id, dateTime, level, message) {\n    this.id = id;\n    this.dateTime = new Date(dateTime)\n      .toString()\n      .split(\" \")\n      .slice(0, 5)\n      .join(\" \");\n    this.level = level;\n    this.message = message;\n  }\n}\n","import DeviceInfo from \"../model/DeviceInfo\";\nimport OutChannelInfo from \"../model/OutputChannelInfo\";\nimport InChannelInfo from \"../model/InputChannelInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport LogInfo from \"../model/LogInfo\";\n\nconst extras = [\"Additional Device details go here\"];\nconst sampleInputChannels = [\n  new InChannelInfo(1, \"Input ch 1\", 500, null),\n  new InChannelInfo(2, \"Input ch 2\", 456, null),\n  new InChannelInfo(3, \"Input ch 3\", 800, null)\n];\nconst sampleOutputChannels = [\n  new OutChannelInfo(1, \"Output ch 1\", 500, null),\n  new OutChannelInfo(2, \"Output ch 2\", 456, null),\n  new OutChannelInfo(3, \"Output ch 3\", 800, null)\n];\n\nexport function getSenders(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:30:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 3\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:40:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 4\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:50:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 5\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:60:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 6\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:70:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 7\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:80:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 8\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:90:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 9\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n\n  callback(sampleSenders);\n}\n\nexport function getSampleSender() {\n  return new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n}\n\nexport function getReceivers(callback) {\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:03:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 3\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:04:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 4\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:05:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 5\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:06:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 6\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:07:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 7\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:08:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 8\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:09:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 9\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:11:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 11\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:21:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 12\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:31:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 13\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:41:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 14\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:51:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 15\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:61:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 16\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:71:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 17\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:81:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 18\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:91:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 19\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  callback(sampleReceivers);\n}\n\nexport function getAllStreams(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  const sampleStreams = [\n    new StreamInfo(1, sampleSenders[0], sampleReceivers[0], [\n      \"Additional Stream Details go here\"\n    ]),\n    new StreamInfo(2, sampleSenders[1], sampleReceivers[1], [\n      \"Additional Stream Details go here\"\n    ]),\n    new StreamInfo(3, sampleSenders[1], sampleReceivers[0], [\n      \"Additional Stream Details go here\"\n    ])\n  ];\n\n  callback(sampleStreams);\n}\n\nexport function getAllLogs(callback) {\n  const dates = [\n    new Date(\"2020-10-31T15:53:23\"),\n    new Date(\"2020-11-13T12:36:30\"),\n    new Date(\"2020-11-13T08:24:30\")\n  ];\n\n  const sampleLogs = [\n    new LogInfo(1, dates[0], \"Info\", \"Log 1 info\"),\n    new LogInfo(2, dates[1], \"Info\", \"Log 2 info\"),\n    new LogInfo(3, dates[2], \"Info\", \"Log 3 info\")\n  ];\n\n  callback(sampleLogs);\n}\n","import axios from \"axios\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport * as SampleData from \"./SampleData\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\n\nfunction getStatus(lastCommunicationString) {\n  if (!lastCommunicationString) {\n    return \"Pending\";\n  }\n\n  const lastCommunicationDate = new Date(`${lastCommunicationString}Z`);\n  const diff = Date.now() - lastCommunicationDate.getTime();\n  const tenMinutes = 10 * 60 * 1000;\n  if (diff < tenMinutes) {\n    return \"Online\";\n  }\n  return \"Offline\";\n}\n\nexport function getSenders(callback) {\n  axios\n    .get(process.env.REACT_APP_ENCODER)\n    .then((senders) => {\n      callback(\n        senders.data.map((sender) => {\n          let channels = [];\n          if (sender.output) {\n            channels = sender.output.map((output) => {\n              return new OutputChannelInfo(\n                output.id,\n                output.channel.name,\n                output.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            sender.lastCommunication == null\n              ? \"Never\"\n              : sender.lastCommunication;\n          return new DeviceInfo(\n            sender.serialNumber,\n            lastCommunication,\n            sender.device.publicIpAddress,\n            sender.device.privateIpAddress,\n            sender.device.displayName,\n            getStatus(sender.lastCommunication),\n            channels,\n            \"encoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getSenders(callback);\n    });\n}\n\nexport function getReceivers(callback) {\n  axios\n    .get(process.env.REACT_APP_DECODER)\n    .then((receivers) => {\n      callback(\n        receivers.data.map((receiver) => {\n          let channels = [];\n          if (receiver.input) {\n            channels = receiver.input.map((input) => {\n              return new InputChannelInfo(\n                input.id,\n                input.channel.name,\n                input.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            receiver.lastCommunication == null\n              ? \"Never\"\n              : receiver.lastCommunication;\n          return new DeviceInfo(\n            receiver.serialNumber,\n            lastCommunication,\n            receiver.device.publicIpAddress,\n            receiver.device.privateIpAddress,\n            receiver.device.displayName,\n            getStatus(receiver.lastCommunication),\n            channels,\n            \"decoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getReceivers(callback);\n    });\n}\n\nexport function deleteDevice(deviceId) {\n  return axios\n    .delete(`${process.env.REACT_APP_DEVICE}/${deviceId}`)\n    .catch(() => {});\n}\n\nexport async function updateDeviceName(deviceId, updatedName) {\n  return axios\n    .put(process.env.REACT_APP_DEVICE, {\n      serialNumber: deviceId,\n      displayName: updatedName\n    })\n    .catch(() => {});\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PropTypes from \"prop-types\";\nimport { MenuItem } from \"@material-ui/core\";\nimport * as DeviceApi from \"../../api/DeviceApi\";\n\nfunction renderDeleteButton(openDeleteDialog) {\n  return (\n    <Button\n      id=\"deleteBtn\"\n      variant=\"outlined\"\n      color=\"secondary\"\n      onClick={openDeleteDialog}\n    >\n      Delete\n    </Button>\n  );\n}\n\nfunction renderDeleteMenuItem(openDeleteDialog) {\n  return (\n    <MenuItem onClick={openDeleteDialog}>\n      <span className=\"warningText\">Delete</span>\n    </MenuItem>\n  );\n}\n\nexport default function DeleteDeviceButton(props) {\n  const { button, deleteId } = props;\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n\n  const openDeleteDialog = () => {\n    return setOpen(true);\n  };\n  const cancelDelete = () => {\n    return setOpen(false);\n  };\n  const confirmDelete = () => {\n    DeviceApi.deleteDevice(deleteId).then(() => {\n      if (history.location.pathname.endsWith(\"Devices\")) {\n        history.go(0);\n      } else {\n        history.push(\"/Devices\");\n      }\n    });\n    return setOpen(false);\n  };\n\n  return (\n    <>\n      {button\n        ? renderDeleteButton(openDeleteDialog)\n        : renderDeleteMenuItem(openDeleteDialog)}\n      <Dialog\n        open={open}\n        onClose={cancelDelete}\n        aria-labelledby=\"delete-stream-dialog-title\"\n        aria-describedby=\"delete-stream-dialog-description\"\n        id=\"delete-stream-dialog\"\n      >\n        <DialogTitle id=\"delete-stream-dialog-title\">\n          Confirm Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"delete-stream-dialog-description\">\n            Are you sure you want to delete this device?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button id=\"cancelDeleteBtn\" onClick={cancelDelete} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            id=\"confirmDeleteBtn\"\n            onClick={confirmDelete}\n            color=\"secondary\"\n            autoFocus\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nDeleteDeviceButton.propTypes = {\n  button: PropTypes.bool.isRequired,\n  deleteId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { MoreVert } from \"@material-ui/icons/\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeleteDeviceButton from \"../general/Buttons/DeleteDeviceButton\";\n\nexport default class ActionMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorElement: null\n    };\n\n    this.setAnchorElement = this.setAnchorElement.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick(event) {\n    this.setAnchorElement(event.currentTarget);\n  }\n\n  handleClose() {\n    this.setAnchorElement(null);\n  }\n\n  setAnchorElement(element) {\n    this.setState({\n      anchorElement: element\n    });\n  }\n\n  render() {\n    const { anchorElement } = this.state;\n    const { device } = this.props;\n    return (\n      <>\n        <IconButton\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n          size=\"small\"\n        >\n          <MoreVert />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorElement}\n          keepMounted\n          open={Boolean(anchorElement)}\n          onClose={this.handleClose}\n          anchorOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n          transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        >\n          <MenuItem onClick={this.handleClose}>\n            <NavLink\n              to={{\n                pathname: `/Devices/Details/${device.name}`,\n                state: { device }\n              }}\n              className=\"hideLinkStyle\"\n            >\n              View Details\n            </NavLink>\n          </MenuItem>\n          <MenuItem onClick={this.handleClose}>\n            Start stream with this as receiver\n          </MenuItem>\n          <DeleteDeviceButton button={false} deleteId={device.serialNumber} />\n        </Menu>\n      </>\n    );\n  }\n}\n\nActionMenu.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  FilterList,\n  Search,\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable, { MTableToolbar } from \"material-table\";\n\nimport ChannelDetailsTable from \"./ChannelDetailsTable\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport ActionMenu from \"./ActionMenu\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nfunction getComponents() {\n  return {\n    /*  eslint-disable react/jsx-props-no-spreading */\n    Toolbar: function Components(props) {\n      return (\n        <div className=\"lightestGrey\">\n          <MTableToolbar {...props} />\n        </div>\n      );\n    }\n  };\n}\n\nfunction buildNavlink(deviceInfo) {\n  return (\n    <NavLink\n      to={{\n        pathname: `/Devices/Details/${deviceInfo.name}`,\n        state: { device: deviceInfo }\n      }}\n    >\n      {deviceInfo.name}\n    </NavLink>\n  );\n}\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"Name\",\n      field: \"name\",\n      render: (rowData) => buildNavlink(rowData)\n    },\n    {\n      title: \"Serial Number\",\n      field: \"serialNumber\"\n    },\n    {\n      title: \"Status\",\n      field: \"status\",\n      render: function Status(rowData) {\n        return <StatusIndicator status={rowData.status} />;\n      },\n      lookup: {\n        Online: \"Online\",\n        Pending: \"Pending\",\n        Error: \"Error\",\n        Offline: \"Offline\"\n      }\n    },\n    {\n      title: \"Private IP Address\",\n      field: \"privateIp\"\n    },\n    {\n      title: \"Public IP Address\",\n      field: \"publicIp\"\n    },\n    {\n      title: \"Actions\",\n      field: \"action\",\n      filtering: false,\n      sorting: false,\n      render: function Actions(rowData) {\n        return <ActionMenu device={rowData} />;\n      },\n      align: \"center\",\n      export: false\n    }\n  ];\n}\n\nfunction getDetailPanel() {\n  return [\n    {\n      icon: ExpandMore,\n      openIcon: ExpandLess,\n      tooltip: \"Show Device Details\",\n      render: function DetailPanel(rowData) {\n        return (\n          <div className=\"lightestGrey\" style={{ padding: \"1.5em\" }}>\n            <Typography variant=\"h6\">Channels</Typography>\n            <ChannelDetailsTable channels={rowData.channels} />\n          </div>\n        );\n      }\n    }\n  ];\n}\n\nfunction getOptions() {\n  return {\n    toolbar: true,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: true,\n    draggable: false\n  };\n}\n\nfunction getIcons() {\n  return {\n    Filter: FilterList,\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function DevicesTable(props) {\n  const { title, devices } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer style={{ maxHeight: 570 }}>\n          <MaterialTable\n            title={title}\n            components={getComponents()}\n            columns={getColumnInfo()}\n            data={devices}\n            detailPanel={getDetailPanel()}\n            options={getOptions()}\n            icons={getIcons()}\n          />\n        </TableContainer>\n      </Box>\n    </>\n  );\n}\n\nDevicesTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  devices: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport { Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default class VerticalTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event, newTab) {\n    const { setValue } = this.props;\n    setValue(newTab);\n  }\n\n  render() {\n    const {\n      value,\n      classes: { tabs }\n    } = this.props;\n\n    return (\n      <>\n        <Tabs\n          value={value}\n          onChange={this.handleChange}\n          aria-label=\"Vertical tabs\"\n          className={`${tabs} lightGrey blackFont flexContents`}\n          orientation=\"vertical\"\n          indicatorColor=\"primary\"\n          variant=\"scrollable\"\n        >\n          <Tab\n            label=\"Senders\"\n            id=\"vertical-tab-0\"\n            aria-controls=\"vertical-tabpanel-0\"\n          />\n          <Tab\n            label=\"Receivers\"\n            id=\"vertical-tab-1\"\n            aria-controls=\"vertical-tabpanel-1\"\n          />\n        </Tabs>\n      </>\n    );\n  }\n}\n\nVerticalTabs.propTypes = {\n  setValue: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TabPanel from \"./TabPanel\";\nimport DevicesTable from \"./DevicesTable\";\nimport VerticalTabs from \"../general/VerticalTabs\";\n\nexport default class ContentsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      value: 0\n    };\n    this.dataSource = props.dataSource;\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getSenders(this.handleSendersChange);\n    this.dataSource.getReceivers(this.handleReceiversChange);\n  }\n\n  handleValueChange(tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  render() {\n    const { receivers, senders, value } = this.state;\n    const { classes } = this.props;\n    return (\n      <>\n        <Box\n          style={{\n            display: \"flex\",\n            flexGrow: 1\n          }}\n        >\n          <VerticalTabs\n            value={value}\n            setValue={this.handleValueChange}\n            classes={classes}\n          />\n          <TabPanel value={value} index={0} className=\"lightGreyBorder\">\n            <DevicesTable devices={senders} title=\"List of Senders\" />\n          </TabPanel>\n          <TabPanel value={value} index={1} className=\"lightGreyBorder\">\n            <DevicesTable devices={receivers} title=\"List of Receivers\" />\n          </TabPanel>\n        </Box>\n      </>\n    );\n  }\n}\nContentsTable.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default function defaultMakeStylesTheme() {\n  return makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    },\n    tabs: {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }));\n}\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport TitleBox from \"./TitleBox\";\nimport ContentsTable from \"./ContentsTable\";\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport * as useStyles from \"../DefaultMakeStylesTheme\";\n\nexport default function DeviceListPage(props) {\n  const { dataSource } = props;\n  return (\n    <Container>\n      <DynamicBreadcrumb\n        breadcrumbs={[\n          [\"Home\", \"/\"],\n          [\"My Devices\", \"Devices\"]\n        ]}\n      />\n      <Box className=\"areaUnderBreadcrumbs\">\n        <TitleBox />\n        <ContentsTable classes={useStyles} dataSource={dataSource} />\n      </Box>\n    </Container>\n  );\n}\n\nDeviceListPage.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { InputAdornment, makeStyles, TextField } from \"@material-ui/core\";\n\nimport { Search } from \"@material-ui/icons/\";\n\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      search: {\n        position: \"relative\",\n        right: 0,\n        marginLeft: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n          marginLeft: theme.spacing(1),\n          width: \"auto\"\n        }\n      },\n      searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        alignItems: \"left\",\n        justifyContent: \"center\"\n      },\n      inputRoot: {\n        color: \"inherit\"\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"searchField\">\n          <TextField\n            placeholder=\"Search\"\n            InputProps={{\n              \"aria-label\": \"search\",\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {\" \"}\n                  <Search />\n                </InputAdornment>\n              )\n            }}\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n  MenuItem,\n  Select\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class SelectDeviceTableRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState((state) => ({ open: !state.open }));\n  }\n\n  render() {\n    const {\n      deviceDetails: { channels, name },\n      onChange\n    } = this.props;\n    const { open } = this.state;\n    return (\n      <>\n        <ListItem button dense onClick={this.onClick}>\n          <ListItemText primary={name} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding style={{ width: \"96%\" }}>\n            <ListItem divider>\n              <ListItemText secondary=\"Select Channel\" />\n              <Select defaultValue=\"\" onChange={onChange}>\n                {channels.map((channel) => {\n                  return (\n                    <MenuItem value={channel.id} key={`${name}_${channel.id}`}>\n                      {channel.port}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </ListItem>\n          </List>\n        </Collapse>\n      </>\n    );\n  }\n}\nSelectDeviceTableRow.propTypes = {\n  deviceDetails: PropTypes.instanceOf(DeviceInfo).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { List } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport SearchBar from \"./SearchBar\";\nimport SelectDeviceTableRow from \"./SelectDeviceTableRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function SelectDevicesTable(props) {\n  const { dataSource, name, onChange } = props;\n  return (\n    <>\n      <div className=\"subtitle\">{name}</div>\n      <SearchBar />\n      <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n        <List>\n          {dataSource.map((device) => {\n            return (\n              <SelectDeviceTableRow\n                deviceDetails={device}\n                key={device.serialNumber}\n                onChange={onChange}\n              />\n            );\n          })}\n        </List>\n      </div>\n    </>\n  );\n}\n\nSelectDevicesTable.propTypes = {\n  name: PropTypes.string.isRequired,\n  dataSource: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\nimport PropTypes from \"prop-types\";\nimport SelectDevicesTable from \"./SelectDevicesTable\";\nimport StreamButton from \"../general/Buttons/StreamButton\";\n\nexport default class StreamingTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      selectedSenderID: \"\",\n      selectedReceiverID: \"\"\n    };\n\n    this.dataSource = props.dataSource;\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n\n    this.onSenderSelected = this.onSenderSelected.bind(this);\n    this.onReceiverSelected = this.onReceiverSelected.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getSenders(this.handleSendersChange);\n    this.dataSource.getReceivers(this.handleReceiversChange);\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  handleSubmit(event) {\n    const { selectedReceiverID, selectedSenderID } = this.state;\n    if (selectedReceiverID !== \"\" && selectedSenderID !== \"\") {\n      axios.post(process.env.REACT_APP_STREAM, {\n        inputChannelId: selectedReceiverID,\n        outputChannelId: selectedSenderID\n      });\n    }\n    event.preventDefault();\n  }\n\n  onSenderSelected(selectedSender) {\n    this.setState({\n      selectedSenderID: selectedSender.target.value\n    });\n  }\n\n  onReceiverSelected(selectedReceiver) {\n    this.setState({\n      selectedReceiverID: selectedReceiver.target.value\n    });\n  }\n\n  render() {\n    const { receivers, senders } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} id=\"createStreamForm\">\n          <Grid\n            container\n            spacing={2}\n            alignContent=\"center\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"SenderTable\">\n                <SelectDevicesTable\n                  name=\"Sender Devices\"\n                  dataSource={senders}\n                  onChange={this.onSenderSelected}\n                />\n              </div>\n            </Grid>\n            <Grid\n              container\n              item\n              xs={2}\n              id=\"TableStartStreamingBtn\"\n              justify=\"center\"\n              alignContent=\"center\"\n              alignItems=\"center\"\n              display=\"flex\"\n            >\n              <StreamButton id=\"StreamingStreamBtn\" type=\"submit\" />\n            </Grid>\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"ReceiverTable\">\n                <SelectDevicesTable\n                  name=\"Receiver Devices\"\n                  dataSource={receivers}\n                  onChange={this.onReceiverSelected}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </form>\n      </>\n    );\n  }\n}\nStreamingTable.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogContentText from \"@material-ui/core/DialogContentText\";\n\nexport default function DialogBody(props) {\n  const { children } = props;\n  return (\n    <MuiDialogContent>\n      <MuiDialogContentText id=\"dialog-description\">\n        {children}\n      </MuiDialogContentText>\n    </MuiDialogContent>\n  );\n}\nDialogBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\n\nexport default function DialogButtons(props) {\n  const { button1, button2 } = props;\n\n  return (\n    <MuiDialogActions>\n      <Button onClick={button1.onClick} color=\"primary\">\n        {button1.name}\n      </Button>\n      <Button onClick={button2.onClick} color=\"secondary\" autoFocus>\n        {button2.name}\n      </Button>\n    </MuiDialogActions>\n  );\n}\n\nDialogButtons.propTypes = {\n  button1: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired,\n  button2: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MuiDialog from \"@material-ui/core/Dialog/Dialog\";\nimport { DialogTitle } from \"@material-ui/core\";\nimport DialogBody from \"./DialogBody\";\nimport DialogButtons from \"./DialogButtons\";\n\nexport default class Dialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.openDialog = this.openDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.setState({ open: true });\n  }\n\n  closeDialog() {\n    return this.setState({ open: false });\n  }\n\n  render() {\n    const cancelButton = {\n      name: \"Cancel\",\n      onClick: this.closeDialog\n    };\n\n    const { title, actionButton, children } = this.props;\n    const { open } = this.state;\n    return (\n      <MuiDialog\n        open={open}\n        onClose={() => this.closeDialog}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n        id=\"dialog\"\n      >\n        <DialogTitle>{title}</DialogTitle>\n        <DialogBody>{children}</DialogBody>\n        <DialogButtons button1={cancelButton} button2={actionButton} />\n      </MuiDialog>\n    );\n  }\n}\n\nDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  actionButton: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import DeviceInfo from \"./DeviceInfo\";\n\nexport function convertToDataObject(databaseDevice) {\n  return new DeviceInfo(\n    databaseDevice.serialNumber,\n    databaseDevice.lastCommunication,\n    databaseDevice.device.publicIpAddress,\n    databaseDevice.device.privateIpAddress,\n    databaseDevice.device.displayName,\n    databaseDevice.device.status,\n    databaseDevice.inputs || databaseDevice.outputs,\n    databaseDevice.inputs ? \"receiver\" : \"sender\"\n  );\n}\n\nexport function convertToServiceObject(deviceInfo) {\n  const serviceObject = {\n    serialNumber: deviceInfo.serialNumber,\n    lastCommunication: deviceInfo.lastCommunication,\n    device: {\n      serialNumber: deviceInfo.serialNumber,\n      publicIpAddress: deviceInfo.publicIp,\n      privateIpAddress: deviceInfo.privateIp,\n      displayName: deviceInfo.name,\n      status: deviceInfo.status\n    }\n  };\n  if (deviceInfo.deviceType === \"sender\") {\n    serviceObject.outputs = deviceInfo.channels;\n  } else {\n    serviceObject.inputs = deviceInfo.channels;\n  }\n  return serviceObject;\n}\n","import axios from \"axios\";\nimport { convertToDataObject } from \"../model/ConvertDataFormat\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport * as SampleData from \"./SampleData\";\n\nexport function getStream(streamId) {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(`${process.env.REACT_APP_STREAM}/${streamId}`)\n      .then((response) => {\n        const stream = response.data;\n        resolve(\n          new StreamInfo(\n            stream.id,\n            convertToDataObject(stream.outputChannel.encoder),\n            convertToDataObject(stream.inputChannel.decoder),\n            [\"Additional stream info goes here.\"]\n          )\n        );\n      })\n      .catch(reject);\n  });\n}\n\nexport function getAllStreams(callback) {\n  axios\n    .get(process.env.REACT_APP_STREAM)\n    .then((streams) => {\n      Promise.all(\n        streams.data.map((streamId) => {\n          return getStream(streamId);\n        })\n      ).then(callback);\n    })\n    .catch(() => {\n      SampleData.getAllStreams(callback);\n    });\n}\n\nexport function deleteStream(streamId) {\n  return axios.delete(`${process.env.REACT_APP_STREAM}/${streamId}`);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../general/dialog/Dialog\";\nimport { deleteStream } from \"../api/StreamApi\";\n\nexport default class DeleteStreamDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  afterDelete() {\n    const { history } = this.props;\n    this.dialogElement.current.closeDialog();\n    history.push(\"/Streaming\");\n    history.go(0);\n  }\n\n  confirmDelete() {\n    const { deleteId } = this.props;\n    deleteStream(deleteId).finally(this.afterDelete());\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId } = this.props;\n    const title = \"Confirm Delete\";\n    const message = `Are you sure you want to end stream ${deleteId}?`;\n\n    const actionButton = {\n      name: \"Confirm\",\n      onClick: this.confirmDelete\n    };\n\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        {message}\n      </Dialog>\n    );\n  }\n}\n\nDeleteStreamDialog.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport { withRouter } from \"react-router-dom\";\n\nimport DeleteStreamDialog from \"./DeleteStreamDialog\";\n\nclass DeleteStreamDialogOpener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId, history } = this.props;\n    return (\n      <>\n        <Tooltip title=\"Delete Stream\" aria-label=\"delete stream\">\n          <IconButton onClick={this.openDialog}>\n            <Delete />\n          </IconButton>\n        </Tooltip>\n        <DeleteStreamDialog\n          ref={this.dialogElement}\n          deleteId={deleteId}\n          history={history}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(DeleteStreamDialogOpener);\n\nDeleteStreamDialogOpener.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\n\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport DeleteStreamDialogOpener from \"./DeleteStreamDialogOpener\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default class StreamsTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.columnInfo = [\n      {\n        title: \"ID\",\n        field: \"id\"\n      },\n      {\n        title: \"Date\",\n        field: \"date\"\n      },\n      {\n        title: \"Sender\",\n        field: \"sender.name\"\n      },\n      {\n        title: \"Receiver\",\n        field: \"receiver.name\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        }\n      },\n      {\n        title: \"Type\",\n        field: \"type\"\n      },\n      {\n        title: \"Time Elapsed\",\n        field: \"time\"\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <DeleteStreamDialogOpener deleteId={rowData.id} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n    this.detailPanel = [\n      {\n        icon: ExpandMore,\n        openIcon: ExpandLess,\n        tooltip: \"Show Stream Details\",\n        render: function DetailPanel(rowData) {\n          return (\n            <div className=\"lightestGrey\">\n              <Typography variant=\"h6\">{rowData.extras}</Typography>\n            </div>\n          );\n        }\n      }\n    ];\n    this.options = {\n      toolbar: false,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: false,\n      draggable: false\n    };\n    this.icons = {\n      SortArrow: ArrowDownward,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  getColumnInfo() {\n    return this.columnInfo;\n  }\n\n  getDetailPanel() {\n    return this.detailPanel;\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  getIcons() {\n    return this.icons;\n  }\n\n  render() {\n    const { streams } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer>\n            <MaterialTable\n              columns={this.getColumnInfo()}\n              data={streams}\n              detailPanel={this.getDetailPanel()}\n              options={this.getOptions()}\n              icons={this.getIcons()}\n            />\n          </TableContainer>\n          <div className=\"textAlignRightPadded\">\n            {\"Time Zone: \".concat(\n              Intl.DateTimeFormat().resolvedOptions().timeZone\n            )}\n          </div>\n        </Box>\n      </>\n    );\n  }\n}\n\nStreamsTable.propTypes = {\n  streams: PropTypes.arrayOf(PropTypes.instanceOf(StreamInfo)).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StreamsTable from \"./StreamsTable\";\n\nexport default class StreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: []\n    };\n    this.dataSource = props.dataSource;\n    this.handleStreamsChange = this.handleStreamsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getAllStreams(this.handleStreamsChange);\n  }\n\n  handleStreamsChange(streams) {\n    this.setState({\n      streams\n    });\n  }\n\n  render() {\n    const { streams } = this.state;\n    return <StreamsTable streams={streams} />;\n  }\n}\n\nStreamsTableWrapper.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport StreamsTableWrapper from \"./StreamsTableWrapper\";\n\nexport default function StreamListPage(props) {\n  const { dataSource } = props;\n  return (\n    <>\n      <Container>\n        <Box className=\"headerAreaUnderline\">\n          <div className=\"title\">Current Streams</div>\n        </Box>\n        <StreamsTableWrapper dataSource={dataSource} />\n      </Container>\n    </>\n  );\n}\n\nStreamListPage.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport StreamingTable from \"./StreamingTable\";\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport StreamList from \"../streamlist/StreamListPage\";\n\nexport default class StreamingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dataSource = props.deviceDataSource;\n  }\n\n  render() {\n    const { deviceDataSource, streamDataSource } = this.props;\n    return (\n      <Container>\n        <DynamicBreadcrumb\n          breadcrumbs={[\n            [\"Home\", \"/\"],\n            [\"My Devices\", \"Devices\"],\n            [\"Streaming\", \"Streaming\"]\n          ]}\n        />\n        <Box className=\"areaUnderBreadcrumbs\">\n          <Box className=\"flexContents headerAreaUnderline\">\n            <div className=\"title\">Streaming</div>\n          </Box>\n          <div id=\"StreamingTable\">\n            <StreamingTable dataSource={deviceDataSource} />\n          </div>\n        </Box>\n        <Box>\n          <StreamList dataSource={streamDataSource} />\n        </Box>\n      </Container>\n    );\n  }\n}\nStreamingPage.propTypes = {\n  deviceDataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  streamDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nexport default function HorizontalTabPanel(props) {\n  const { value, index, children } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </div>\n  );\n}\n\nHorizontalTabPanel.propTypes = {\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Search,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\nimport LogInfo from \"../model/LogInfo\";\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"ID\",\n      field: \"id\",\n      cellStyle: { width: \"10%\" }\n    },\n    {\n      title: \"Date\",\n      field: \"dateTime\",\n      cellStyle: { width: \"15%\" }\n    },\n    {\n      title: \"Level\",\n      field: \"level\",\n      cellStyle: { width: \"10%\" }\n    },\n    {\n      title: \"Message\",\n      field: \"message\",\n      sorting: false\n    }\n  ];\n}\n\nfunction getOptions(bodyHeight) {\n  return {\n    toolbar: true,\n    showTitle: false,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: false,\n    draggable: false,\n    maxBodyHeight: bodyHeight,\n    minBodyHeight: bodyHeight\n  };\n}\n\nfunction getIcons() {\n  return {\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function LogsTable(props) {\n  const { logs, bodyHeight, title } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer>\n          <MaterialTable\n            title={title}\n            columns={getColumnInfo()}\n            data={logs}\n            options={getOptions(bodyHeight)}\n            icons={getIcons()}\n          />\n        </TableContainer>\n        <div className=\"textAlignRightPadded\">\n          {\"Time Zone: \".concat(\n            Intl.DateTimeFormat().resolvedOptions().timeZone\n          )}\n        </div>\n      </Box>\n    </>\n  );\n}\n\nLogsTable.propTypes = {\n  logs: PropTypes.arrayOf(PropTypes.instanceOf(LogInfo)).isRequired,\n  bodyHeight: PropTypes.string,\n  title: PropTypes.string\n};\n\nLogsTable.defaultProps = {\n  bodyHeight: \"auto\",\n  title: \"Logs\"\n};\n","import axios from \"axios\";\nimport LogInfo from \"../model/LogInfo\";\nimport * as SampleData from \"./SampleData\";\n\nasync function getLogs(endpoint) {\n  return axios\n    .get(endpoint)\n    .then((response) => {\n      return Promise.resolve(\n        response.data.map((log) => {\n          return new LogInfo(log.id, log.dateTime, log.level, log.message);\n        })\n      );\n    })\n    .catch(() => {\n      return new Promise((resolve) => {\n        SampleData.getAllLogs(resolve);\n      });\n    });\n}\n\nexport async function getAllLogs() {\n  return getLogs(process.env.REACT_APP_LOGS);\n}\n\nexport async function getDeviceLogs(deviceSerialNumber) {\n  return getLogs(`${process.env.REACT_APP_LOGS}/${deviceSerialNumber}`);\n}\n","import { Container, Paper } from \"@material-ui/core\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport LogsTable from \"../../loglist/LogsTable\";\nimport * as LogApi from \"../../api/LogApi\";\n\nexport default class DeviceDetailsActivityPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.device = props.device;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    LogApi.getDeviceLogs(this.device.serialNumber).then(this.handleLogsChange);\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return (\n      <>\n        <Container component={Paper}>\n          <LogsTable\n            title={`${this.device.serialNumber} Logs`}\n            logs={logs}\n            bodyHeight=\"35vh\"\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nDeviceDetailsActivityPanel.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Paper } from \"@material-ui/core\";\n\nexport default function DeviceDetailsNotesPanel(props) {\n  const { extras } = props;\n  return <Container component={Paper}>{extras}</Container>;\n}\n\nDeviceDetailsNotesPanel.propTypes = {\n  extras: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\nimport { TableContainer, TableCell, TableRow } from \"@material-ui/core\";\nimport ChannelDetailsTable from \"../devicelist/ChannelDetailsTable\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport StatusIndicator from \"../general/StatusIndicator\";\n\nexport default class DeviceDetailsConciseRow extends React.Component {\n  static getPropertyDisplayName(name) {\n    switch (name) {\n      case \"serialNumber\":\n        return \"Serial Number\";\n      case \"lastCommunication\":\n        return \"Last Communication\";\n      case \"privateIp\":\n        return \"Private IP Address\";\n      case \"publicIp\":\n        return \"Public IP Address\";\n      case \"name\":\n        return \"Name\";\n      case \"status\":\n        return \"Status\";\n      case \"channels\":\n        return \"Channels\";\n      default:\n        return \"Additional Info\";\n    }\n  }\n\n  static createInnerTable(value) {\n    return (\n      <TableContainer>\n        <ChannelDetailsTable channels={value} />\n      </TableContainer>\n    );\n  }\n\n  static createTableCellContents(name, value) {\n    switch (name) {\n      case \"channels\":\n        return DeviceDetailsConciseRow.createInnerTable(value);\n      case \"status\":\n        return <StatusIndicator status={value} />;\n      default:\n        return value;\n    }\n  }\n\n  render() {\n    const { name, value } = this.props;\n    return (\n      <>\n        <TableRow>\n          <TableCell>\n            {DeviceDetailsConciseRow.getPropertyDisplayName(name)}\n          </TableCell>\n          <TableCell align=\"center\">\n            {DeviceDetailsConciseRow.createTableCellContents(name, value)}\n          </TableCell>\n        </TableRow>\n      </>\n    );\n  }\n}\n\nDeviceDetailsConciseRow.propTypes = {\n  name: Proptypes.string.isRequired,\n  value: Proptypes.arrayOf(\n    Proptypes.oneOfType([InputChannelInfo, OutputChannelInfo])\n  ).isRequired\n};\n","import React from \"react\";\nimport { TableContainer, Table, TableBody, Paper } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceDetailsConciseRow from \"./DeviceDetailsConciseRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function DeviceDetailsConciseTable(props) {\n  const { device } = props;\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableBody>\n            {DeviceInfo.getConciseProperties().map((property) => (\n              <DeviceDetailsConciseRow\n                name={property}\n                value={device[property]}\n                key={`device_${property}`}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nDeviceDetailsConciseTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { Container, Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport HorizontalTabPanel from \"../general/HorizontalTabPanel\";\nimport DeviceDetailsActivityPanel from \"./TabPanels/DeviceDetailsActivityPanel\";\nimport DeviceDetailsNotesPanel from \"./TabPanels/DeviceDetailsNotesPanel\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeviceDetailsConciseTable from \"./DeviceDetailsConciseTable\";\n\nexport default class DeviceDetailsTabTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleValueChange(event, tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  static getPanelContents(tabInfo, device) {\n    switch (tabInfo) {\n      case \"Overview\":\n        return <DeviceDetailsConciseTable device={device} />;\n      case \"Activity Log\":\n        return <DeviceDetailsActivityPanel device={device} />;\n      case \"Notes\":\n        return <DeviceDetailsNotesPanel extras={device.extras} />;\n\n      default:\n        return <div>Whoops not a valid value</div>;\n    }\n  }\n\n  render() {\n    const { value } = this.state;\n    const { device, tabs } = this.props;\n    return (\n      <Container>\n        <Tabs\n          value={value}\n          onChange={this.handleValueChange}\n          className=\"lightGrey blackFont flexContents\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {tabs.map((tabInfo) => {\n            let tab;\n            if (tabInfo === \"Overview\") {\n              tab = (\n                <Tab\n                  label={tabInfo}\n                  key={tabInfo}\n                  style={{ pointerEvents: \"none\" }}\n                />\n              );\n            } else {\n              tab = <Tab label={tabInfo} key={tabInfo} />;\n            }\n            return tab;\n          })}\n        </Tabs>\n        {tabs.map((tabInfo, index) => {\n          return (\n            <HorizontalTabPanel\n              value={value}\n              key={tabInfo}\n              index={index}\n              device={device}\n            >\n              {DeviceDetailsTabTable.getPanelContents(tabInfo, device)}\n            </HorizontalTabPanel>\n          );\n        })}\n      </Container>\n    );\n  }\n}\nDeviceDetailsTabTable.propTypes = {\n  tabs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Button, TextField } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport * as DeviceApi from \"../api/DeviceApi\";\n\nexport default class DeviceNameDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.deviceName = props.deviceName;\n    this.deviceId = props.deviceId;\n    this.state = {\n      editing: false,\n      name: this.deviceName\n    };\n\n    this.startEdit = this.startEdit.bind(this);\n    this.cancelEditing = this.cancelEditing.bind(this);\n    this.confirmEditing = this.confirmEditing.bind(this);\n    this.setName = this.setName.bind(this);\n  }\n\n  setName(updatedName) {\n    this.setState({ name: updatedName });\n  }\n\n  startEdit() {\n    this.setState({ editing: true });\n  }\n\n  cancelEditing() {\n    this.setState({ name: this.deviceName });\n    this.setState({ editing: false });\n  }\n\n  confirmEditing(event) {\n    // api call\n    event.preventDefault();\n    const { name } = this.state;\n    DeviceApi.updateDeviceName(this.deviceId, name).then(() => {\n      // check response OK to update deviceName\n      this.deviceName = name;\n    });\n\n    this.setState({ editing: false });\n  }\n\n  renderStaticName() {\n    const { name } = this.state;\n    return (\n      <>\n        <Box className=\"flexContents\">\n          <div className=\"title\">{name}</div>\n          <Box padding={4} paddingLeft={1} paddingBottom={0}>\n            <Button>\n              <EditIcon id=\"editBtn\" color=\"action\" onClick={this.startEdit} />\n            </Button>\n          </Box>\n        </Box>\n      </>\n    );\n  }\n\n  renderEditName() {\n    return (\n      <>\n        <form className=\"deviceNameEditForm\" onSubmit={this.confirmEditing}>\n          <Box className=\"flexContents\">\n            <TextField\n              id=\"deviceName\"\n              name=\"deviceName\"\n              required\n              defaultValue={this.deviceName}\n              label=\"Device Name\"\n              onChange={(event) => this.setName(event.target.value)}\n            />\n            <Box padding={4} paddingLeft={1} paddingRight={1}>\n              <Button\n                id=\"cancelEditBtn\"\n                onClick={this.cancelEditing}\n                variant=\"contained\"\n                disableElevation\n              >\n                Cancel\n              </Button>\n            </Box>\n            <Box padding={4} paddingLeft={0}>\n              <Button\n                id=\"confirmEditBtn\"\n                type=\"submit\"\n                color=\"primary\"\n                variant=\"contained\"\n                disableElevation\n              >\n                Save\n              </Button>\n            </Box>\n          </Box>\n        </form>\n      </>\n    );\n  }\n\n  render() {\n    const { editing } = this.state;\n    return (\n      <>\n        <div>{editing ? this.renderEditName() : this.renderStaticName()}</div>\n      </>\n    );\n  }\n}\n\nDeviceNameDetail.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  deviceId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Container, Grid } from \"@material-ui/core\";\n\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport DeviceDetailsTabTable from \"./DeviceDetailsTabTable\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport { getSampleSender } from \"../api/SampleData\";\nimport DeleteDeviceButton from \"../general/Buttons/DeleteDeviceButton\";\nimport DeviceNameDetail from \"./DeviceNameDetail\";\n\nexport default function DeviceDetailsPage(props) {\n  const {\n    location: {\n      state: { device }\n    }\n  } = props;\n  const tabs = [\"Activity Log\", \"Notes\"];\n\n  return (\n    <Container>\n      <DynamicBreadcrumb\n        breadcrumbs={[\n          [\"Home\", \"/\"],\n          [\"My Devices\", \"/Devices\"],\n          [device.name, device.id]\n        ]}\n      />\n      <Box className=\"areaUnderBreadcrumbs\">\n        <Box className=\"flexContents headerAreaUnderline\">\n          <DeviceNameDetail\n            deviceName={device.name}\n            deviceId={device.serialNumber}\n          />\n          <div className=\"alignRightFloat\">\n            <Box marginRight={2} marginTop={2}>\n              <DeleteDeviceButton button deleteId={device.serialNumber} />\n            </Box>\n          </div>\n        </Box>\n      </Box>\n      <Grid container>\n        <Grid item xs={6}>\n          <DeviceDetailsTabTable tabs={[\"Overview\"]} device={device} />\n        </Grid>\n        <Grid item xs={6}>\n          <DeviceDetailsTabTable tabs={tabs} device={device} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\nDeviceDetailsPage.defaultProps = {\n  location: { state: { device: getSampleSender() } }\n};\n\nDeviceDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      device: PropTypes.instanceOf(DeviceInfo)\n    })\n  })\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LogsTable from \"./LogsTable\";\n\nexport default class LogsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.logsDataSource = props.logsDataSource;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.logsDataSource.getAllLogs().then(this.handleLogsChange);\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} />;\n  }\n}\n\nLogsTableWrapper.propTypes = {\n  logsDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport LogsTableWrapper from \"./LogsTableWrapper\";\n\nexport default function LogListPage(props) {\n  const { logsDataSource } = props;\n  return (\n    <>\n      <Container>\n        <DynamicBreadcrumb\n          breadcrumbs={[\n            [\"Home\", \"/\"],\n            [\"Logs\", \"/Logs\"]\n          ]}\n        />\n        <Box className=\"areaUnderBreadcrumbs\">\n          <Box className=\"headerAreaUnderline\">\n            <div className=\"title\">Logs</div>\n          </Box>\n          <LogsTableWrapper logsDataSource={logsDataSource} />\n        </Box>\n      </Container>\n    </>\n  );\n}\n\nLogListPage.propTypes = {\n  logsDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import axios from \"axios\";\n\nexport const unknownErrorMessage =\n  \"An unknown error occurred. Please try again later.\";\nexport const incorrectCredentialsMessage =\n  \"Incorrect username and/or password. Please enter the correct credentials and try again.\";\n\nexport async function logIn() {\n  // TODO: Correct backend URL from environment variables\n  return axios\n    .post(\"backendUrl/login\")\n    .then(() => {\n      // TODO: Happy path login\n    })\n    .catch((error) => {\n      let message = unknownErrorMessage;\n      if (error.response && error.response.status === \"403\") {\n        message = incorrectCredentialsMessage;\n      }\n      return Promise.reject(new Error(message));\n    });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    color: \"#ef5350\"\n  }\n}));\n\nexport default function LoginFailedDialog(props) {\n  const classes = useStyles();\n  const { open, setOpen, message } = props;\n\n  const closeDialog = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Dialog open={open} onClose={closeDialog}>\n        <DialogTitle id=\"login-failed-dialog-title\" className={classes.title}>\n          Login Failed\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"login-failed-dialog-description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nLoginFailedDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired\n};\n","import React, { useState } from \"react\";\nimport { Button, Container, makeStyles, TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function LoginConsole(props) {\n  const { handleSubmit } = props;\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit(username, password);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nLoginConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport HeaderBar from \"./general/HeaderBar\";\nimport HomePage from \"./general/HomePage\";\nimport DeviceListPage from \"./devicelist/DeviceListPage\";\nimport StreamingTablePage from \"./createStream/StreamingPage\";\nimport DeviceDetailsPage from \"./deviceDetailsPage/DeviceDetailsPage\";\nimport LogListPage from \"./loglist/LogListPage\";\nimport LoginPage from \"./login/LoginPage\";\n\nimport * as DeviceApi from \"./api/DeviceApi\";\nimport * as StreamApi from \"./api/StreamApi\";\nimport * as LogApi from \"./api/LogApi\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <HeaderBar />\n      <Switch>\n        <Route exact path={[\"/\", \"/Home\"]} component={HomePage} />\n        <Route\n          exact\n          path=\"/Devices\"\n          render={() => <DeviceListPage dataSource={DeviceApi} />}\n        />\n        <Route\n          exact\n          path=\"/Streaming\"\n          render={() => (\n            <StreamingTablePage\n              deviceDataSource={DeviceApi}\n              streamDataSource={StreamApi}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/Devices/Details/:deviceId\"\n          component={DeviceDetailsPage}\n        />\n        <Route\n          exact\n          path=\"/Logs\"\n          render={() => <LogListPage logsDataSource={LogApi} />}\n        />\n        <Route exact path=\"/Login\" component={LoginPage} />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport DynamicBreadcrumb from \"./DynamicBreadcrumb\";\n\nexport default function HomePage() {\n  return (\n    <Container>\n      <DynamicBreadcrumb\n        breadcrumbs={[\n          [\"Home\", \"\"],\n          [\"My Devices\", \"Devices\"],\n          [\"Streaming\", \"Streaming\"],\n          [\"Logs\", \"Logs\"],\n          [\"Login\", \"Login\"]\n        ]}\n      />\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport * as AuthenticationApi from \"../api/AuthenticationApi\";\nimport LoginFailedDialog from \"./LoginFailedDialog\";\nimport LoginConsole from \"./LoginConsole\";\n\nexport default function LoginPage() {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [dialogMessage, setDialogMessage] = useState(\"\");\n\n  const handleSubmit = (username, password) => {\n    AuthenticationApi.logIn({ username, password }).catch((error) => {\n      setDialogMessage(error.message);\n      setDialogOpen(true);\n    });\n  };\n\n  return (\n    <Container>\n      <Box className=\"flexContents headerAreaUnderline\">\n        <div className=\"title\">Login</div>\n      </Box>\n      <LoginConsole handleSubmit={handleSubmit} />\n      <LoginFailedDialog\n        open={dialogOpen}\n        setOpen={setDialogOpen}\n        message={dialogMessage}\n      />\n    </Container>\n  );\n}\n"],"sourceRoot":""}