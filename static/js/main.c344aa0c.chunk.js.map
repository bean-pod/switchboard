{"version":3,"sources":["api/AuthenticationUtil.js","app/ProtectedRoute.jsx","model/DeviceInfo.js","model/StreamInfo.js","general/DynamicBreadcrumb.jsx","general/Buttons/StreamButton.jsx","general/TitleButtons.jsx","general/Title.jsx","api/AuthenticationApi.js","general/HeaderBar.jsx","general/Page.jsx","login/LoginFailedDialog.jsx","login/LoginConsole.jsx","login/LoginPageContents.jsx","login/LoginPage.jsx","general/dashboard/GridColumn.jsx","general/dashboard/ButtonInfo.js","general/dashboard/SmallCardButton.jsx","general/dashboard/DashboardCard.jsx","general/dashboard/DashboardButton.jsx","streamlist/StreamsTable.jsx","model/OutputChannelInfo.js","model/InputChannelInfo.js","model/LogInfo.js","api/SampleData.js","streamlist/StreamsTableWrapper.jsx","general/StatusIndicator.jsx","streamlist/StreamDetailsButton.jsx","model/StreamStatistics/StreamStatisticsInfo.js","model/StreamStatistics/StreamStatsSendInfo.js","model/StreamStatistics/StreamStatsReceiveInfo.js","model/StreamStatistics/StreamStatsLinkInfo.js","model/StreamStatistics/StreamStatsWindowInfo.js","model/ConvertDataFormat.js","api/StreamApi.js","streamlist/SimpleStreamsTableWrapper.jsx","homepage/ActiveStreamCard.jsx","homepage/ActivityLogCard.jsx","homepage/DevicesCard.jsx","homepage/AdminPanelCard.jsx","homepage/HomePageContents.jsx","homepage/HomePage.jsx","api/DeviceApi.js","devicelist/StyledInput.jsx","devicelist/DeviceTableTitle.jsx","devicelist/ChannelDetailsTableHead.jsx","devicelist/ChannelDetailsTableRow.jsx","devicelist/ChannelDetailsTable.jsx","general/SnackbarMessage.jsx","general/Buttons/DeleteDeviceButton.jsx","devicelist/ActionMenu.jsx","devicelist/DevicesTable.jsx","devicelist/DeviceListPageContents.jsx","devicelist/DeviceListPage.jsx","deviceDetailsPage/EditableName.jsx","deviceDetailsPage/StaticName.jsx","deviceDetailsPage/DeviceName.jsx","deviceDetailsPage/DeviceInfoTable/DeviceInfoRow.jsx","deviceDetailsPage/DeviceInfoTable/DeviceInfoTable.jsx","deviceDetailsPage/DeviceDetailsInfoTable.jsx","deviceDetailsPage/cards/DeviceInfoCard.jsx","model/StreamLogInfo.js","loglist/LogsTable.jsx","deviceDetailsPage/DeviceLogTableWrapper.jsx","api/LogApi.js","deviceDetailsPage/cards/DeviceLogCard.jsx","deviceDetailsPage/cards/DeviceChannelCard.jsx","general/dialog/DialogBody.jsx","general/dialog/DialogButtons.jsx","general/dialog/Dialog.jsx","deviceDetailsPage/DeleteDeviceDialog/DeleteDeviceDialog.jsx","deviceDetailsPage/DeleteDeviceDialog/DeleteDeviceDialogOpener.jsx","deviceDetailsPage/configuration/UploadConfigDialog.jsx","deviceDetailsPage/configuration/UploadConfigDialogOpenButton.jsx","deviceDetailsPage/configuration/DownloadConfigButton.jsx","deviceDetailsPage/cards/DeviceConfigActionsCard.jsx","deviceDetailsPage/DeviceDetailsPageContents.jsx","deviceDetailsPage/DeviceDetailsPage.jsx","streamlist/DetailedStreamsTableWrapper.jsx","streamlist/StreamListPage.jsx","createStream/SelectDeviceDialog/SelectTable.jsx","createStream/SelectDeviceDialog/SelectDeviceTable.jsx","createStream/SelectDeviceDialog/SelectChannelTable.jsx","general/simpleTable/SimpleTableRow.jsx","general/simpleTable/SimpleTable.jsx","general/StreamDeviceCard.jsx","createStream/SwipeableSteps/StepperNextButton.jsx","createStream/SwipeableSteps/StepperBackButton.jsx","createStream/SwipeableSteps/SelectDeviceSwipeableSteps.jsx","createStream/SelectDeviceDialog/SelectDeviceDialog.jsx","createStream/cards/SelectedDeviceCard.jsx","createStream/cards/UnselectedDeviceCard.jsx","createStream/cards/CreateStreamCardToggler.jsx","createStream/CreateStreamDeviceCardWrapper.jsx","createStream/CreateStreamPageContents.jsx","createStream/CreateStreamPage.jsx","loglist/LogsTableWrapper.jsx","loglist/LogListPage.jsx","general/userForm/FormFailedDialog.jsx","api/UserManagementApi.js","general/userForm/FormConsole.jsx","admin/createUser/CreateUserFormConsole.jsx","admin/createUser/CreateUserPageContents.jsx","admin/createUser/CreateUserPage.jsx","streamDetails/StreamDetailsDeviceCard.jsx","streamDetails/DeleteStreamDialog.jsx","streamDetails/DeleteStreamDialogOpener.jsx","streamDetails/StreamLogTableWrapper.jsx","streamDetails/cards/StreamLogCard.jsx","streamDetails/StreamDetailsPageContents.jsx","streamDetails/StreamDetailsPage.jsx","general/PathNotFoundPage.jsx","app/AppRouter.jsx","index.jsx"],"names":["parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","component","charCodeAt","toString","slice","join","JSON","parse","saveToken","tokenPayload","expiryDate","Date","exp","Cookies","set","expires","SameSite","getAuthorizationHeader","get","headers","Authorization","isAuthenticated","isAdmin","role","ProtectedRoute","props","bind","location","this","authenticationRequired","render","authenticated","to","pathname","path","exact","React","Component","defaultProps","DeviceInfo","serial","lastCommunication","publicIpAddress","privateIpAddress","displayName","status","channels","deviceType","extras","serialNumber","publicIp","privateIp","name","StreamInfo","id","sender","receiver","outputChannel","inputChannel","date","type","time","DynamicBreadcrumb","breadcrumbs","Box","padding","Breadcrumbs","aria-label","separator","NavigateNext","fontSize","crumb","Link","NavLink","state","Typography","color","StreamButton","StyledButton","withStyles","root","background","borderRadius","border","height","margin","label","textTransform","Button","className","SwapHoriz","TitleButtons","activeClassName","Title","title","deviceList","unknownErrorMessage","incorrectCredentialsMessage","credentials","a","authorizationHeader","auth","username","password","axios","process","then","response","AuthenticationUtil","authorization","catch","error","message","Promise","reject","Error","HeaderBar","classes","makeStyles","theme","menuButton","marginRight","spacing","handleLogout","history","remove","push","AppBar","position","Toolbar","IconButton","edge","Home","disabled","onClick","AccountCircle","withRouter","Page","children","Container","useStyles","LoginFailedDialog","open","setOpen","closeDialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","paper","marginTop","display","flexDirection","alignItems","form","width","submit","LoginConsole","handleSubmit","useState","setUsername","setPassword","maxWidth","noValidate","onSubmit","event","preventDefault","TextField","variant","required","fullWidth","autoComplete","autoFocus","onChange","target","value","LoginPageContents","dialogOpen","dialogMessage","setDialogOpen","setDialogMessage","logIn","setState","LoginPage","useHistory","GridColumn","Grid","item","xs","container","ButtonInfo","referenceObject","buttonText","SmallCardButton","button","size","device","DashboardCard","Paper","elevation","gutterBottom","justify","direction","DashboardButton","href","minWidth","undefined","StreamsTable","options","toolbar","headerStyle","backgroundColor","fontWeight","filtering","draggable","icons","SortArrow","ArrowDownward","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","streams","columns","TableContainer","data","getOptions","getIcons","concat","Intl","DateTimeFormat","resolvedOptions","timeZone","OutputChannelInfo","port","encoder","InputChannelInfo","decoder","LogInfo","dateTime","level","sampleInputChannels","InChannelInfo","sampleOutputChannels","OutChannelInfo","getSampleSender","StreamsTableWrapper","dataSource","handleStreamsChange","getAllStreams","sampleSenders","sampleReceivers","StatusIndicator","getStatusStyle","StreamDetailsButton","streamInfo","stream","Description","StreamStatisticsInfo","window","link","send","receive","StreamStatsSendInfo","sending","packets","packetsLost","packetsDropped","packetsRetransmitted","bytes","bytesDropped","mbitRate","StreamStatsReceiveInfo","receiving","packetsBelated","bytesLost","StreamStatsLinkInfo","rtt","bandwidth","maxBandwidth","StreamStatsWindowInfo","flow","congestion","flight","convertDeviceToDataObject","databaseDevice","inputs","outputs","convertStatsToDataObject","databaseStats","recv","getStream","streamId","channel","all","deleteStream","delete","createStream","selectedReceiverID","selectedSenderID","post","inputChannelId","outputChannelId","getStreamStatistics","SimpleStreamsTableWrapper","simpleColumns","field","rowData","sorting","align","export","streamDataSource","getSimpleColumns","ActiveStreamCard","style","ActivityLogCard","DevicesCard","AdminPanelCard","HomePageContents","HomePage","getStatus","lastCommunicationString","lastCommunicationDate","now","getTime","getSenders","callback","senders","output","configurationInstance","SampleData","getReceivers","receivers","input","deleteDevice","deviceId","updatedName","put","configFile","FormData","append","letterSpacing","lineHeight","borderColor","boxShadow","InputBase","DeviceTableTitle","handleChange","index","Select","StyledInput","MenuItem","ChannelDetailsTableHead","TableRow","TableCell","ChannelDetailsTableRow","ChannelDetailsTable","Table","TableHead","TableBody","openSnackbar","SnackbarMessage","handleClose","reason","stat","msg","isSuccess","Snackbar","contentprops","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","CheckCircle","action","Close","snackbar","renderDeleteButton","openDeleteDialog","renderDeleteMenuItem","DeleteDeviceButton","deleteId","cancelDelete","aria-labelledby","aria-describedby","DeviceApi","endsWith","go","ActionMenu","anchorElement","setAnchorElement","handleClick","currentTarget","element","aria-controls","aria-haspopup","MoreVert","Menu","anchorEl","keepMounted","Boolean","transformOrigin","DevicesTable","devices","maxHeight","components","lookup","Online","Pending","Offline","detailPanel","icon","ExpandMore","openIcon","ExpandLess","tooltip","search","exportButton","Filter","FilterList","Search","ResetSearch","Clear","Export","SaveAlt","DeviceListPageContents","selected","getDevices","getTitle","handleSendersChange","handleReceiversChange","DeviceListPage","EditableName","confirmEditing","deviceName","setName","cancelEditing","defaultValue","Cancel","Save","StaticName","startEditing","Edit","DeviceName","editing","startEdit","newName","oldName","forceUpdate","DeviceInfoRow","getPropertyDisplayName","createInnerTable","createTableCellContents","DeviceInfoTable","properties","property","DeviceDetailsInfoTable","DeviceInfoCard","StreamLogInfo","LogsTable","showTitle","maxBodyHeight","minBodyHeight","logs","DeviceLogTableWrapper","cellStyle","handleDeviceLogsChange","getDeviceLogs","getColumnInfo","getLogs","endpoint","resolve","log","getAllLogs","deviceSerialNumber","getStreamLogs","logEntity","DeviceLogCard","deviceLogsDataSource","DeviceChannelCard","DialogBody","DialogButtons","button1","button2","Dialog","openDialog","actionButton","isError","DeleteDeviceDialog","dialogElement","createRef","confirmDelete","current","ref","DeleteDeviceDialogOpener","startIcon","UploadConfigDialog","file","afterUpload","handleUpload","files","uploadConfiguration","Input","disableUnderline","UploadConfigDialogOpenButton","CloudUpload","DownloadConfigButton","handleDownload","filename","document","createElement","setAttribute","body","appendChild","click","removeChild","GetApp","DeviceConfigActionsCard","DeviceDetailsPageContents","DeviceDetailsPage","DetailedStreamsTableWrapper","detailedColumns","getDetailedColumns","StreamListPage","SelectTable","handleListItemClick","setIndex","selectedIndex","items","List","ListItem","ListItemText","primary","SelectDeviceTable","deviceNames","SelectChannelTable","channelNames","deviceIndex","SimpleTableRow","alignment","SimpleTable","propertiesArr","Object","keys","propertyName","propertyPair","StreamDeviceCard","Name","Channel","StepperNextButton","isLast","handleNext","KeyboardArrowRight","StepperBackButton","isFirst","handleBack","KeyboardArrowLeft","SelectDeviceSwipeableSteps","activeStep","steps","getNextButton","getBackButton","previousStep","maxSteps","length","disableNext","channelIndex","setDeviceIndex","setChannelIndex","axis","enableMouseEvents","MobileStepper","nextButton","backButton","SelectDeviceDialog","SelectedDeviceCard","channelId","UnselectedDeviceCard","CreateStreamCardToggler","CreateStreamDeviceCardWrapper","CreateStreamPageContents","senderDeviceIndex","senderChannelIndex","receiverDeviceIndex","receiverChannelIndex","setSenders","setReceivers","setSenderDeviceIndex","setReceiverDeviceIndex","setSenderChannelIndex","setReceiverChannelIndex","recieverChannel","senderChannel","textAlign","Forward","CreateStreamPage","LogsTableWrapper","logsDataSource","handleLogsChange","LogListPage","FormFailedDialog","errorMessage","userRole","FormConsole","passwordErrorCondition","setPasswordError","passwordOnChange","passwordError","upperbound","lowerbound","buttonName","isValidate","passwordInputProps","passwordHelperText","inputProps","helperText","CreateUserFormConsole","maxLength","minLength","CreateUserPageContents","createUser","CreateUserPage","StreamDetailsDeviceCard","cardTitle","DeleteStreamDialog","DeleteStreamDialogOpener","Tooltip","StreamLogTableWrapper","handleStreamLogsChange","StreamLogCard","streamLogsDataSource","StreamDetailsPageContents","StreamDetailsPage","PathNotFoundPage","AppRouter","sampleSender","sampleReceiver","ReactDOM","getElementById"],"mappings":"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,IAAI/F,GACT+F,EAAOrR,GACPqR,EAAOnC,QAAQpP,KACfuR,EAAOnC,QAAQ3D,KACf,UAIN,IAAMpM,EACwB,MAA5Bc,EAAOd,kBACH,QACAc,EAAOd,kBACb,OAAO,IAAIF,EACTgB,EAAON,aACPR,EACAc,EAAO8I,OAAO3J,gBACda,EAAO8I,OAAO1J,iBACdY,EAAO8I,OAAOzJ,YACduR,GAAU5Q,EAAOd,mBACjBK,EACA,UACAS,EAAO8I,OAAOuI,8BAKrB9N,OAAM,YlBtCJ,SAAoB2N,GAuGzBA,EAtGsB,CACpB,IAAIlS,EACF,eACA,KACA,gBACA,UACA,WACA,SACA+M,GACA,UACAtM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,WACA,QACA+M,GACA,UACAtM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,WACA,UACA+M,GACA,UACAtM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,WACA,UACA+M,GACA,UACAtM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,WACA,SACA+M,GACA,UACAtM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,WACA,QACA+M,GACA,UACAtM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,WACA,UACA+M,GACA,UACAtM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,WACA,UACA+M,GACA,UACAtM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,WACA,SACA+M,GACA,UACAtM,MkB5DA6R,CAAsBJ,MAIrB,SAASK,GAAaL,GAC3BjO,IACGtF,IAAIuF,qDAA+BxF,KACnCyF,MAAK,SAACqO,GACLN,EACEM,EAAU3G,KAAKrO,KAAI,SAACyD,GAClB,IAAIV,EAAW,GACXU,EAASwR,QACXlS,EAAWU,EAASwR,MAAMjV,KAAI,SAACiV,GAC7B,OAAO,IAAIjG,GACTiG,EAAM1R,GACN0R,EAAMxC,QAAQpP,KACd4R,EAAMxC,QAAQ3D,KACd,UAIN,IAAMpM,EAC0B,MAA9Be,EAASf,kBACL,QACAe,EAASf,kBACf,OAAO,IAAIF,EACTiB,EAASP,aACTR,EACAe,EAAS6I,OAAO3J,gBAChBc,EAAS6I,OAAO1J,iBAChBa,EAAS6I,OAAOzJ,YAChBuR,GAAU3Q,EAASf,mBACnBK,EACA,UACAU,EAAS6I,OAAOuI,8BAKvB9N,OAAM,YlByCJ,SAAsB2N,GA0M3BA,EAzMwB,CACtB,IAAIlS,EACF,eACA,KACA,gBACA,UACA,aACA,SACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,QACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,UACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,UACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,SACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,QACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,UACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,UACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,aACA,SACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,cACA,SACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,cACA,QACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,cACA,UACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,cACA,UACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,cACA,SACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,cACA,QACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,cACA,UACA6M,GACA,UACApM,IAEF,IAAIT,EACF,eACA,KACA,gBACA,UACA,cAC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","file":"static/js/main.c344aa0c.chunk.js","sourcesContent":["import Cookies from \"js-cookie\";\n\nfunction parseJwt(token) {\n  const base64Url = token.split(\".\")[1];\n  const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  const jsonPayload = decodeURIComponent(\n    atob(base64)\n      .split(\"\")\n      .map((c) => {\n        const component = `00${c.charCodeAt(0).toString(16)}`;\n        return `%${component.slice(-2)}`;\n      })\n      .join(\"\")\n  );\n\n  return JSON.parse(jsonPayload);\n}\n\nexport function saveToken(token) {\n  const tokenPayload = parseJwt(token.split(\" \")[1]);\n  const expiryDate = new Date(tokenPayload.exp * 1000);\n  Cookies.set(\"authToken\", token, { expires: expiryDate, SameSite: \"Strict\" });\n}\n\nexport function getAuthorizationHeader() {\n  const token = Cookies.get(\"authToken\");\n  return {\n    headers: { Authorization: `${token}` }\n  };\n}\n\nexport function isAuthenticated() {\n  return !!Cookies.get(\"authToken\");\n}\n\nexport function isAdmin() {\n  const token = Cookies.get(\"authToken\");\n  const tokenPayload = parseJwt(token.split(\" \")[1]);\n  return tokenPayload.role === \"ADMIN\" || tokenPayload.role === \"SUPERUSER\";\n}\n\nexport default {\n  saveToken,\n  getAuthorizationHeader\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\n\nexport default class ProtectedRoute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.component = this.component.bind(this);\n  }\n\n  component(location) {\n    const { authenticationRequired, render } = this.props;\n    const authenticated = isAuthenticated();\n\n    if (authenticationRequired) {\n      if (authenticated) {\n        return render(location);\n      }\n\n      return <Redirect to={{ pathname: \"/Login\" }} />;\n    }\n\n    if (authenticated) {\n      return <Redirect to={{ pathname: \"/Home\" }} />;\n    }\n\n    return render(location);\n  }\n\n  render() {\n    const { path } = this.props;\n    return (\n      <Route\n        exact\n        path={path}\n        render={({ location }) => this.component(location)}\n      />\n    );\n  }\n}\n\nProtectedRoute.propTypes = {\n  path: PropTypes.string.isRequired,\n  authenticationRequired: PropTypes.bool,\n  render: PropTypes.func.isRequired\n};\n\nProtectedRoute.defaultProps = {\n  authenticationRequired: false\n};\n","export default class DeviceInfo {\n  constructor(\n    serial,\n    lastCommunication,\n    publicIpAddress,\n    privateIpAddress,\n    displayName,\n    status,\n    channels,\n    deviceType,\n    extras\n  ) {\n    this.serialNumber = serial;\n    this.lastCommunication = lastCommunication;\n    this.publicIp = publicIpAddress;\n    this.privateIp = privateIpAddress;\n    this.name = displayName;\n    this.status = status;\n    this.channels = channels;\n    this.deviceType = deviceType;\n    this.extras = extras;\n  }\n}\n","export default class StreamInfo {\n  // to be used once backend has date, status, type, and time fields\n  // constructor(id, date, sender, receiver, status, type, time, extras) {\n  //     this.id = id;\n  //     this.date = new Date(date).toString().split(\" \").slice(0, 5).join(\" \");\n  //     this.sender = sender;\n  //     this.receiver = receiver;\n  //     this.status = status;\n  //     this.type = type;\n  //     this.time = time;\n  //     this.extras = extras;\n  // }\n\n  // temporary with static fields until backend is up to snuff\n  constructor(id, sender, receiver, outputChannel, inputChannel) {\n    this.id = id;\n    this.date = \"2020-10-31T08:15:30\";\n    this.sender = sender;\n    this.receiver = receiver;\n    this.outputChannel = outputChannel;\n    this.inputChannel = inputChannel;\n    this.status = \"Online\";\n    this.type = \"Type 1\";\n    this.time = \"00:34:44\";\n  }\n}\n","import React from \"react\";\nimport { Box, Breadcrumbs, Link, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport { NavigateNext } from \"@material-ui/icons\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default function DynamicBreadcrumb(props) {\n  const { breadcrumbs } = props;\n  return (\n    <Box padding=\"2em 0em 0em\">\n      <Breadcrumbs\n        aria-label=\"breadcrumb\"\n        separator={<NavigateNext fontSize=\"medium\" />}\n      >\n        {breadcrumbs.map((crumb) => {\n          return (\n            <Link\n              component={NavLink}\n              to={{\n                pathname: crumb[1],\n                state: crumb[2] ? crumb[2] : null\n              }}\n              key={`breadcrumb ${crumb[0]}`}\n            >\n              <Typography color=\"textPrimary\">{crumb[0]}</Typography>\n            </Link>\n          );\n        })}\n      </Breadcrumbs>\n    </Box>\n  );\n}\nDynamicBreadcrumb.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.objectOf(\n          PropTypes.oneOfType([\n            PropTypes.instanceOf(DeviceInfo),\n            PropTypes.instanceOf(StreamInfo)\n          ])\n        )\n      ])\n    )\n  ).isRequired\n};\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { SwapHoriz } from \"@material-ui/icons/\";\n\nexport default function StreamButton(props) {\n  const { type } = props;\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      padding: \"0 5px\",\n      margin: \"1em\"\n    },\n    label: {\n      textTransform: \"\"\n    }\n  })(Button);\n\n  return (\n    <StyledButton type={type}>\n      <div className=\"buttonText\">\n        <SwapHoriz />\n        Stream\n      </div>\n    </StyledButton>\n  );\n}\n\nStreamButton.propTypes = {\n  type: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport StreamButton from \"./Buttons/StreamButton\";\n\nexport default function TitleButtons() {\n  return (\n    <div className=\"alignRightFloat\">\n      <NavLink\n        to=\"/Streams/New\"\n        activeClassName=\"hideLinkStyle\"\n        className=\"hideLinkStyle\"\n        exact\n      >\n        <StreamButton type=\"submit\" />\n      </NavLink>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TitleButtons from \"./TitleButtons\";\n\nexport default function Title(props) {\n  const { title, deviceList } = props;\n  return (\n    <Box className=\"flexContents headerAreaUnderline\">\n      <div className=\"title\">{title}</div>\n      {deviceList ? <TitleButtons /> : <></>}\n    </Box>\n  );\n}\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  deviceList: PropTypes.bool.isRequired\n};\n","import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport * as AuthenticationUtil from \"./AuthenticationUtil\";\n\nexport const unknownErrorMessage =\n  \"An unknown error occurred. Please try again later.\";\nexport const incorrectCredentialsMessage =\n  \"Incorrect username and/or password. Please enter the correct credentials and try again.\";\n\nexport async function logIn(credentials) {\n  const authorizationHeader = {\n    auth: {\n      username: credentials.username,\n      password: credentials.password\n    }\n  };\n\n  return axios\n    .get(process.env.REACT_APP_TOKEN, authorizationHeader)\n    .then((response) => {\n      AuthenticationUtil.saveToken(response.headers.authorization);\n    })\n    .catch((error) => {\n      let message = unknownErrorMessage;\n      if (error.response && error.response.status === \"403\") {\n        message = incorrectCredentialsMessage;\n      }\n      return Promise.reject(new Error(message));\n    });\n}\n\nexport function logOut() {\n  Cookies.remove(\"authToken\");\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport { AppBar, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\nimport { AccountCircle, Home } from \"@material-ui/icons/\";\n\nimport { logOut } from \"../api/AuthenticationApi\";\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\n\nclass HeaderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      menuButton: {\n        marginRight: theme.spacing(2)\n      }\n    }));\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout() {\n    const { history } = this.props;\n    logOut();\n    history.push(\"/Login\");\n  }\n\n  render() {\n    return (\n      <div className=\"headerBar\">\n        <AppBar position=\"static\">\n          <Toolbar className=\"darkGrey\">\n            <div className=\"headerTitle\">\n              <NavLink to=\"/Home\" className=\"headerTitle\">\n                <IconButton\n                  edge=\"start\"\n                  className={this.classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"menu\"\n                >\n                  <Home />\n                </IconButton>\n              </NavLink>\n              Switchboard\n            </div>\n            <IconButton\n              id=\"acctBtn\"\n              color=\"inherit\"\n              disabled={!isAuthenticated()}\n              onClick={this.handleLogout}\n            >\n              <AccountCircle />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\nexport default withRouter(HeaderBar);\n\nHeaderBar.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"@material-ui/core\";\nimport DynamicBreadcrumb from \"./DynamicBreadcrumb\";\nimport Title from \"./Title\";\nimport HeaderBar from \"./HeaderBar\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default function Page(props) {\n  const { breadcrumbs, title, deviceList, children } = props;\n  return (\n    <>\n      <HeaderBar />\n      <Container>\n        <DynamicBreadcrumb breadcrumbs={breadcrumbs} />\n        <Title title={title} deviceList={deviceList} />\n        {children}\n      </Container>\n    </>\n  );\n}\n\nPage.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.objectOf(\n          PropTypes.oneOfType([\n            PropTypes.instanceOf(DeviceInfo),\n            PropTypes.instanceOf(StreamInfo)\n          ])\n        )\n      ])\n    )\n  ).isRequired,\n  title: PropTypes.string.isRequired,\n  deviceList: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\nPage.defaultProps = {\n  deviceList: false\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    color: \"#ef5350\"\n  }\n}));\n\nexport default function LoginFailedDialog(props) {\n  const classes = useStyles();\n  const { open, setOpen, message } = props;\n\n  const closeDialog = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Dialog open={open} onClose={closeDialog}>\n        <DialogTitle id=\"login-failed-dialog-title\" className={classes.title}>\n          Login Failed\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"login-failed-dialog-description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nLoginFailedDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired\n};\n","import React, { useState } from \"react\";\nimport { Button, Container, makeStyles, TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function LoginConsole(props) {\n  const { handleSubmit } = props;\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit(username, password);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nLoginConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport LoginFailedDialog from \"./LoginFailedDialog\";\nimport LoginConsole from \"./LoginConsole\";\nimport { logIn } from \"../api/AuthenticationApi\";\n\nexport default class LoginPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogOpen: false,\n      dialogMessage: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setDialogOpen = this.setDialogOpen.bind(this);\n    this.setDialogMessage = this.setDialogMessage.bind(this);\n  }\n\n  handleSubmit(username, password) {\n    const { history } = this.props;\n    logIn({ username, password })\n      .then(() => {\n        history.push(\"/Home\");\n      })\n      .catch((error) => {\n        this.setState({\n          dialogOpen: true,\n          dialogMessage: error.message\n        });\n      });\n  }\n\n  setDialogOpen(open) {\n    this.setState({\n      dialogOpen: open\n    });\n  }\n\n  setDialogMessage(message) {\n    this.setState({\n      dialogMessage: message\n    });\n  }\n\n  render() {\n    const { dialogOpen, dialogMessage } = this.state;\n    return (\n      <>\n        <LoginConsole handleSubmit={this.handleSubmit} />\n        <LoginFailedDialog\n          open={dialogOpen}\n          setOpen={this.setDialogOpen}\n          message={dialogMessage}\n        />\n      </>\n    );\n  }\n}\n\nLoginPageContents.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Page from \"../general/Page\";\nimport LoginPageContents from \"./LoginPageContents\";\n\nexport default function LoginPage() {\n  const history = useHistory();\n\n  return (\n    <Page title=\"Login\" breadcrumbs={[]}>\n      <LoginPageContents history={history} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function GridColumn(props) {\n  const { width, spacing, children } = props;\n  return (\n    <Grid item xs={width}>\n      <Grid container spacing={spacing}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\nGridColumn.propTypes = {\n  width: PropTypes.number.isRequired,\n  spacing: PropTypes.number,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nGridColumn.defaultProps = {\n  spacing: 3\n};\n","export default class ButtonInfo {\n  constructor(pathname, referenceObject, buttonText, onClick) {\n    this.pathname = pathname;\n    this.referenceObject = referenceObject;\n    this.buttonText = buttonText;\n    this.onClick = onClick;\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport ButtonInfo from \"./ButtonInfo\";\n\nexport default function SmallCardButton(props) {\n  const {\n    button: { pathname, referenceObject, buttonText, onClick }\n  } = props;\n\n  if (onClick) {\n    return (\n      <Button variant=\"contained\" size=\"small\" onClick={onClick}>\n        {buttonText}\n      </Button>\n    );\n  }\n\n  return (\n    <NavLink\n      activeClassName=\"hideLinkStyle\"\n      className=\"hideLinkStyle\"\n      to={{\n        pathname,\n        state: { device: referenceObject }\n      }}\n    >\n      <Button variant=\"contained\" size=\"small\">\n        {buttonText}\n      </Button>\n    </NavLink>\n  );\n}\n\nSmallCardButton.propTypes = {\n  button: PropTypes.instanceOf(ButtonInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Typography, Paper, Grid, Box } from \"@material-ui/core\";\nimport SmallCardButton from \"./SmallCardButton\";\nimport ButtonInfo from \"./ButtonInfo\";\n\nexport default function DashboardCard(props) {\n  const { title, children, button } = props;\n  return (\n    <Paper className=\"dashboardCard\" elevation={2}>\n      <Typography variant=\"h5\" gutterBottom>\n        {title}\n      </Typography>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        {children}\n        {button ? (\n          <Grid item xs={12}>\n            <Box className=\"alignRightFloatPadded\">\n              <SmallCardButton button={button} />\n            </Box>\n          </Grid>\n        ) : null}\n      </Grid>\n    </Paper>\n  );\n}\n\nDashboardCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]),\n  button: PropTypes.instanceOf(ButtonInfo)\n};\n\nDashboardCard.defaultProps = {\n  children: \"\",\n  button: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Link, Button, withStyles } from \"@material-ui/core\";\n\nexport default function DashboardButton(props) {\n  const { href, children } = props;\n\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      minWidth: 100,\n      maxWidth: 200,\n      padding: \"0 5px\",\n      textTransform: \"none\"\n    }\n  })(Button);\n  return (\n    <Link color=\"inherit\" href={href}>\n      <StyledButton>{children}</StyledButton>\n    </Link>\n  );\n}\n\nDashboardButton.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  ArrowDownward,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default class StreamsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = {\n      toolbar: false,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: false,\n      draggable: false\n    };\n    this.icons = {\n      SortArrow: ArrowDownward,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  getIcons() {\n    return this.icons;\n  }\n\n  render() {\n    const { streams, columns } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer>\n            <MaterialTable\n              columns={columns}\n              data={streams}\n              options={this.getOptions()}\n              icons={this.getIcons()}\n            />\n          </TableContainer>\n          <div className=\"textAlignRightPadded\">\n            {\"Time Zone: \".concat(\n              Intl.DateTimeFormat().resolvedOptions().timeZone\n            )}\n          </div>\n        </Box>\n      </>\n    );\n  }\n}\n\nStreamsTable.propTypes = {\n  streams: PropTypes.arrayOf(PropTypes.instanceOf(StreamInfo)).isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      field: PropTypes.string.isRequired,\n      filtering: PropTypes.bool,\n      sorting: PropTypes.bool,\n      render: PropTypes.func,\n      align: PropTypes.string,\n      export: PropTypes.bool\n    })\n  ).isRequired\n};\n","export default class OutputChannelInfo {\n  constructor(id, name, port, encoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.encoder = encoder;\n  }\n}\n","export default class InputChannelInfo {\n  constructor(id, name, port, decoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.decoder = decoder;\n  }\n}\n","export default class LogInfo {\n  constructor(id, dateTime, level, message) {\n    this.id = id;\n    this.dateTime = dateTime;\n    this.level = level;\n    this.message = message;\n  }\n}\n","import DeviceInfo from \"../model/DeviceInfo\";\nimport OutChannelInfo from \"../model/OutputChannelInfo\";\nimport InChannelInfo from \"../model/InputChannelInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport LogInfo from \"../model/LogInfo\";\n\nconst extras = [\"Additional Device details go here\"];\nconst sampleInputChannels = [\n  new InChannelInfo(1, \"Input ch 1\", 500, null),\n  new InChannelInfo(2, \"Input ch 2\", 456, null),\n  new InChannelInfo(3, \"Input ch 3\", 800, null)\n];\nconst sampleOutputChannels = [\n  new OutChannelInfo(1, \"Output ch 1\", 500, null),\n  new OutChannelInfo(2, \"Output ch 2\", 456, null),\n  new OutChannelInfo(3, \"Output ch 3\", 800, null)\n];\n\nexport function getSenders(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:30:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 3\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:40:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 4\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:50:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 5\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:60:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 6\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:70:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 7\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:80:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 8\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:90:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 9\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n\n  callback(sampleSenders);\n}\n\nexport function getSampleSender() {\n  return new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n}\n\nexport function getReceivers(callback) {\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:03:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 3\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:04:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 4\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:05:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 5\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:06:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 6\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:07:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 7\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:08:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 8\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:09:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 9\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:11:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 11\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:21:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 12\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:31:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 13\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:41:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 14\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:51:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 15\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:61:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 16\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:71:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 17\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:81:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 18\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:91:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 19\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  callback(sampleReceivers);\n}\n\nexport function getAllStreams() {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  return [\n    new StreamInfo(1, sampleSenders[0], sampleReceivers[0], 1, 2),\n    new StreamInfo(2, sampleSenders[1], sampleReceivers[1], 3, 4),\n    new StreamInfo(3, sampleSenders[1], sampleReceivers[0], 5, 6)\n  ];\n}\n\nexport function getSampleStream() {\n  const sampleSender = new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n\n  const sampleReceiver = new DeviceInfo(\n    \"1:22:333:989\",\n    null,\n    \"145:396\",\n    \"Receiver 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"decoder\",\n    extras\n  );\n\n  return new StreamInfo(\n    1,\n    sampleSender,\n    sampleReceiver,\n    sampleSender.channels[0].port,\n    sampleReceiver.channels[1].port\n  );\n}\n\nexport function getAllLogs(callback) {\n  const dates = [\n    \"2020-10-31T15:53:23\",\n    \"2020-11-13T12:36:30\",\n    \"2020-11-13T08:24:30\"\n  ];\n\n  const sampleLogs = [\n    new LogInfo(1, dates[0], \"Info\", \"Log 1 info\"),\n    new LogInfo(2, dates[1], \"Info\", \"Log 2 info\"),\n    new LogInfo(3, dates[2], \"Info\", \"Log 3 info\")\n  ];\n\n  callback(sampleLogs);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StreamsTable from \"./StreamsTable\";\nimport { getAllStreams } from \"../api/SampleData\";\n\nexport default class StreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: []\n    };\n    this.dataSource = props.dataSource;\n    this.handleStreamsChange = this.handleStreamsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource\n      .getAllStreams()\n      .then(this.handleStreamsChange)\n      .catch(() => {\n        this.handleStreamsChange(getAllStreams());\n      });\n  }\n\n  handleStreamsChange(streams) {\n    this.setState({\n      streams\n    });\n  }\n\n  render() {\n    const { streams } = this.state;\n    const { columns } = this.props;\n    return <StreamsTable streams={streams} columns={columns} />;\n  }\n}\n\nStreamsTableWrapper.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      field: PropTypes.string.isRequired,\n      filtering: PropTypes.bool,\n      sorting: PropTypes.bool,\n      render: PropTypes.func,\n      align: PropTypes.string,\n      export: PropTypes.bool\n    })\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class StatusIndicator extends React.Component {\n  getStatusStyle() {\n    const { status } = this.props;\n    switch (status) {\n      case \"Online\":\n        return \"green statusIndicatorBody statusTextOnline \";\n      case \"Pending\":\n        return \"yellow statusIndicatorBody statusTextOnline\";\n      case \"Error\":\n        return \"red statusIndicatorBody statusTextOnline\";\n      default:\n        return \"lightGrey statusIndicatorBody statusTextOffline\";\n    }\n  }\n\n  render() {\n    const { status } = this.props;\n    return <div className={this.getStatusStyle()}>{status}</div>;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.oneOf([\"Online\", \"Offline\", \"Error\", \"Pending\"]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Description } from \"@material-ui/icons\";\nimport { NavLink } from \"react-router-dom\";\n\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default function StreamDetailsButton(props) {\n  const { streamInfo } = props;\n\n  return (\n    <>\n      <NavLink\n        to={{\n          pathname: `/Streams/Details/${streamInfo.id}`,\n          state: { stream: streamInfo }\n        }}\n      >\n        <IconButton>\n          <Description />\n        </IconButton>\n      </NavLink>\n    </>\n  );\n}\n\nStreamDetailsButton.propTypes = {\n  streamInfo: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","export default class StreamStatisticsInfo {\n  constructor(id, time, window, link, send, receive) {\n    this.id = id;\n    this.time = time;\n    this.window = window;\n    this.link = link;\n    this.send = send;\n    this.receive = receive;\n  }\n}\n","export default class StreamStatsSendInfo {\n  constructor(sending) {\n    this.packets = sending.packets;\n    this.packetsLost = sending.packetsLost;\n    this.packetsDropped = sending.packetsDropped;\n    this.packetsRetransmitted = sending.packetsRetransmitted;\n    this.bytes = sending.bytes;\n    this.bytesDropped = sending.bytesDropped;\n    this.mbitRate = sending.mbitRate;\n  }\n}\n","export default class StreamStatsReceiveInfo {\n  constructor(receiving) {\n    this.packets = receiving.packets;\n    this.packetsLost = receiving.packetsLost;\n    this.packetsDropped = receiving.packetsDropped;\n    this.packetsRetransmitted = receiving.packetsRetransmitted;\n    this.packetsBelated = receiving.packetsBelated;\n    this.bytes = receiving.bytes;\n    this.bytesLost = receiving.bytesLost;\n    this.bytesDropped = receiving.bytesDropped;\n    this.mbitRate = receiving.mbitRate;\n  }\n}\n","export default class StreamStatsLinkInfo {\n  constructor(link) {\n    this.rtt = link.rtt;\n    this.bandwidth = link.bandwidth;\n    this.maxBandwidth = link.maxBandwidth;\n  }\n}\n","export default class StreamStatsWindowInfo {\n  constructor(window) {\n    this.flow = window.flow;\n    this.congestion = window.congestion;\n    this.flight = window.flight;\n  }\n}\n","import DeviceInfo from \"./DeviceInfo\";\nimport StreamStatisticsInfo from \"./StreamStatistics/StreamStatisticsInfo\";\nimport StreamStatsSendInfo from \"./StreamStatistics/StreamStatsSendInfo\";\nimport StreamStatsReceiveInfo from \"./StreamStatistics/StreamStatsReceiveInfo\";\nimport StreamStatsLinkInfo from \"./StreamStatistics/StreamStatsLinkInfo\";\nimport StreamStatsWindowInfo from \"./StreamStatistics/StreamStatsWindowInfo\";\n\nexport function convertDeviceToDataObject(databaseDevice) {\n  return new DeviceInfo(\n    databaseDevice.serialNumber,\n    databaseDevice.lastCommunication,\n    databaseDevice.device.publicIpAddress,\n    databaseDevice.device.privateIpAddress,\n    databaseDevice.device.displayName,\n    databaseDevice.device.status,\n    databaseDevice.inputs || databaseDevice.outputs,\n    databaseDevice.inputs ? \"receiver\" : \"sender\"\n  );\n}\n\nexport function convertStatsToDataObject(databaseStats) {\n  return new StreamStatisticsInfo(\n    databaseStats.id,\n    databaseStats.time,\n    new StreamStatsWindowInfo(databaseStats.window),\n    new StreamStatsLinkInfo(databaseStats.link),\n    new StreamStatsSendInfo(databaseStats.send),\n    new StreamStatsReceiveInfo(databaseStats.recv)\n  );\n}\n\nexport function convertToServiceObject(deviceInfo) {\n  const serviceObject = {\n    serialNumber: deviceInfo.serialNumber,\n    lastCommunication: deviceInfo.lastCommunication,\n    device: {\n      serialNumber: deviceInfo.serialNumber,\n      publicIpAddress: deviceInfo.publicIp,\n      privateIpAddress: deviceInfo.privateIp,\n      displayName: deviceInfo.name,\n      status: deviceInfo.status\n    }\n  };\n  if (deviceInfo.deviceType === \"sender\") {\n    serviceObject.outputs = deviceInfo.channels;\n  } else {\n    serviceObject.inputs = deviceInfo.channels;\n  }\n  return serviceObject;\n}\n","import axios from \"axios\";\nimport {\n  convertDeviceToDataObject,\n  convertStatsToDataObject\n} from \"../model/ConvertDataFormat\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nexport async function getStream(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAM}/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      const stream = response.data;\n      return new StreamInfo(\n        stream.id,\n        convertDeviceToDataObject(stream.outputChannel.encoder),\n        convertDeviceToDataObject(stream.inputChannel.decoder),\n        stream.outputChannel.channel.port,\n        stream.inputChannel.channel.port\n      );\n    });\n}\n\nexport async function getAllStreams() {\n  return axios\n    .get(process.env.REACT_APP_STREAM, getAuthorizationHeader())\n    .then((streams) => {\n      return Promise.all(\n        streams.data.map((streamId) => {\n          return getStream(streamId);\n        })\n      );\n    });\n}\n\nexport async function deleteStream(streamId) {\n  return axios.delete(\n    `${process.env.REACT_APP_STREAM}/${streamId}`,\n    getAuthorizationHeader()\n  );\n}\n\nexport async function createStream(selectedReceiverID, selectedSenderID) {\n  return axios.post(\n    process.env.REACT_APP_STREAM,\n    {\n      inputChannelId: selectedReceiverID,\n      outputChannelId: selectedSenderID\n    },\n    getAuthorizationHeader()\n  );\n}\n\nexport async function getStreamStatistics(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAM}/statistics/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      const stats = response.data;\n      return convertStatsToDataObject(stats);\n    });\n}\n","import React from \"react\";\nimport StreamsTableWrapper from \"./StreamsTableWrapper\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport StreamDetailsButton from \"./StreamDetailsButton\";\nimport * as streamDataSource from \"../api/StreamApi\";\n\nexport default class SimpleStreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.simpleColumns = [\n      {\n        title: \"Sender\",\n        field: \"sender.name\"\n      },\n      {\n        title: \"Receiver\",\n        field: \"receiver.name\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        }\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <StreamDetailsButton streamInfo={rowData} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n  }\n\n  getSimpleColumns() {\n    return this.simpleColumns;\n  }\n\n  render() {\n    return (\n      <StreamsTableWrapper\n        dataSource={streamDataSource}\n        columns={this.getSimpleColumns()}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\nimport SimpleStreamsTableWrapper from \"../streamlist/SimpleStreamsTableWrapper\";\n\nexport default function ActiveStreamCard() {\n  return (\n    <DashboardCard title=\"Active Streams\" style={{ height: \"100%\" }}>\n      <Grid item xs={12}>\n        <SimpleStreamsTableWrapper />\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Streams\">See More</DashBoardButton>\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Streams/New\">Start Stream</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function ActivityLogCard() {\n  return (\n    <DashboardCard title=\"Activity Logs\">\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Logs\">View All</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function DevicesCard() {\n  return (\n    <DashboardCard title=\"Devices\">\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Devices\">View Senders</DashBoardButton>\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Devices\">View Receivers</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function AdminPanelCard() {\n  return (\n    <DashboardCard title=\"Admin Panel\">\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Admin\">View Users</DashBoardButton>\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Admin/New\">Create a User</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport GridColumn from \"../general/dashboard/GridColumn\";\nimport ActiveStreamCard from \"./ActiveStreamCard\";\nimport ActivityLogCard from \"./ActivityLogCard\";\nimport DevicesCard from \"./DevicesCard\";\nimport AdminPanelCard from \"./AdminPanelCard\";\n\nimport { isAdmin } from \"../api/AuthenticationUtil\";\n\nexport default function HomePageContents() {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"stretch\"\n      direction=\"row\"\n      spacing={3}\n    >\n      <Grid item xs={6}>\n        <Grid style={{ height: \"100%\" }}>\n          <ActiveStreamCard />\n        </Grid>\n      </Grid>\n      <GridColumn width={6}>\n        <Grid item xs={12}>\n          <DevicesCard />\n        </Grid>\n        <Grid item xs={12}>\n          <ActivityLogCard />\n        </Grid>\n        {isAdmin() ? (\n          <Grid item xs={12}>\n            <AdminPanelCard />\n          </Grid>\n        ) : (\n          <div />\n        )}\n      </GridColumn>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport HomePageContents from \"./HomePageContents\";\n\nexport default function HomePage() {\n  return (\n    <Page title=\"Dashboard\" breadcrumbs={[[\"Home\", \"\"]]}>\n      <HomePageContents />\n    </Page>\n  );\n}\n","import axios from \"axios\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport * as SampleData from \"./SampleData\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nfunction getStatus(lastCommunicationString) {\n  if (!lastCommunicationString) {\n    return \"Pending\";\n  }\n\n  const lastCommunicationDate = new Date(`${lastCommunicationString}Z`);\n  const diff = Date.now() - lastCommunicationDate.getTime();\n  const tenMinutes = 10 * 60 * 1000;\n  if (diff < tenMinutes) {\n    return \"Online\";\n  }\n  return \"Offline\";\n}\n\nexport function getSenders(callback) {\n  axios\n    .get(process.env.REACT_APP_ENCODER, getAuthorizationHeader())\n    .then((senders) => {\n      callback(\n        senders.data.map((sender) => {\n          let channels = [];\n          if (sender.output) {\n            channels = sender.output.map((output) => {\n              return new OutputChannelInfo(\n                output.id,\n                output.channel.name,\n                output.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            sender.lastCommunication == null\n              ? \"Never\"\n              : sender.lastCommunication;\n          return new DeviceInfo(\n            sender.serialNumber,\n            lastCommunication,\n            sender.device.publicIpAddress,\n            sender.device.privateIpAddress,\n            sender.device.displayName,\n            getStatus(sender.lastCommunication),\n            channels,\n            \"encoder\",\n            sender.device.configurationInstance\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getSenders(callback);\n    });\n}\n\nexport function getReceivers(callback) {\n  axios\n    .get(process.env.REACT_APP_DECODER, getAuthorizationHeader())\n    .then((receivers) => {\n      callback(\n        receivers.data.map((receiver) => {\n          let channels = [];\n          if (receiver.input) {\n            channels = receiver.input.map((input) => {\n              return new InputChannelInfo(\n                input.id,\n                input.channel.name,\n                input.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            receiver.lastCommunication == null\n              ? \"Never\"\n              : receiver.lastCommunication;\n          return new DeviceInfo(\n            receiver.serialNumber,\n            lastCommunication,\n            receiver.device.publicIpAddress,\n            receiver.device.privateIpAddress,\n            receiver.device.displayName,\n            getStatus(receiver.lastCommunication),\n            channels,\n            \"decoder\",\n            receiver.device.configurationInstance\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getReceivers(callback);\n    });\n}\n\nexport function deleteDevice(deviceId) {\n  return axios.delete(\n    `${process.env.REACT_APP_DEVICE}/${deviceId}`,\n    getAuthorizationHeader()\n  );\n}\n\nexport async function updateDeviceName(deviceId, updatedName) {\n  return axios.put(\n    process.env.REACT_APP_DEVICE,\n    {\n      serialNumber: deviceId,\n      displayName: updatedName\n    },\n    getAuthorizationHeader()\n  );\n}\n\n// https://programmingwithmosh.com/javascript/react-file-upload-proper-server-side-nodejs-easy/\nexport async function uploadConfiguration(deviceId, configFile) {\n  const data = new FormData();\n  data.append(\"configuration\", configFile);\n  const headers = getAuthorizationHeader();\n  // eslint-disable-next-line\n  headers.headers[\"Content-Type\"] = `multipart/form-data; boundary=${data[\"_boundary\"]}` ;\n  return axios.put(\n    `${process.env.REACT_APP_DEVICE}/config/${deviceId}`,\n    data,\n    headers\n  );\n}\n","import { InputBase, withStyles } from \"@material-ui/core\";\n\nexport default withStyles({\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    fontWeight: 500,\n    letterSpacing: \"0.0075em\",\n    lineHeight: \"1.6\",\n    fontSize: \"1.25rem\",\n    padding: \"10px 26px 10px 12px\",\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  }\n})(InputBase);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MenuItem, Select } from \"@material-ui/core\";\nimport StyledInput from \"./StyledInput\";\n\nexport default class DeviceTableTitle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { handleChange } = this.props;\n    handleChange(event.target.value);\n  }\n\n  render() {\n    const { index } = this.props;\n    return (\n      <Select\n        id=\"device-table-title-select\"\n        value={index}\n        onChange={this.handleChange}\n        input={<StyledInput />}\n      >\n        <MenuItem value={0}>All Devices</MenuItem>\n        <MenuItem value={1}>Senders</MenuItem>\n        <MenuItem value={2}>Receivers</MenuItem>\n      </Select>\n    );\n  }\n}\n\nDeviceTableTitle.propTypes = {\n  index: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function ChannelDetailsTableHead() {\n  return (\n    <TableRow>\n      <TableCell className=\"lightGrey\">ID</TableCell>\n      <TableCell className=\"lightGrey\">Name</TableCell>\n      <TableCell className=\"lightGrey\">Port</TableCell>\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\n\nexport default function ChannelDetailsTableRow(props) {\n  const {\n    channel: { id, name, port }\n  } = props;\n  return (\n    <TableRow>\n      <TableCell>{id}</TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{port}</TableCell>\n    </TableRow>\n  );\n}\nChannelDetailsTableRow.propTypes = {\n  channel: PropTypes.oneOfType([\n    PropTypes.instanceOf(InputChannelInfo),\n    PropTypes.instanceOf(OutputChannelInfo)\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Table, TableBody, TableHead } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport ChannelDetailsTableHead from \"./ChannelDetailsTableHead\";\nimport ChannelDetailsTableRow from \"./ChannelDetailsTableRow\";\n\nexport default function ChannelDetailsTable(props) {\n  const { channels } = props;\n  return (\n    <Table className=\"flexContents\">\n      <TableHead>\n        <ChannelDetailsTableHead />\n      </TableHead>\n      <TableBody>\n        {channels.map((channel) => {\n          return (\n            <ChannelDetailsTableRow channel={channel} key={channel.name} />\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\nChannelDetailsTable.propTypes = {\n  channels: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.instanceOf(InputChannelInfo),\n      PropTypes.instanceOf(OutputChannelInfo)\n    ])\n  ).isRequired\n};\n","import React from \"react\";\nimport { Snackbar, SnackbarContent, IconButton, Box } from \"@material-ui/core\";\nimport { CheckCircle, Error, Close } from \"@material-ui/icons\";\n\nlet openSnackbar;\n\nexport default class SnackbarMessage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      status: \"\",\n      message: \"\"\n    };\n    this.openSnackbar = this.openSnackbar.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  componentDidMount() {\n    openSnackbar = this.openSnackbar;\n  }\n\n  handleClose(event, reason) {\n    if (reason !== \"clickaway\") {\n      this.setState({\n        open: false\n      });\n    }\n  }\n\n  openSnackbar(stat, msg) {\n    this.setState({\n      open: true,\n      status: stat,\n      message: msg\n    });\n  }\n\n  render() {\n    const { open, status, message } = this.state;\n    const isSuccess = status === \"success\";\n    return (\n      <>\n        <Snackbar\n          contentprops={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\"\n          }}\n          open={open}\n          autoHideDuration={3000}\n          onClose={this.handleClose}\n        >\n          <SnackbarContent\n            style={{\n              backgroundColor: isSuccess ? \"#4caf50\" : \"#f44336\"\n            }}\n            // prettier-ignore\n            message={(\n              <Box id='message-id' className=\"snackMessage\">\n                {isSuccess ? \n                  <CheckCircle className=\"iconPadding\" /> : \n                  <Error className=\"iconPadding\" />}\n                {message}\n              </Box>\n            )}\n            action={[\n              <IconButton\n                key=\"close\"\n                aria-label=\"Close\"\n                color=\"inherit\"\n                onClick={this.handleClose}\n              >\n                <Close />\n              </IconButton>\n            ]}\n          />\n        </Snackbar>\n      </>\n    );\n  }\n}\n\nexport function snackbar(status, message) {\n  openSnackbar(status, message);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { MenuItem } from \"@material-ui/core\";\n\nimport * as DeviceApi from \"../../api/DeviceApi\";\nimport { snackbar } from \"../SnackbarMessage\";\n\nfunction renderDeleteButton(openDeleteDialog) {\n  return (\n    <Button\n      id=\"deleteBtn\"\n      variant=\"outlined\"\n      color=\"secondary\"\n      onClick={openDeleteDialog}\n    >\n      Delete\n    </Button>\n  );\n}\n\nfunction renderDeleteMenuItem(openDeleteDialog) {\n  return (\n    <MenuItem onClick={openDeleteDialog}>\n      <span className=\"warningText\">Delete</span>\n    </MenuItem>\n  );\n}\n\nexport default function DeleteDeviceButton(props) {\n  const { button, deleteId } = props;\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n\n  const openDeleteDialog = () => {\n    return setOpen(true);\n  };\n  const cancelDelete = () => {\n    return setOpen(false);\n  };\n\n  const confirmDelete = () => {\n    DeviceApi.deleteDevice(deleteId)\n      .then(() => {\n        if (history.location.pathname.endsWith(\"Devices\")) {\n          history.go(0);\n        } else {\n          history.push(\"/Devices\");\n        }\n      })\n      .catch(() => {\n        snackbar(\n          \"error\",\n          `Could not delete device (Serial Number: ${deleteId})`\n        );\n      });\n    return setOpen(false);\n  };\n\n  return (\n    <>\n      {button\n        ? renderDeleteButton(openDeleteDialog)\n        : renderDeleteMenuItem(openDeleteDialog)}\n      <Dialog\n        open={open}\n        onClose={cancelDelete}\n        aria-labelledby=\"delete-stream-dialog-title\"\n        aria-describedby=\"delete-stream-dialog-description\"\n        id=\"delete-stream-dialog\"\n      >\n        <DialogTitle id=\"delete-stream-dialog-title\">\n          Confirm Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"delete-stream-dialog-description\">\n            Are you sure you want to delete this device?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button id=\"cancelDeleteBtn\" onClick={cancelDelete} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            id=\"confirmDeleteBtn\"\n            onClick={confirmDelete}\n            color=\"secondary\"\n            autoFocus\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nDeleteDeviceButton.propTypes = {\n  button: PropTypes.bool.isRequired,\n  deleteId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { MoreVert } from \"@material-ui/icons/\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeleteDeviceButton from \"../general/Buttons/DeleteDeviceButton\";\n\nexport default class ActionMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorElement: null\n    };\n\n    this.setAnchorElement = this.setAnchorElement.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick(event) {\n    this.setAnchorElement(event.currentTarget);\n  }\n\n  handleClose() {\n    this.setAnchorElement(null);\n  }\n\n  setAnchorElement(element) {\n    this.setState({\n      anchorElement: element\n    });\n  }\n\n  render() {\n    const { anchorElement } = this.state;\n    const { device } = this.props;\n    return (\n      <>\n        <IconButton\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n          size=\"small\"\n        >\n          <MoreVert />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorElement}\n          keepMounted\n          open={Boolean(anchorElement)}\n          onClose={this.handleClose}\n          anchorOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n          transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        >\n          <MenuItem onClick={this.handleClose}>\n            <NavLink\n              to={{\n                pathname: `/Devices/Details/${device.serialNumber}`,\n                state: { device }\n              }}\n              className=\"hideLinkStyle\"\n            >\n              View Details\n            </NavLink>\n          </MenuItem>\n          <DeleteDeviceButton button={false} deleteId={device.serialNumber} />\n        </Menu>\n      </>\n    );\n  }\n}\n\nActionMenu.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  FilterList,\n  Search,\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable, { MTableToolbar } from \"material-table\";\n\nimport ChannelDetailsTable from \"./ChannelDetailsTable\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport ActionMenu from \"./ActionMenu\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nfunction getComponents() {\n  return {\n    /*  eslint-disable react/jsx-props-no-spreading */\n    Toolbar: function Components(props) {\n      return (\n        <div className=\"lightestGrey\">\n          <MTableToolbar {...props} />\n        </div>\n      );\n    }\n  };\n}\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"Name\",\n      field: \"name\"\n    },\n    {\n      title: \"Serial Number\",\n      field: \"serialNumber\"\n    },\n    {\n      title: \"Status\",\n      field: \"status\",\n      render: function Status(rowData) {\n        return <StatusIndicator status={rowData.status} />;\n      },\n      lookup: {\n        Online: \"Online\",\n        Pending: \"Pending\",\n        Error: \"Error\",\n        Offline: \"Offline\"\n      }\n    },\n    {\n      title: \"Private IP Address\",\n      field: \"privateIp\"\n    },\n    {\n      title: \"Public IP Address\",\n      field: \"publicIp\"\n    },\n    {\n      title: \"Actions\",\n      field: \"action\",\n      filtering: false,\n      sorting: false,\n      render: function Actions(rowData) {\n        return <ActionMenu device={rowData} />;\n      },\n      align: \"center\",\n      export: false\n    }\n  ];\n}\n\nfunction getDetailPanel() {\n  return [\n    {\n      icon: ExpandMore,\n      openIcon: ExpandLess,\n      tooltip: \"Show Device Details\",\n      render: function DetailPanel(rowData) {\n        return (\n          <div className=\"lightestGrey\" style={{ padding: \"1.5em\" }}>\n            <Typography variant=\"h6\">Channels</Typography>\n            <ChannelDetailsTable channels={rowData.channels} />\n          </div>\n        );\n      }\n    }\n  ];\n}\n\nfunction getOptions() {\n  return {\n    toolbar: true,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: true,\n    draggable: false\n  };\n}\n\nfunction getIcons() {\n  return {\n    Filter: FilterList,\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function DevicesTable(props) {\n  const { title, devices } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer style={{ maxHeight: 570 }}>\n          <MaterialTable\n            title={title}\n            components={getComponents()}\n            columns={getColumnInfo()}\n            data={devices}\n            detailPanel={getDetailPanel()}\n            options={getOptions()}\n            icons={getIcons()}\n          />\n        </TableContainer>\n      </Box>\n    </>\n  );\n}\n\nDevicesTable.propTypes = {\n  title: PropTypes.node.isRequired,\n  devices: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\n\nimport { getSenders, getReceivers } from \"../api/DeviceApi\";\nimport DeviceTableTitle from \"./DeviceTableTitle\";\nimport DevicesTable from \"./DevicesTable\";\n\nexport default class DeviceListPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 0,\n      senders: [],\n      receivers: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.getDevices = this.getDevices.bind(this);\n    this.getTitle = this.getTitle.bind(this);\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n  }\n\n  componentDidMount() {\n    getSenders(this.handleSendersChange);\n    getReceivers(this.handleReceiversChange);\n  }\n\n  handleChange(value) {\n    this.setState({\n      selected: value\n    });\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  getDevices() {\n    const { receivers, senders, selected } = this.state;\n    switch (selected) {\n      case 1:\n        return senders;\n      case 2:\n        return receivers;\n      default:\n        return senders.concat(receivers);\n    }\n  }\n\n  getTitle() {\n    const { selected } = this.state;\n    return (\n      <DeviceTableTitle index={selected} handleChange={this.handleChange} />\n    );\n  }\n\n  render() {\n    return <DevicesTable devices={this.getDevices()} title={this.getTitle()} />;\n  }\n}\n","import React from \"react\";\n\nimport Page from \"../general/Page\";\nimport DeviceListPageContents from \"./DeviceListPageContents\";\n\nexport default function DeviceListPage() {\n  const breadcrumb = [\n    [\"Home\", \"/Home\"],\n    [\"My Devices\", \"/Devices\"]\n  ];\n  return (\n    <Page title=\"My Devices\" breadcrumbs={breadcrumb} deviceList>\n      <DeviceListPageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\nimport { Cancel, Save } from \"@material-ui/icons\";\n\nexport default function EditableName(props) {\n  const { confirmEditing, deviceName, setName, cancelEditing } = props;\n  return (\n    <form className=\"deviceNameEditForm\" onSubmit={confirmEditing}>\n      <Box className=\"flexContents\">\n        <TextField\n          id=\"deviceName\"\n          name=\"deviceName\"\n          required\n          defaultValue={deviceName}\n          onChange={(event) => setName(event.target.value)}\n        />\n        <div className=\"alignRightFloat\">\n          <IconButton id=\"cancelEditBtn\" size=\"small\" onClick={cancelEditing}>\n            <Cancel />\n          </IconButton>\n\n          <IconButton id=\"confirmEditBtn\" type=\"submit\" color=\"primary\">\n            <Save />\n          </IconButton>\n        </div>\n      </Box>\n    </form>\n  );\n}\n\nEditableName.propTypes = {\n  confirmEditing: PropTypes.func.isRequired,\n  deviceName: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired,\n  cancelEditing: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Edit } from \"@material-ui/icons\";\n\nexport default function StaticName(props) {\n  const { deviceName, startEditing } = props;\n  return (\n    <>\n      {deviceName}\n      <div className=\"alignRightFloat\">\n        <IconButton\n          id=\"editBtn\"\n          size=\"small\"\n          color=\"action\"\n          onClick={startEditing}\n        >\n          <Edit />\n        </IconButton>\n      </div>\n    </>\n  );\n}\n\nStaticName.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  startEditing: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport * as DeviceApi from \"../api/DeviceApi\";\nimport EditableName from \"./EditableName\";\nimport StaticName from \"./StaticName\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class DeviceName extends React.Component {\n  constructor(props) {\n    super(props);\n    this.deviceName = props.deviceName;\n    this.deviceId = props.deviceId;\n    this.state = {\n      editing: false,\n      name: this.deviceName\n    };\n\n    this.startEdit = this.startEdit.bind(this);\n    this.cancelEditing = this.cancelEditing.bind(this);\n    this.confirmEditing = this.confirmEditing.bind(this);\n    this.setName = this.setName.bind(this);\n  }\n\n  setName(updatedName) {\n    this.setState({ name: updatedName });\n  }\n\n  startEdit() {\n    this.setState({ editing: true });\n  }\n\n  cancelEditing() {\n    this.setState({ name: this.deviceName });\n    this.setState({ editing: false });\n  }\n\n  confirmEditing(event) {\n    event.preventDefault();\n    const { name: newName } = this.state;\n\n    const oldName = this.deviceName;\n    this.deviceName = newName;\n    this.setState({ editing: false });\n\n    DeviceApi.updateDeviceName(this.deviceId, newName)\n      .then(() => {\n        snackbar(\"success\", `Device successfully renamed to ${newName}`);\n      })\n      .catch(() => {\n        // If update was unsuccessful, return to the old name\n        this.deviceName = oldName;\n        this.forceUpdate();\n        snackbar(\"error\", `Failed to rename device`);\n      });\n  }\n\n  render() {\n    const { editing } = this.state;\n    return (\n      <>\n        {editing ? (\n          <EditableName\n            confirmEditing={this.confirmEditing}\n            deviceName={this.deviceName}\n            setName={this.setName}\n            cancelEditing={this.cancelEditing}\n          />\n        ) : (\n          <StaticName\n            deviceName={this.deviceName}\n            startEditing={this.startEdit}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nDeviceName.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  deviceId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\n\nimport { TableContainer, TableCell, TableRow } from \"@material-ui/core\";\nimport ChannelDetailsTable from \"../../devicelist/ChannelDetailsTable\";\nimport InputChannelInfo from \"../../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../../model/OutputChannelInfo\";\nimport StatusIndicator from \"../../general/StatusIndicator\";\nimport DeviceName from \"../DeviceName\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class DeviceInfoRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getPropertyDisplayName = this.getPropertyDisplayName.bind(this);\n    this.createInnerTable = this.createInnerTable.bind(this);\n    this.createTableCellContents = this.createTableCellContents.bind(this);\n  }\n\n  getPropertyDisplayName() {\n    const { name } = this.props;\n    switch (name) {\n      case \"serialNumber\":\n        return \"Serial Number\";\n      case \"lastCommunication\":\n        return \"Last Communication\";\n      case \"privateIp\":\n        return \"Private IP Address\";\n      case \"publicIp\":\n        return \"Public IP Address\";\n      case \"name\":\n        return \"Name\";\n      case \"status\":\n        return \"Status\";\n      case \"channels\":\n        return \"Channels\";\n      default:\n        return \"Additional Info\";\n    }\n  }\n\n  createInnerTable() {\n    const { value } = this.props;\n    return (\n      <TableContainer>\n        <ChannelDetailsTable channels={value} />\n      </TableContainer>\n    );\n  }\n\n  createTableCellContents() {\n    const {\n      name,\n      value,\n      device: { serialNumber }\n    } = this.props;\n    switch (name) {\n      case \"channels\":\n        return this.createInnerTable();\n      case \"status\":\n        return <StatusIndicator status={value} />;\n      case \"name\":\n        return <DeviceName deviceName={value} deviceId={serialNumber} />;\n      default:\n        return value;\n    }\n  }\n\n  render() {\n    return (\n      <TableRow>\n        <TableCell>{this.getPropertyDisplayName()}</TableCell>\n        <TableCell align=\"center\">{this.createTableCellContents()}</TableCell>\n      </TableRow>\n    );\n  }\n}\n\nDeviceInfoRow.propTypes = {\n  name: Proptypes.string.isRequired,\n  value: Proptypes.oneOfType([\n    Proptypes.string,\n    Proptypes.arrayOf(\n      Proptypes.oneOfType([InputChannelInfo, OutputChannelInfo])\n    )\n  ]).isRequired,\n  device: Proptypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { TableContainer, Table, TableBody } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfoRow from \"./DeviceInfoRow\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function DeviceInfoTable(props) {\n  const { device, properties } = props;\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          {properties.map((property) => (\n            <DeviceInfoRow\n              name={property}\n              value={device[property]}\n              device={device}\n              key={`device_${property}`}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nDeviceInfoTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  properties: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfoTable from \"./DeviceInfoTable/DeviceInfoTable\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function DeviceDetailsInfoTable(props) {\n  const { device } = props;\n  const properties = [\n    \"name\",\n    \"serialNumber\",\n    \"status\",\n    \"publicIp\",\n    \"privateIp\"\n  ];\n  return <DeviceInfoTable device={device} properties={properties} />;\n}\n\nDeviceDetailsInfoTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport DeviceDetailsInfoTable from \"../DeviceDetailsInfoTable\";\n\nexport default function DeviceInfoCard(props) {\n  const { device } = props;\n\n  return (\n    <DashboardCard title=\"Device Info\">\n      <Grid item xs={12}>\n        <DeviceDetailsInfoTable device={device} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceInfoCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","export default class StreamLogInfo {\n  constructor(dateTime, level, message) {\n    this.dateTime = dateTime;\n    this.level = level;\n    this.message = message;\n  }\n}\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {\n  Search,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\nimport MaterialTable from \"material-table\";\nimport LogInfo from \"../model/LogInfo\";\nimport StreamLogInfo from \"../model/StreamLogInfo\";\n\nexport default class LogsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = {\n      toolbar: true,\n      showTitle: false,\n      search: true,\n      exportButton: true,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: false,\n      draggable: false,\n      maxBodyHeight: \"auto\",\n      minBodyHeight: \"auto\"\n    };\n    this.icons = {\n      Search,\n      ResetSearch: Clear,\n      SortArrow: ArrowDownward,\n      Export: SaveAlt,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  getIcons() {\n    return this.icons;\n  }\n\n  render() {\n    const { columns, logs } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer>\n            <MaterialTable\n              columns={columns}\n              data={logs}\n              options={this.getOptions()}\n              icons={this.getIcons()}\n            />\n          </TableContainer>\n          <div className=\"textAlignRightPadded\">\n            {\"Time Zone: \".concat(\n              Intl.DateTimeFormat().resolvedOptions().timeZone\n            )}\n          </div>\n        </Box>\n      </>\n    );\n  }\n}\n\nLogsTable.propTypes = {\n  logs: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.instanceOf(LogInfo)),\n    PropTypes.arrayOf(PropTypes.instanceOf(StreamLogInfo))\n  ]).isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      field: PropTypes.string.isRequired,\n      sorting: PropTypes.bool,\n      cellStyle: PropTypes.shape({\n        width: PropTypes.string\n      })\n    })\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport LogsTable from \"../loglist/LogsTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class DeviceLogTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.columns = [\n      {\n        title: \"ID\",\n        field: \"id\",\n        cellStyle: { width: \"10%\" }\n      },\n      {\n        title: \"Date\",\n        field: \"dateTime\",\n        cellStyle: { width: \"15%\" }\n      },\n      {\n        title: \"Level\",\n        field: \"level\",\n        cellStyle: { width: \"10%\" }\n      },\n      {\n        title: \"Message\",\n        field: \"message\",\n        sorting: false\n      }\n    ];\n    this.dataSource = props.dataSource;\n    this.handleDeviceLogsChange = this.handleDeviceLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { device } = this.props;\n    this.dataSource\n      .getDeviceLogs(device.serialNumber)\n      .then(this.handleDeviceLogsChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch device logs: ${error.message}`);\n      });\n  }\n\n  handleDeviceLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  getColumnInfo() {\n    return this.columns;\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} columns={this.getColumnInfo()} />;\n  }\n}\n\nDeviceLogTableWrapper.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import axios from \"axios\";\nimport LogInfo from \"../model/LogInfo\";\nimport StreamLogInfo from \"../model/StreamLogInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nasync function getLogs(endpoint) {\n  return axios.get(endpoint, getAuthorizationHeader()).then((response) => {\n    return Promise.resolve(\n      response.data.map((log) => {\n        return new LogInfo(log.id, log.dateTime, log.level, log.message);\n      })\n    );\n  });\n}\n\nexport async function getAllLogs() {\n  return getLogs(process.env.REACT_APP_LOG);\n}\n\nexport async function getDeviceLogs(deviceSerialNumber) {\n  return getLogs(`${process.env.REACT_APP_LOG}/${deviceSerialNumber}`);\n}\n\nexport async function getStreamLogs(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAMLOG}/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      return Promise.resolve(\n        response.data.map((log) => {\n          return new StreamLogInfo(\n            log.logEntity.dateTime,\n            log.logEntity.level,\n            log.logEntity.message\n          );\n        })\n      );\n    });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport DeviceLogTableWrapper from \"../DeviceLogTableWrapper\";\nimport * as deviceLogsDataSource from \"../../api/LogApi\";\n\nexport default function DeviceLogCard(props) {\n  const { device } = props;\n\n  return (\n    <DashboardCard title=\"Logs\">\n      <Grid item xs={12}>\n        <DeviceLogTableWrapper\n          dataSource={deviceLogsDataSource}\n          device={device}\n        />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceLogCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport ChannelDetailsTable from \"../../devicelist/ChannelDetailsTable\";\n\nexport default function DeviceChannelCard(props) {\n  const {\n    device: { channels }\n  } = props;\n\n  return (\n    <DashboardCard title=\"Channels\">\n      <Grid item xs={12}>\n        <ChannelDetailsTable channels={channels} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceChannelCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogContentText from \"@material-ui/core/DialogContentText\";\n\nexport default function DialogBody(props) {\n  const { children } = props;\n  return (\n    <MuiDialogContent>\n      <MuiDialogContentText id=\"dialog-description\">\n        {children}\n      </MuiDialogContentText>\n    </MuiDialogContent>\n  );\n}\nDialogBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\n\nexport default function DialogButtons(props) {\n  const { button1, button2 } = props;\n\n  return (\n    <MuiDialogActions>\n      <Button onClick={button1.onClick} color=\"primary\">\n        {button1.name}\n      </Button>\n      {button2 ? (\n        <Button onClick={button2.onClick} color=\"secondary\" autoFocus>\n          {button2.name}\n        </Button>\n      ) : undefined}\n    </MuiDialogActions>\n  );\n}\n\nDialogButtons.propTypes = {\n  button1: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired,\n  button2: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  })\n};\n\nDialogButtons.defaultProps = {\n  button2: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MuiDialog from \"@material-ui/core/Dialog/Dialog\";\nimport { DialogTitle } from \"@material-ui/core\";\nimport DialogBody from \"./DialogBody\";\nimport DialogButtons from \"./DialogButtons\";\n\nexport default class Dialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.openDialog = this.openDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.setState({ open: true });\n  }\n\n  closeDialog() {\n    return this.setState({ open: false });\n  }\n\n  render() {\n    const { title, actionButton, children, isError } = this.props;\n    const { open } = this.state;\n\n    const button = {\n      name: actionButton ? \"Cancel\" : \"OK\",\n      onClick: this.closeDialog\n    };\n\n    return (\n      <MuiDialog\n        open={open}\n        onClose={() => this.closeDialog}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n        id=\"dialog\"\n      >\n        <DialogTitle className={isError ? \"warningText\" : undefined}>\n          {title}\n        </DialogTitle>\n        <DialogBody>{children}</DialogBody>\n        {actionButton ? (\n          <DialogButtons button1={button} button2={actionButton} />\n        ) : (\n          <DialogButtons button1={button} />\n        )}\n      </MuiDialog>\n    );\n  }\n}\n\nDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  actionButton: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }),\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  isError: PropTypes.bool\n};\n\nDialog.defaultProps = {\n  isError: false,\n  actionButton: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../../general/dialog/Dialog\";\nimport { deleteDevice } from \"../../api/DeviceApi\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport { snackbar } from \"../../general/SnackbarMessage\";\n\nexport default class DeleteDeviceDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  confirmDelete() {\n    const {\n      device: { serialNumber },\n      history\n    } = this.props;\n    this.dialogElement.current.closeDialog();\n    deleteDevice(serialNumber)\n      .then(() => {\n        history.push(\"/Devices\");\n        snackbar(\"success\", `Device deleted! (Serial Number: ${serialNumber})`);\n      })\n      .catch(() => {\n        snackbar(\n          \"error\",\n          `Could not delete device (Serial Number: ${serialNumber})`\n        );\n      });\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { device } = this.props;\n    const title = \"Confirm Delete\";\n    const message = `Are you sure you want to delete ${device.name}?`;\n\n    const actionButton = {\n      name: \"Confirm\",\n      onClick: this.confirmDelete\n    };\n\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        {message}\n      </Dialog>\n    );\n  }\n}\n\nDeleteDeviceDialog.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withRouter } from \"react-router-dom\";\nimport DeleteDeviceDialog from \"./DeleteDeviceDialog\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nclass DeleteDeviceDialogOpener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { device, history } = this.props;\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={<DeleteIcon />}\n          onClick={this.openDialog}\n        >\n          Delete\n        </Button>\n        <DeleteDeviceDialog\n          ref={this.dialogElement}\n          device={device}\n          history={history}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(DeleteDeviceDialogOpener);\n\nDeleteDeviceDialogOpener.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"@material-ui/core\";\n\nimport Dialog from \"../../general/dialog/Dialog\";\n\nimport { uploadConfiguration } from \"../../api/DeviceApi\";\n\nexport default class UploadConfigDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null\n    };\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.afterUpload = this.afterUpload.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      file: event.target.files[0]\n    });\n  }\n\n  handleUpload() {\n    const { deviceId } = this.props;\n    const { file } = this.state;\n    uploadConfiguration(deviceId, file).then(() => {\n      this.afterUpload();\n    });\n  }\n\n  afterUpload() {\n    this.dialogElement.current.closeDialog();\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const title = \"Upload a file\";\n    const actionButton = {\n      name: \"Upload\",\n      onClick: this.handleUpload\n    };\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        <Input\n          type=\"file\"\n          name=\"file\"\n          disableUnderline\n          onChange={this.handleChange}\n        />\n      </Dialog>\n    );\n  }\n}\n\nUploadConfigDialog.propTypes = {\n  deviceId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { CloudUpload } from \"@material-ui/icons\";\n\nimport UploadConfigDialog from \"./UploadConfigDialog\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class UploadConfigDialogOpenButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const {\n      device: { serialNumber }\n    } = this.props;\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<CloudUpload />}\n          onClick={this.openDialog}\n        >\n          Upload New\n        </Button>\n\n        <UploadConfigDialog ref={this.dialogElement} deviceId={serialNumber} />\n      </>\n    );\n  }\n}\n\nUploadConfigDialogOpenButton.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { GetApp } from \"@material-ui/icons\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class DownloadConfigButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.handleDownload = this.handleDownload.bind(this);\n  }\n\n  handleDownload() {\n    const { device } = this.props;\n    if (!device.extras) return;\n    const filename = `${device.serialNumber}.config`;\n    const element = document.createElement(\"a\");\n    element.setAttribute(\n      \"href\",\n      `data:text/plain;charset=utf-8,${atob(device.extras)}`\n    );\n    element.setAttribute(\"download\", filename);\n\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  }\n\n  render() {\n    const { device } = this.props;\n    return (\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={this.handleDownload}\n        startIcon={<GetApp />}\n        disabled={!device.extras}\n      >\n        Download\n      </Button>\n    );\n  }\n}\n\nDownloadConfigButton.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport UploadConfigDialogOpenButton from \"../configuration/UploadConfigDialogOpenButton\";\nimport DownloadConfigButton from \"../configuration/DownloadConfigButton\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function DeviceConfigActionsCard(props) {\n  const { device } = props;\n  return (\n    <DashboardCard title=\"Configuration\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <UploadConfigDialogOpenButton device={device} />\n        </Grid>\n        <Grid item xs={4}>\n          <DownloadConfigButton device={device} />\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceConfigActionsCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, Box, Container } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeviceInfoCard from \"./cards/DeviceInfoCard\";\nimport DeviceLogCard from \"./cards/DeviceLogCard\";\nimport DeviceChannelCard from \"./cards/DeviceChannelCard\";\n\nimport { getSampleSender } from \"../api/SampleData\";\nimport GridColumn from \"../general/dashboard/GridColumn\";\nimport DeleteDeviceDialogOpener from \"./DeleteDeviceDialog/DeleteDeviceDialogOpener\";\nimport DeviceConfigActionsCard from \"./cards/DeviceConfigActionsCard\";\n\nexport default function DeviceDetailsPageContents(props) {\n  const { device } = props;\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <GridColumn width={6}>\n          <Grid item xs={12}>\n            <DeviceInfoCard device={device} />\n          </Grid>\n          <Grid item xs={12}>\n            <DeviceChannelCard device={device} />\n          </Grid>\n          <Grid item xs={12}>\n            <DeviceConfigActionsCard device={device} />\n          </Grid>\n        </GridColumn>\n        <Grid item xs={6}>\n          <DeviceLogCard device={device} />\n        </Grid>\n      </Grid>\n      <Box className=\"alignRightFloatPadded\">\n        <DeleteDeviceDialogOpener device={device} />\n      </Box>\n    </Container>\n  );\n}\nDeviceDetailsPageContents.defaultProps = {\n  device: getSampleSender()\n};\n\nDeviceDetailsPageContents.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo)\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Page from \"../general/Page\";\nimport DeviceDetailsPageContents from \"./DeviceDetailsPageContents\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport { getSampleSender } from \"../api/SampleData\";\n\nexport default function DeviceDetailsPage(props) {\n  const {\n    location: {\n      state: { device }\n    }\n  } = props;\n\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"My Devices\", \"/Devices\"],\n    [\"Device Details\", `/Devices/Details/${device.serialNumber}`, { device }]\n  ];\n\n  return (\n    <Page title=\"Device Details\" breadcrumbs={breadcrumbs}>\n      <DeviceDetailsPageContents device={device} />\n    </Page>\n  );\n}\n\nDeviceDetailsPage.defaultProps = {\n  location: { state: { device: getSampleSender() } }\n};\n\nDeviceDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      device: PropTypes.instanceOf(DeviceInfo)\n    })\n  })\n};\n","import React from \"react\";\nimport StreamsTableWrapper from \"./StreamsTableWrapper\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport StreamDetailsButton from \"./StreamDetailsButton\";\nimport * as streamDataSource from \"../api/StreamApi\";\n\nexport default class DetailedStreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.detailedColumns = [\n      {\n        title: \"ID\",\n        field: \"id\"\n      },\n      {\n        title: \"Date\",\n        field: \"date\"\n      },\n      {\n        title: \"Sender\",\n        field: \"sender.name\"\n      },\n      {\n        title: \"Receiver\",\n        field: \"receiver.name\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        }\n      },\n      {\n        title: \"Type\",\n        field: \"type\"\n      },\n      {\n        title: \"Time Elapsed\",\n        field: \"time\"\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <StreamDetailsButton streamInfo={rowData} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n  }\n\n  getDetailedColumns() {\n    return this.detailedColumns;\n  }\n\n  render() {\n    return (\n      <StreamsTableWrapper\n        dataSource={streamDataSource}\n        columns={this.getDetailedColumns()}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport DetailedStreamsTableWrapper from \"./DetailedStreamsTableWrapper\";\n\nexport default function StreamListPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"]\n  ];\n  return (\n    <Page title=\"Active Streams\" breadcrumbs={breadcrumbs}>\n      <DetailedStreamsTableWrapper />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\n\nexport default class SelectTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleListItemClick = this.handleListItemClick.bind(this);\n  }\n\n  handleListItemClick(index) {\n    const { setIndex } = this.props;\n    setIndex(index);\n  }\n\n  render() {\n    const { selectedIndex, items } = this.props;\n    return (\n      <List>\n        {items.map((item, index) => {\n          return (\n            <ListItem\n              button\n              key={item}\n              selected={selectedIndex === index}\n              onClick={() => this.handleListItemClick(index)}\n            >\n              <ListItemText primary={item} />\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n}\n\nSelectTable.propTypes = {\n  selectedIndex: PropTypes.number.isRequired,\n  setIndex: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectTable from \"./SelectTable\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function SelectDeviceTable(props) {\n  const { selectedIndex, setIndex, deviceList } = props;\n\n  const deviceNames = deviceList.map((device) => device.name);\n  return (\n    <SelectTable\n      selectedIndex={selectedIndex}\n      setIndex={setIndex}\n      items={deviceNames}\n    />\n  );\n}\n\nSelectDeviceTable.propTypes = {\n  selectedIndex: PropTypes.number.isRequired,\n  setIndex: PropTypes.func.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectTable from \"./SelectTable\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function SelectChannelTable(props) {\n  const { selectedIndex, setIndex, deviceList, deviceIndex } = props;\n\n  const channelNames = deviceList[deviceIndex].channels.map(\n    (channel) => channel.name\n  );\n  return (\n    <SelectTable\n      selectedIndex={selectedIndex}\n      setIndex={setIndex}\n      items={channelNames}\n    />\n  );\n}\n\nSelectChannelTable.propTypes = {\n  selectedIndex: PropTypes.number.isRequired,\n  setIndex: PropTypes.func.isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function SimpleTableRow(props) {\n  const { name, value, alignment } = props;\n\n  return (\n    <>\n      <TableRow>\n        <TableCell>{name}</TableCell>\n        <TableCell align={alignment}>{value}</TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nSimpleTableRow.defaultProps = {\n  alignment: \"left\"\n};\n\nSimpleTableRow.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.node.isRequired,\n  alignment: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TableBody, Table, TableContainer } from \"@material-ui/core\";\nimport SimpleTableRow from \"./SimpleTableRow\";\n\nexport default function SimpleTable(props) {\n  const { properties, alignment } = props;\n\n  const propertiesArr = Object.keys(properties).map((propertyName) => {\n    return [propertyName, properties[propertyName]];\n  });\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          {propertiesArr.map((propertyPair) => (\n            <SimpleTableRow\n              name={propertyPair[0]}\n              value={propertyPair[1]}\n              alignment={alignment}\n              key={`component_${propertyPair[0]}`}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nSimpleTable.defaultProps = {\n  alignment: \"left\"\n};\nSimpleTable.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.node).isRequired,\n  alignment: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DashboardCard from \"./dashboard/DashboardCard\";\nimport SimpleTable from \"./simpleTable/SimpleTable\";\nimport ButtonInfo from \"./dashboard/ButtonInfo\";\n\nexport default function StreamDeviceCard(props) {\n  const { title, button, device, channel } = props;\n  const properties = {\n    Name: device.name,\n    \"Serial Number\": device.serialNumber,\n    Channel: channel\n  };\n\n  return (\n    <DashboardCard title={title} button={button}>\n      <Grid item xs={12}>\n        <SimpleTable properties={properties} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nStreamDeviceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  button: PropTypes.instanceOf(ButtonInfo),\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  channel: PropTypes.number.isRequired\n};\n\nStreamDeviceCard.defaultProps = {\n  button: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\n\nexport default function StepperNextButton(props) {\n  const { disabled, isLast, handleNext, handleClose } = props;\n\n  const buttonText = isLast ? \"Confirm\" : \"Next\";\n\n  const handleClick = isLast ? handleClose : handleNext;\n\n  return (\n    <Button size=\"small\" onClick={handleClick} disabled={disabled}>\n      {buttonText}\n      <KeyboardArrowRight />\n    </Button>\n  );\n}\n\nStepperNextButton.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { Close, KeyboardArrowLeft } from \"@material-ui/icons\";\n\nexport default function StepperBackButton(props) {\n  const { isFirst, handleBack, handleClose } = props;\n\n  let handleClick = handleBack;\n  let icon = <KeyboardArrowLeft />;\n  let buttonText = \"Back\";\n\n  if (isFirst) {\n    handleClick = handleClose;\n    buttonText = \"Cancel\";\n    icon = <Close />;\n  }\n\n  return (\n    <Button size=\"small\" onClick={handleClick}>\n      {icon}\n      {buttonText}\n    </Button>\n  );\n}\n\nStepperBackButton.propTypes = {\n  isFirst: PropTypes.bool.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SwipeableViews from \"react-swipeable-views\";\nimport { DialogTitle, MobileStepper } from \"@material-ui/core\";\nimport SelectDeviceTable from \"../SelectDeviceDialog/SelectDeviceTable\";\nimport SelectChannelTable from \"../SelectDeviceDialog/SelectChannelTable\";\nimport StreamDeviceCard from \"../../general/StreamDeviceCard\";\n\nimport StepperNextButton from \"./StepperNextButton\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport StepperBackButton from \"./StepperBackButton\";\nimport \"./swipeable.css\";\n\nexport default class SelectDeviceSwipeableSteps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeStep: 0\n    };\n\n    this.steps = [`Select a Device`, `Select a Channel`, `Confirm Device`];\n    this.handleNext = this.handleNext.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n    this.getNextButton = this.getNextButton.bind(this);\n    this.getBackButton = this.getBackButton.bind(this);\n  }\n\n  handleNext() {\n    const { activeStep: previousStep } = this.state;\n    this.setState({\n      activeStep: previousStep + 1\n    });\n  }\n\n  handleBack() {\n    const { activeStep: previousStep } = this.state;\n    this.setState({\n      activeStep: previousStep - 1\n    });\n  }\n\n  getNextButton() {\n    const { handleClose } = this.props;\n    const { activeStep } = this.state;\n    const maxSteps = this.steps.length;\n\n    return (\n      <StepperNextButton\n        disabled={this.disableNext()}\n        isLast={activeStep === maxSteps - 1}\n        handleClose={handleClose}\n        handleNext={this.handleNext}\n      />\n    );\n  }\n\n  getBackButton() {\n    const { handleClose } = this.props;\n    const { activeStep } = this.state;\n\n    return (\n      <StepperBackButton\n        isFirst={activeStep === 0}\n        handleClose={handleClose}\n        handleBack={this.handleBack}\n      />\n    );\n  }\n\n  disableNext() {\n    const { activeStep } = this.state;\n    const { deviceIndex, channelIndex } = this.props;\n    switch (activeStep) {\n      case 0:\n        return deviceIndex === -1;\n      case 1:\n        return channelIndex === -1;\n      default:\n        return false;\n    }\n  }\n\n  render() {\n    const {\n      deviceList,\n      deviceIndex,\n      setDeviceIndex,\n      channelIndex,\n      setChannelIndex\n    } = this.props;\n    const { activeStep } = this.state;\n    const maxSteps = this.steps.length;\n\n    return (\n      <>\n        <DialogTitle>{this.steps[activeStep]}</DialogTitle>\n        <SwipeableViews\n          className=\"halfScreenVertically\"\n          axis=\"x\"\n          index={activeStep}\n          enableMouseEvents\n        >\n          <SelectDeviceTable\n            selectedIndex={deviceIndex}\n            setIndex={setDeviceIndex}\n            deviceList={deviceList}\n          />\n          {deviceIndex === -1 ? (\n            <></>\n          ) : (\n            <SelectChannelTable\n              selectedIndex={channelIndex}\n              setIndex={setChannelIndex}\n              deviceIndex={deviceIndex}\n              deviceList={deviceList}\n            />\n          )}\n          {deviceIndex === -1 || channelIndex === -1 ? (\n            <></>\n          ) : (\n            <StreamDeviceCard\n              title=\"Preview\"\n              device={deviceList[deviceIndex]}\n              channel={deviceList[deviceIndex].channels[channelIndex].port}\n            />\n          )}\n        </SwipeableViews>\n        <MobileStepper\n          steps={maxSteps}\n          position=\"static\"\n          variant=\"text\"\n          activeStep={activeStep}\n          nextButton={this.getNextButton()}\n          backButton={this.getBackButton()}\n        />\n      </>\n    );\n  }\n}\n\nSelectDeviceSwipeableSteps.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  setDeviceIndex: PropTypes.func.isRequired,\n  channelIndex: PropTypes.number.isRequired,\n  setChannelIndex: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport SelectDeviceSwipeableSteps from \"../SwipeableSteps/SelectDeviceSwipeableSteps\";\n\nexport default class SelectDeviceDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.openDialog = this.openDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.setState({ open: true });\n  }\n\n  closeDialog() {\n    return this.setState({ open: false });\n  }\n\n  render() {\n    const { open } = this.state;\n    const {\n      deviceList,\n      deviceIndex,\n      setDeviceIndex,\n      channelIndex,\n      setChannelIndex\n    } = this.props;\n\n    return (\n      <Dialog\n        open={open}\n        fullWidth\n        maxWidth=\"sm\"\n        onClose={this.closeDialog}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n        id=\"dialog\"\n      >\n        <SelectDeviceSwipeableSteps\n          handleClose={this.closeDialog}\n          deviceList={deviceList}\n          deviceIndex={deviceIndex}\n          setDeviceIndex={setDeviceIndex}\n          channelIndex={channelIndex}\n          setChannelIndex={setChannelIndex}\n        />\n      </Dialog>\n    );\n  }\n}\n\nSelectDeviceDialog.propTypes = {\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  setDeviceIndex: PropTypes.func.isRequired,\n  channelIndex: PropTypes.number.isRequired,\n  setChannelIndex: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ButtonInfo from \"../../general/dashboard/ButtonInfo\";\nimport StreamDeviceCard from \"../../general/StreamDeviceCard\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function SelectedDeviceCard(props) {\n  const { title, openDialog, device, channelId } = props;\n  const button = new ButtonInfo(\"\", device, \"Edit\", openDialog);\n\n  return (\n    <StreamDeviceCard\n      title={title}\n      button={button}\n      device={device}\n      channel={channelId}\n    />\n  );\n}\n\nSelectedDeviceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  openDialog: PropTypes.func.isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  channelId: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\n\nexport default function UnselectedDeviceCard(props) {\n  const { title, onClick } = props;\n\n  return (\n    <DashboardCard title={title}>\n      <Grid item xs={4}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n          {`Select ${title}`}\n        </Button>\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nUnselectedDeviceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SelectedDeviceCard from \"./SelectedDeviceCard\";\nimport UnselectedDeviceCard from \"./UnselectedDeviceCard\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function CreateStreamCardToggler(props) {\n  const { title, openDialog, deviceIndex, deviceList, channelIndex } = props;\n  if (deviceIndex !== -1 && channelIndex !== -1) {\n    return (\n      <SelectedDeviceCard\n        title={title}\n        openDialog={openDialog}\n        device={deviceList[deviceIndex]}\n        channelId={deviceList[deviceIndex].channels[channelIndex].port}\n      />\n    );\n  }\n  return <UnselectedDeviceCard title={title} onClick={openDialog} />;\n}\n\nCreateStreamCardToggler.propTypes = {\n  title: PropTypes.string.isRequired,\n  openDialog: PropTypes.func.isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  channelIndex: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport SelectDeviceDialog from \"./SelectDeviceDialog/SelectDeviceDialog\";\nimport CreateStreamCardToggler from \"./cards/CreateStreamCardToggler\";\n\nexport default class CreateStreamDeviceCardWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const {\n      title,\n      deviceList,\n      deviceIndex,\n      setDeviceIndex,\n      channelIndex,\n      setChannelIndex\n    } = this.props;\n\n    return (\n      <>\n        <CreateStreamCardToggler\n          title={title}\n          openDialog={this.openDialog}\n          deviceIndex={deviceIndex}\n          deviceList={deviceList}\n          channelIndex={channelIndex}\n        />\n        <SelectDeviceDialog\n          ref={this.dialogElement}\n          deviceList={deviceList}\n          deviceIndex={deviceIndex}\n          setDeviceIndex={setDeviceIndex}\n          channelIndex={channelIndex}\n          setChannelIndex={setChannelIndex}\n        />\n      </>\n    );\n  }\n}\n\nCreateStreamDeviceCardWrapper.propTypes = {\n  title: PropTypes.string.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  setDeviceIndex: PropTypes.func.isRequired,\n  channelIndex: PropTypes.number.isRequired,\n  setChannelIndex: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { Forward } from \"@material-ui/icons\";\n\nimport CreateStreamDeviceCardWrapper from \"./CreateStreamDeviceCardWrapper\";\nimport { getSenders, getReceivers } from \"../api/DeviceApi\";\nimport { createStream } from \"../api/StreamApi\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class CreateStreamPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      senders: [],\n      receivers: [],\n      senderDeviceIndex: -1,\n      senderChannelIndex: -1,\n      receiverDeviceIndex: -1,\n      receiverChannelIndex: -1\n    };\n\n    this.createStream = this.createStream.bind(this);\n    this.setSenders = this.setSenders.bind(this);\n    this.setReceivers = this.setReceivers.bind(this);\n    this.setSenderDeviceIndex = this.setSenderDeviceIndex.bind(this);\n    this.setReceiverDeviceIndex = this.setReceiverDeviceIndex.bind(this);\n    this.setSenderChannelIndex = this.setSenderChannelIndex.bind(this);\n    this.setReceiverChannelIndex = this.setReceiverChannelIndex.bind(this);\n  }\n\n  componentDidMount() {\n    getSenders(this.setSenders);\n    getReceivers(this.setReceivers);\n  }\n\n  setSenders(value) {\n    this.setState({\n      senders: value\n    });\n  }\n\n  setReceivers(value) {\n    this.setState({\n      receivers: value\n    });\n  }\n\n  setSenderDeviceIndex(value) {\n    this.setState({\n      senderDeviceIndex: value,\n      senderChannelIndex: -1\n    });\n  }\n\n  setReceiverDeviceIndex(value) {\n    this.setState({\n      receiverDeviceIndex: value,\n      receiverChannelIndex: -1\n    });\n  }\n\n  setSenderChannelIndex(value) {\n    this.setState({\n      senderChannelIndex: value\n    });\n  }\n\n  setReceiverChannelIndex(value) {\n    this.setState({\n      receiverChannelIndex: value\n    });\n  }\n\n  createStream() {\n    const {\n      senders,\n      receivers,\n      senderDeviceIndex,\n      senderChannelIndex,\n      receiverDeviceIndex,\n      receiverChannelIndex\n    } = this.state;\n\n    const receiver = receivers[receiverDeviceIndex];\n    const sender = senders[senderDeviceIndex];\n\n    if (receiver && sender) {\n      const recieverChannel = receiver.channels[receiverChannelIndex];\n      const senderChannel = sender.channels[senderChannelIndex];\n      if (recieverChannel && senderChannel)\n        createStream(recieverChannel.id, senderChannel.id)\n          .then(() => {\n            snackbar(\"success\", `Successfully created stream!`);\n          })\n          .catch(() => {\n            snackbar(\"error\", `Failed to create stream`);\n          });\n    }\n  }\n\n  render() {\n    const {\n      senders,\n      receivers,\n      senderDeviceIndex,\n      senderChannelIndex,\n      receiverDeviceIndex,\n      receiverChannelIndex\n    } = this.state;\n\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"stretch\"\n        direction=\"row\"\n        spacing={3}\n      >\n        <Grid item xs={5} style={{ margin: \"auto\" }}>\n          <CreateStreamDeviceCardWrapper\n            title=\"Sender\"\n            deviceList={senders}\n            deviceIndex={senderDeviceIndex}\n            setDeviceIndex={this.setSenderDeviceIndex}\n            channelIndex={senderChannelIndex}\n            setChannelIndex={this.setSenderChannelIndex}\n          />\n        </Grid>\n        <Grid item xs={2} style={{ margin: \"auto\", textAlign: \"center\" }}>\n          <Forward style={{ fontSize: 100 }} />\n        </Grid>\n        <Grid item xs={5} style={{ margin: \"auto\" }}>\n          <CreateStreamDeviceCardWrapper\n            title=\"Receiver\"\n            deviceList={receivers}\n            deviceIndex={receiverDeviceIndex}\n            setDeviceIndex={this.setReceiverDeviceIndex}\n            channelIndex={receiverChannelIndex}\n            setChannelIndex={this.setReceiverChannelIndex}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.createStream}\n          >\n            Create Stream\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport CreateStreamPageContents from \"./CreateStreamPageContents\";\n\nexport default function CreateStreamPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [\"New Stream\", \"/Streams/New\"]\n  ];\n  return (\n    <Page title=\"Create a Stream\" breadcrumbs={breadcrumbs}>\n      <CreateStreamPageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LogsTable from \"./LogsTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class LogsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.columns = [\n      {\n        title: \"ID\",\n        field: \"id\",\n        cellStyle: { width: \"10%\" }\n      },\n      {\n        title: \"Date\",\n        field: \"dateTime\",\n        cellStyle: { width: \"15%\" }\n      },\n      {\n        title: \"Level\",\n        field: \"level\",\n        cellStyle: { width: \"10%\" }\n      },\n      {\n        title: \"Message\",\n        field: \"message\",\n        sorting: false\n      }\n    ];\n    this.logsDataSource = props.logsDataSource;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.logsDataSource\n      .getAllLogs()\n      .then(this.handleLogsChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch logs: ${error.message}`);\n      });\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  getColumnInfo() {\n    return this.columns;\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} columns={this.getColumnInfo()} />;\n  }\n}\n\nLogsTableWrapper.propTypes = {\n  logsDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\n\nimport LogsTableWrapper from \"./LogsTableWrapper\";\nimport Page from \"../general/Page\";\nimport * as logsDataSource from \"../api/LogApi\";\n\nexport default function LogListPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Logs\", \"/Logs\"]\n  ];\n\n  return (\n    <Page title=\"Logs\" breadcrumbs={breadcrumbs}>\n      <LogsTableWrapper logsDataSource={logsDataSource} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Dialog from \"../dialog/Dialog\";\n\nexport default class FormFailedDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { title, errorMessage } = this.props;\n\n    return (\n      <Dialog ref={this.dialogElement} title={title} isError>\n        {errorMessage}\n      </Dialog>\n    );\n  }\n}\n\nFormFailedDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string.isRequired\n};\n","import axios from \"axios\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nexport async function createUser(credentials) {\n  return axios.post(\n    process.env.REACT_APP_SIGNUP,\n    {\n      username: credentials.username,\n      password: credentials.password,\n      userRole: \"USER\"\n    },\n    getAuthorizationHeader()\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, TextField, Grid } from \"@material-ui/core\";\nimport DashboardCard from \"../dashboard/DashboardCard\";\n\nexport default class FormConsole extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      passwordErrorCondition: false\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.setUsername = this.setUsername.bind(this);\n    this.setPassword = this.setPassword.bind(this);\n    this.setPasswordError = this.setPasswordError.bind(this);\n    this.passwordOnChange = this.passwordOnChange.bind(this);\n  }\n\n  onSubmit(event) {\n    const { handleSubmit } = this.props;\n    const { username, password } = this.state;\n    event.preventDefault();\n    handleSubmit(username, password);\n  }\n\n  setUsername(username) {\n    this.setState({\n      username\n    });\n  }\n\n  setPassword(password) {\n    this.setState({\n      password\n    });\n  }\n\n  setPasswordError(password) {\n    const { passwordError } = this.props;\n    if (passwordError) {\n      if (\n        password.length < passwordError.upperbound &&\n        password.length > passwordError.lowerbound\n      ) {\n        this.setState({ passwordErrorCondition: true });\n      } else {\n        this.setState({ passwordErrorCondition: false });\n      }\n    }\n  }\n\n  passwordOnChange(password) {\n    this.setPassword(password);\n    this.setPasswordError(password);\n  }\n\n  render() {\n    const {\n      buttonName,\n      isValidate,\n      passwordInputProps,\n      passwordHelperText\n    } = this.props;\n    const { passwordErrorCondition } = this.state;\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"stretch\"\n        direction=\"row\"\n        spacing={3}\n      >\n        <Grid item xs={6}>\n          <DashboardCard title=\"\">\n            <div>\n              <form noValidate={!isValidate} onSubmit={this.onSubmit}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  autoFocus\n                  onChange={(event) => this.setUsername(event.target.value)}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  error={passwordErrorCondition}\n                  inputProps={passwordInputProps}\n                  helperText={passwordHelperText}\n                  autoComplete=\"current-password\"\n                  // prettier-ignore\n                  onChange={(event) => this.passwordOnChange(event.target.value)}\n                />\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  {buttonName}\n                </Button>\n              </form>\n            </div>\n          </DashboardCard>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nFormConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  buttonName: PropTypes.string.isRequired,\n  isValidate: PropTypes.bool,\n  passwordError: PropTypes.shape({\n    upperbound: PropTypes.number.isRequired,\n    lowerbound: PropTypes.number.isRequired\n  }),\n  passwordInputProps: PropTypes.shape({\n    maxLength: PropTypes.number.isRequired,\n    minLength: PropTypes.number.isRequired\n  }),\n  passwordHelperText: PropTypes.string\n};\n\nFormConsole.defaultProps = {\n  isValidate: false,\n  passwordError: undefined,\n  passwordInputProps: undefined,\n  passwordHelperText: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport FormConsole from \"../../general/userForm/FormConsole\";\n\nexport default function CreateUserFormConsole(props) {\n  const { handleSubmit } = props;\n\n  return (\n    <>\n      <FormConsole\n        handleSubmit={handleSubmit}\n        buttonName=\"Create\"\n        isValidate\n        passwordError={{ upperbound: 5, lowerbound: 0 }}\n        passwordInputProps={{ maxLength: 20, minLength: 5 }}\n        passwordHelperText=\"Password must be between 5 to 20 characters\"\n      />\n    </>\n  );\n}\n\nCreateUserFormConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n","import React from \"react\";\n\nimport FormFailedDialog from \"../../general/userForm/FormFailedDialog\";\nimport { createUser } from \"../../api/UserManagementApi\";\nimport CreateUserFormConsole from \"./CreateUserFormConsole\";\nimport { snackbar } from \"../../general/SnackbarMessage\";\n\nexport default class CreateUserPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogMessage: \"\"\n    };\n    this.dialogElement = React.createRef();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n    this.setDialogMessage = this.setDialogMessage.bind(this);\n  }\n\n  handleSubmit(username, password) {\n    createUser({ username, password })\n      .then(() => {\n        snackbar(\"success\", `User ${username} successfully created!`);\n      })\n      .catch((error) => {\n        this.openDialog();\n        this.setDialogMessage(error.message);\n      });\n  }\n\n  setDialogMessage(message) {\n    this.setState({\n      dialogMessage: message\n    });\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { dialogMessage } = this.state;\n    return (\n      <>\n        <CreateUserFormConsole handleSubmit={this.handleSubmit} />\n        <FormFailedDialog\n          ref={this.dialogElement}\n          title=\"Failed to create user\"\n          errorMessage={dialogMessage}\n        />\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nimport Page from \"../../general/Page\";\nimport CreateUserPageContents from \"./CreateUserPageContents\";\n\nexport default function CreateUserPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Admin\", \"/Admin\"],\n    [\"Create a User\", \"/Admin/New\"]\n  ];\n\n  return (\n    <Page title=\"Create a User\" breadcrumbs={breadcrumbs}>\n      <CreateUserPageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StreamDeviceCard from \"../general/StreamDeviceCard\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport ButtonInfo from \"../general/dashboard/ButtonInfo\";\n\nexport default function StreamDetailsDeviceCard(props) {\n  const { cardTitle, device, channel } = props;\n  const button = new ButtonInfo(\n    `/Devices/Details/${device.serialNumber}`,\n    device,\n    \"View Device\"\n  );\n\n  return (\n    <StreamDeviceCard\n      title={cardTitle}\n      button={button}\n      device={device}\n      channel={channel}\n    />\n  );\n}\n\nStreamDetailsDeviceCard.propTypes = {\n  cardTitle: PropTypes.string.isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  channel: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../general/dialog/Dialog\";\nimport { deleteStream } from \"../api/StreamApi\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class DeleteStreamDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  confirmDelete() {\n    const { deleteId, history } = this.props;\n    this.dialogElement.current.closeDialog();\n    deleteStream(deleteId)\n      .then(() => {\n        history.push(\"/Streams\");\n        snackbar(\"success\", `Stream successfully deleted!`);\n      })\n      .catch(() => {\n        snackbar(\"error\", `Failed to delete stream`);\n      });\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId } = this.props;\n    const title = \"Confirm Delete\";\n    const message = `Are you sure you want to end stream ${deleteId}?`;\n\n    const actionButton = {\n      name: \"Confirm\",\n      onClick: this.confirmDelete\n    };\n\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        {message}\n      </Dialog>\n    );\n  }\n}\n\nDeleteStreamDialog.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Tooltip } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withRouter } from \"react-router-dom\";\n\nimport DeleteStreamDialog from \"./DeleteStreamDialog\";\n\nclass DeleteStreamDialogOpener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId, history } = this.props;\n    return (\n      <>\n        <Tooltip title=\"Delete Stream\" aria-label=\"delete stream\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<DeleteIcon />}\n            onClick={this.openDialog}\n          >\n            Delete\n          </Button>\n        </Tooltip>\n        <DeleteStreamDialog\n          ref={this.dialogElement}\n          deleteId={deleteId}\n          history={history}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(DeleteStreamDialogOpener);\n\nDeleteStreamDialogOpener.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LogsTable from \"../loglist/LogsTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class StreamLogTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.columns = [\n      {\n        title: \"Date\",\n        field: \"dateTime\",\n        cellStyle: { width: \"15%\" }\n      },\n      {\n        title: \"Level\",\n        field: \"level\",\n        cellStyle: { width: \"10%\" }\n      },\n      {\n        title: \"Message\",\n        field: \"message\",\n        sorting: false\n      }\n    ];\n    this.dataSource = props.dataSource;\n    this.handleStreamLogsChange = this.handleStreamLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { streamId } = this.props;\n    this.dataSource\n      .getStreamLogs(streamId)\n      .then(this.handleStreamLogsChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch stream logs: ${error.message}`);\n      });\n  }\n\n  handleStreamLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  getColumnInfo() {\n    return this.columns;\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} columns={this.getColumnInfo()} />;\n  }\n}\n\nStreamLogTableWrapper.propTypes = {\n  streamId: PropTypes.number.isRequired,\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport StreamLogTableWrapper from \"../StreamLogTableWrapper\";\nimport * as streamLogsDataSource from \"../../api/LogApi\";\n\nexport default function StreamLogCard(props) {\n  const { streamId } = props;\n\n  return (\n    <DashboardCard title=\"Logs\">\n      <Grid item xs={12}>\n        <StreamLogTableWrapper\n          dataSource={streamLogsDataSource}\n          streamId={streamId}\n        />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nStreamLogCard.propTypes = {\n  streamId: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Container, Grid } from \"@material-ui/core\";\n\nimport StreamInfo from \"../model/StreamInfo\";\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport StreamDetailsDeviceCard from \"./StreamDetailsDeviceCard\";\nimport DeleteStreamDialogOpener from \"./DeleteStreamDialogOpener\";\nimport StreamLogCard from \"./cards/StreamLogCard\";\n\nexport default function StreamDetailsPageContents(props) {\n  const { stream } = props;\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <StreamDetailsDeviceCard\n            cardTitle=\"Sender Details\"\n            device={stream.sender}\n            channel={stream.outputChannel}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <StreamDetailsDeviceCard\n            cardTitle=\"Receiver Details\"\n            device={stream.receiver}\n            channel={stream.inputChannel}\n          />\n        </Grid>\n        <Grid item xs={7}>\n          <StreamLogCard streamId={stream.id} />\n        </Grid>\n        <Grid item xs={5}>\n          <DashboardCard title=\"Statistics\" />\n        </Grid>\n      </Grid>\n      <Box className=\"alignRightFloatPadded\">\n        <DeleteStreamDialogOpener deleteId={stream.id} />\n      </Box>\n    </Container>\n  );\n}\n\nStreamDetailsPageContents.propTypes = {\n  stream: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StreamInfo from \"../model/StreamInfo\";\nimport * as SampleData from \"../api/SampleData\";\nimport StreamDetailsPageContents from \"./StreamDetailsPageContents\";\nimport Page from \"../general/Page\";\n\nexport default function StreamDetailsPage(props) {\n  const {\n    location: {\n      state: { stream }\n    }\n  } = props;\n\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [`Stream Details`, `/Streams/Details/${stream.id}`]\n  ];\n\n  return (\n    <Page title=\"Stream Details\" breadcrumbs={breadcrumbs}>\n      <StreamDetailsPageContents stream={stream} />\n    </Page>\n  );\n}\n\nStreamDetailsPage.defaultProps = {\n  location: { state: { stream: SampleData.getSampleStream() } }\n};\n\nStreamDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      stream: PropTypes.instanceOf(StreamInfo)\n    })\n  })\n};\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport DashboardButton from \"./dashboard/DashboardButton\";\nimport DashboardCard from \"./dashboard/DashboardCard\";\nimport Page from \"./Page\";\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\n\nexport default function PathNotFoundPage() {\n  return (\n    <Page title=\"Error 404: Path not found\" breadcrumbs={[]}>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={6}>\n          <DashboardCard title=\"Sorry, that page doesn't exist!\">\n            {isAuthenticated() ? (\n              <DashboardButton href=\"/Home\">Go Home</DashboardButton>\n            ) : (\n              <DashboardButton href=\"/Login\">Go to Login</DashboardButton>\n            )}\n          </DashboardCard>\n        </Grid>\n      </Grid>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport ProtectedRoute from \"./ProtectedRoute\";\n\nimport LoginPage from \"../login/LoginPage\";\nimport HomePage from \"../homepage/HomePage\";\nimport DeviceListPage from \"../devicelist/DeviceListPage\";\nimport DeviceDetailsPage from \"../deviceDetailsPage/DeviceDetailsPage\";\nimport StreamListPage from \"../streamlist/StreamListPage\";\nimport CreateStreamPage from \"../createStream/CreateStreamPage\";\nimport LogListPage from \"../loglist/LogListPage\";\nimport CreateUserPage from \"../admin/createUser/CreateUserPage\";\nimport StreamDetailsPage from \"../streamDetails/StreamDetailsPage\";\nimport PathNotFoundPage from \"../general/PathNotFoundPage\";\nimport SnackbarMessage from \"../general/SnackbarMessage\";\n\nexport default function AppRouter() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <ProtectedRoute path=\"/Login\" render={() => <LoginPage />} />\n        <ProtectedRoute\n          path=\"/Home\"\n          authenticationRequired\n          render={() => {\n            return <HomePage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Devices/Details/:serialNumber\"\n          authenticationRequired\n          render={(location) => {\n            return <DeviceDetailsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Devices\"\n          authenticationRequired\n          render={() => {\n            return <DeviceListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/New\"\n          authenticationRequired\n          render={() => {\n            return <CreateStreamPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/Details/:streamId\"\n          authenticationRequired\n          render={(location) => {\n            return <StreamDetailsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams\"\n          authenticationRequired\n          render={() => {\n            return <StreamListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Logs\"\n          authenticationRequired\n          render={() => {\n            return <LogListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Admin/New\"\n          authenticationRequired\n          render={() => {\n            return <CreateUserPage />;\n          }}\n        />\n        <Route path=\"/\">\n          <PathNotFoundPage />\n        </Route>\n      </Switch>\n      <SnackbarMessage />\n    </BrowserRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppRouter from \"./app/AppRouter\";\n\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n"],"sourceRoot":""}