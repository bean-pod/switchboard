{"version":3,"sources":["general/HeaderBar.jsx","general/DynamicBreadcrumb.jsx","general/HomePage.jsx","general/Buttons/StreamButton.jsx","general/Buttons/AddDeviceButton.jsx","devicelist/TitleBox.jsx","devicelist/TabPanel.jsx","model/InputChannelInfo.js","model/OutputChannelInfo.js","devicelist/ChannelDetailsTableHead.jsx","devicelist/ChannelDetailsTableRow.jsx","devicelist/ChannelDetailsTable.jsx","general/StatusIndicator.jsx","model/DeviceInfo.js","devicelist/ActionMenu.jsx","devicelist/DevicesTable.jsx","general/VerticalTabs.jsx","devicelist/ContentsTable.jsx","DefaultMakeStylesTheme.js","devicelist/DeviceListPage.jsx","createStream/SearchBar.jsx","createStream/SelectDeviceTableRow.jsx","createStream/SelectDevicesTable.jsx","createStream/StreamingTable.jsx","model/ConvertDataFormat.js","model/StreamInfo.js","api/SampleData.js","api/StreamApi.js","streamlist/DeleteStream.jsx","streamlist/StreamsTable.jsx","streamlist/StreamList.jsx","createStream/StreamingPage.jsx","deviceDetailsPage/DeviceDetailsConciseRow.jsx","deviceDetailsPage/DeviceDetailsConciseTable.jsx","general/HorizontalTabPanel.jsx","deviceDetailsPage/TabPanels/DeviceDetailsActivityPanel.jsx","deviceDetailsPage/TabPanels/DeviceDetailsNotesPanel.jsx","deviceDetailsPage/DeviceDetailsTabTable.jsx","api/DeviceApi.js","deviceDetailsPage/DeleteDeviceButton.jsx","deviceDetailsPage/DeviceDetailsPage.jsx","index.jsx"],"names":["HeaderBar","props","classes","makeStyles","theme","menuButton","marginRight","spacing","className","AppBar","position","IconButton","edge","this","color","aria-label","Menu","to","activeClassName","exact","id","Notifications","AccountCircle","React","Component","DynamicBreadcrumb","breadcrumbs","i","Box","padding","Breadcrumbs","map","crumb","Link","href","Typography","HomePage","Container","StreamButton","type","StyledButton","withStyles","root","background","borderRadius","border","height","margin","label","textTransform","Button","SwapHoriz","AddDeviceButton","AddSharp","TitleBox","TabPanel","children","value","index","other","role","hidden","aria-labelledby","p","component","InputChannelInfo","name","port","decoder","OutputChannelInfo","encoder","ChannelDetailsTableHead","TableRow","TableCell","ChannelDetailsTableRow","channel","ChannelDetailsTable","channels","Table","style","maxWidth","TableHead","TableBody","StatusIndicator","status","getStatusStyle","DeviceInfo","serial","lastCommunication","publicIpAddress","privateIpAddress","displayName","deviceType","extras","serialNumber","publicIp","privateIp","ActionMenu","state","anchorElement","setAnchorElement","bind","handleClick","handleClose","event","currentTarget","element","setState","device","aria-controls","aria-haspopup","onClick","size","MoreVert","anchorEl","keepMounted","open","Boolean","onClose","anchorOrigin","horizontal","vertical","transformOrigin","MenuItem","pathname","getColumnInfo","title","field","render","rowData","deviceInfo","lookup","Online","Pending","Error","Offline","filtering","sorting","align","export","DevicesTable","devices","TableContainer","maxHeight","components","Toolbar","columns","data","detailPanel","icon","ExpandMore","openIcon","ExpandLess","tooltip","variant","options","toolbar","search","exportButton","headerStyle","backgroundColor","fontWeight","actionsColumnIndex","draggable","icons","Filter","FilterList","Search","ResetSearch","Clear","SortArrow","ArrowDownward","Export","SaveAlt","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","VerticalTabs","handleChange","newTab","setValue","tabs","Tabs","onChange","orientation","Tab","getTabProps","ContentsTable","senders","receivers","dataSource","handleValueChange","handleSendersChange","handleReceiversChange","getSenders","getReceivers","tabIndex","display","flexGrow","defaultMakeStylesTheme","palette","paper","borderRight","divider","DeviceListPage","useStyles","SearchBar","right","marginLeft","breakpoints","up","width","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","TextField","placeholder","InputProps","startAdornment","InputAdornment","SelectDeviceTableRow","deviceDetails","ListItem","button","dense","ListItemText","primary","Collapse","in","timeout","unmountOnExit","List","disablePadding","secondary","Select","defaultValue","SelectDevicesTable","overflow","StreamingTable","selectedSenderID","selectedReceiverID","onSenderSelected","onReceiverSelected","handleSubmit","axios","post","process","inputChannelId","outputChannelId","preventDefault","selectedSender","target","selectedReceiver","onSubmit","Grid","container","alignContent","justify","item","xs","convertToDataObject","databaseDevice","inputs","StreamInfo","sender","receiver","date","time","sampleInputChannels","InChannelInfo","sampleOutputChannels","OutChannelInfo","getAllStreams","callback","get","then","streams","Promise","all","streamId","getStream","catch","error","sampleSenders","sampleReceivers","SampleData","resolve","reject","response","stream","outputChannel","inputChannel","deleteStream","delete","DeleteStream","deleteId","useState","setOpen","cancelDelete","Tooltip","Delete","Dialog","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","StreamApi","autoFocus","StreamsTable","StreamList","handleStreamsChange","StreamingPage","deviceDataSource","streamDataSource","DeviceDetailsConciseRow","getPropertyDisplayName","createTableCellContents","createInnerTable","DeviceDetailsConciseTable","Paper","getConciseProperties","property","HorizontalTabPanel","DeviceDetailsActivityPanel","DeviceDetailsNotesPanel","DeviceDetailsTabTable","indicatorColor","textColor","tabInfo","getPanelContents","getStatus","lastCommunicationString","lastCommunicationDate","Date","now","getTime","output","input","deleteDevice","deviceId","DeleteDeviceButton","history","useHistory","DeviceApi","push","DeviceDetailsPage","location","defaultProps","ReactDOM","StrictMode","path","document","getElementById"],"mappings":"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eACA,KACA,gBACA,UACA,WACA,UACA6L,GACA,UACAtL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,UACA6L,GACA,UACAtL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,WACA,SACA6L,GACA,UACAtL,MY5DAqM,CAAsBZ,MAIrB,SAAShF,GAAagF,GAC3B7B,KACG8B,IAAI5B,sDACJ6B,MAAK,SAACxF,GACLsF,EACEtF,EAAU7C,KAAKpH,KAAI,SAAC+O,GAClB,IAAIjM,EAAW,GACXiM,EAASyE,QACX1Q,EAAWiM,EAASyE,MAAMxT,KAAI,SAACwT,GAC7B,OAAO,IAAItR,GACTsR,EAAMnU,GACNmU,EAAM5Q,QAAQT,KACdqR,EAAM5Q,QAAQR,KACd,UAIN,IAAMqB,EAC0B,MAA9BsL,EAAStL,kBACL,QACAsL,EAAStL,kBACf,OAAO,IAAIF,GACTwL,EAAShL,aACTN,EACAsL,EAASlK,OAAOnB,gBAChBqL,EAASlK,OAAOlB,iBAChBoL,EAASlK,OAAOjB,YAChBqP,GAAUlE,EAAStL,mBACnBX,EACA,UACA,CAAC,6CAKRiN,OAAM,SAACC,IZyCL,SAAsBT,GA0M3BA,EAzMwB,CACtB,IAAIhM,GACF,eACA,KACA,gBACA,UACA,aACA,SACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,QACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,UACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,UACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,SACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,QACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,UACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,UACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,aACA,SACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,SACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,QACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,UACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,UACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,SACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,QACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,UACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,UACA2L,GACA,UACApL,IAEF,IAAIP,GACF,eACA,KACA,gBACA,UACA,cACA,SACA2L,GACA,UACApL,MY9OAqM,CAAwBZ,MAIvB,SAASkE,GAAaC,EAAUnE,GACrC7B,KACGiD,OADH,0CAC6C+C,IAC1CjE,KAAKF,GACLQ,OAAM,eC7FI,SAAS4D,GAAmBzV,GAAQ,IACzC2S,EAAa3S,EAAb2S,SADwC,EAExBrR,IAAMsR,UAAS,GAFS,oBAEzCzL,EAFyC,KAEnC0L,EAFmC,KAG1C6C,EAAUC,cAKV7C,EAAe,WACnB,OAAOD,GAAQ,IAQjB,OACE,qCACE,cAAC5P,EAAA,EAAD,CAAQ9B,GAAG,YAAYsI,QAAQ,WAAW3C,QAdrB,WACvB,OAAO+L,GAAQ,IAab,oBAGA,eAACI,GAAA,EAAD,CACE9L,KAAMA,EACNE,QAASyL,EACTjP,kBAAgB,6BAChBqP,mBAAiB,mCACjB/R,GAAG,uBALL,UAOE,cAACgS,GAAA,EAAD,CAAahS,GAAG,6BAAhB,4BAGA,cAACiS,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAmBlS,GAAG,mCAAtB,4DAIF,eAACmS,GAAA,EAAD,WACE,cAACrQ,EAAA,EAAD,CAAQ9B,GAAG,kBAAkB2F,QAASgM,EAAcjS,MAAM,UAA1D,oBAGA,cAACoC,EAAA,EAAD,CACE9B,GAAG,mBACH2F,QAhCY,WAGpB,OAFA8O,GAAuBjD,GACvB+C,EAAQG,KAAK,YACNhD,GAAQ,IA8BPhS,MAAM,YACN2S,WAAS,EAJX,6BCzCK,SAASsC,GAAkB9V,GAAQ,IAGnC2G,EAET3G,EAHF+V,SACE9P,MAASU,OAKb,OACE,eAACvE,EAAA,EAAD,WACE,cAAC,EAAD,CACEX,YAAa,CACX,CAAC,OAAQ,KACT,CAAC,aAAc,YACf,CAACkF,EAAO1C,KAAM0C,EAAOxF,OAGzB,eAAC+O,GAAA,EAAD,CAAMC,WAAS,EAAC7P,QAAS,EAAzB,UACE,cAAC4P,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIhQ,UAAU,mCAA7B,SACE,qBAAKA,UAAU,QAAf,SAAwBoG,EAAO1C,SAEjC,cAACiM,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,KACf,eAACL,GAAA,EAAD,CAAMC,WAAS,EAACI,GAAI,EAAGjQ,QAAS,EAAhC,UACE,cAAC4P,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACE,cAAC4D,GAAD,CAA2BxN,OAAQA,MAErC,cAACuJ,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACE,cAACtN,EAAA,EAAD,CAAQwG,QAAQ,YAAY5I,MAAM,UAAlC,oBAIF,cAACqP,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACE,cAACkF,GAAD,CAAoB9C,SAAUhM,EAAOd,oBAGzC,cAACqK,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACf,cAACL,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,GAAD,CAAuBhF,KA/BlB,CAAC,WAAY,eAAgB,SA+BC5E,OAAQA,YAMrDmP,GAAkBE,aAAe,CAC/BD,SAAU,CAAE9P,MAAO,CAAEU,OdqEd,IAAItB,GACT,eACA,KACA,UACA,WACA,SACA6L,GACA,UACAtL,OevHJqQ,IAASlO,OACP,cAAC,IAAMmO,WAAP,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOhV,OAAK,EAACiV,KAAM,CAAC,IAAK,SAAUpS,UAAW5B,IAC9C,cAAC,IAAD,CACEjB,OAAK,EACLiV,KAAK,WACLpO,OAAQ,SAAC/H,GAAD,OACN,cAAC,GAAD,2BAAoBA,GAApB,IAA2BgM,WAAY4J,QAG3C,cAAC,IAAD,CACE1U,OAAK,EACLiV,KAAK,aACLpO,OAAQ,SAAC/H,GAAD,OACN,cAAC,GAAD,2BACMA,GADN,IAEE6T,iBAAkB+B,EAClB9B,iBAAkBP,QAIxB,cAAC,IAAD,CACErS,OAAK,EACLiV,KAAK,6BACLpS,UAAW+R,aAKnBM,SAASC,eAAe,W","file":"static/js/main.be5ee914.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\nimport { AccountCircle, Menu, Notifications } from \"@material-ui/icons/\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default class HeaderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      menuButton: {\n        marginRight: theme.spacing(2)\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"headerBar\">\n          <AppBar position=\"static\">\n            <Toolbar className=\"darkGrey\">\n              <IconButton\n                edge=\"start\"\n                className={this.classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n              >\n                <Menu />\n              </IconButton>\n              <div className=\"headerTitle\">\n                <NavLink\n                  to=\"/\"\n                  activeClassName=\"headerTitle\"\n                  className=\"headerTitle\"\n                  exact\n                >\n                  Switchboard\n                </NavLink>\n              </div>\n              <IconButton id=\"notifBtn\" color=\"inherit\">\n                <Notifications />\n              </IconButton>\n              <IconButton id=\"acctBtn\" color=\"inherit\">\n                <AccountCircle />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Box, Breadcrumbs, Link, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default class DynamicBreadcrumb extends React.Component {\n  render() {\n    const { breadcrumbs } = this.props;\n    let i = 0;\n    return (\n      <Box padding=\"2em 0em 0em 1em\">\n        <Breadcrumbs aria-label=\"breadcrumb\" id=\"breadcrumbParent\">\n          {breadcrumbs.map((crumb) => {\n            return (\n              <Link\n                color=\"inherit\"\n                href={crumb[1]}\n                id={`breadcrumb${i}`}\n                key={`breadcrumb${i++}`}\n              >\n                <Typography color=\"textPrimary\">{crumb[0]}</Typography>\n              </Link>\n            );\n          })}\n        </Breadcrumbs>\n      </Box>\n    );\n  }\n}\nDynamicBreadcrumb.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired\n};\n","import React from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport DynamicBreadcrumb from \"./DynamicBreadcrumb\";\n\nexport default class HomePage extends React.Component {\n  render() {\n    return (\n      <Container>\n        <DynamicBreadcrumb\n          breadcrumbs={[\n            [\"Home\", \"\"],\n            [\"My Devices\", \"Devices\"],\n            [\"Streaming\", \"Streaming\"]\n          ]}\n        />\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { SwapHoriz } from \"@material-ui/icons/\";\n\nexport default class StreamButton extends React.Component {\n  render() {\n    const { id, type } = this.props;\n    const StyledButton = withStyles({\n      root: {\n        background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n        borderRadius: 90,\n        border: 0,\n        color: \"white\",\n        height: 40,\n        padding: \"0 5px\",\n        margin: \"1em\"\n      },\n      label: {\n        textTransform: \"\"\n      }\n    })(Button);\n\n    return (\n      <StyledButton id={id} type={type}>\n        <div className=\"buttonText\">\n          <SwapHoriz />\n          Stream\n        </div>\n      </StyledButton>\n    );\n  }\n}\nStreamButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport { AddSharp } from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\n\nexport default class AddDeviceButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.id = props.id;\n  }\n\n  render() {\n    const StyledButton = withStyles({\n      root: {\n        background: \"linear-gradient(45deg, #01b2fe 30%, #01b2fe 90%)\",\n        borderRadius: 90,\n        border: 0,\n        color: \"white\",\n        height: 40,\n        padding: \"0px\"\n      },\n      label: {\n        textTransform: \"\"\n      }\n    })(Button);\n\n    return (\n      <StyledButton id={this.id}>\n        <div className=\"buttonText\">\n          <AddSharp />\n          Add Device\n        </div>\n      </StyledButton>\n    );\n  }\n}\nAddDeviceButton.propTypes = {\n  id: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nimport StreamButton from \"../general/Buttons/StreamButton\";\nimport AddDeviceButton from \"../general/Buttons/AddDeviceButton\";\n\nexport default class TitleBox extends React.Component {\n  render() {\n    return (\n      <>\n        <Box className=\"flexContents headerAreaNoUnderline\">\n          <div className=\"title\">My Devices</div>\n          <div className=\"alignRightFloat\" spacing={2}>\n            <NavLink\n              to=\"/Streaming\"\n              activeClassName=\"hideLinkStyle\"\n              className=\"hideLinkStyle\"\n              exact\n            >\n              <StreamButton id=\"DeviceListStreamBtn\" type=\"submit\" />\n            </NavLink>\n            <AddDeviceButton id=\"DeviceListAddDevBtn\" />\n          </div>\n        </Box>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default function TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={0}>\n          <Typography component=\"span\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.element.isRequired,\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired\n};\n","export default class InputChannelInfo {\n  constructor(id, name, port, decoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.decoder = decoder;\n  }\n}\n","export default class OutputChannelInfo {\n  constructor(id, name, port, encoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.encoder = encoder;\n  }\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function ChannelDetailsTableHead() {\n  return (\n    <TableRow>\n      <TableCell className=\"lightGrey\">ID</TableCell>\n      <TableCell className=\"lightGrey\">Name</TableCell>\n      <TableCell className=\"lightGrey\">Port</TableCell>\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\n\nexport default function ChannelDetailsTableRow(props) {\n  const {\n    channel: { id, name, port }\n  } = props;\n  return (\n    <TableRow>\n      <TableCell>{id}</TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{port}</TableCell>\n    </TableRow>\n  );\n}\nChannelDetailsTableRow.propTypes = {\n  channel: PropTypes.oneOfType([\n    PropTypes.instanceOf(InputChannelInfo),\n    PropTypes.instanceOf(OutputChannelInfo)\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Table, TableBody, TableHead } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport ChannelDetailsTableHead from \"./ChannelDetailsTableHead\";\nimport ChannelDetailsTableRow from \"./ChannelDetailsTableRow\";\n\nexport default function ChannelDetailsTable(props) {\n  const { channels } = props;\n  return (\n    <Table style={{ margin: \"1em\", maxWidth: \"98%\" }} className=\"flexContents\">\n      <TableHead>\n        <ChannelDetailsTableHead />\n      </TableHead>\n      <TableBody>\n        {channels.map((channel) => {\n          return (\n            <ChannelDetailsTableRow channel={channel} key={channel.name} />\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\nChannelDetailsTable.propTypes = {\n  channels: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.instanceOf(InputChannelInfo),\n      PropTypes.instanceOf(OutputChannelInfo)\n    ])\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class StatusIndicator extends React.Component {\n  getStatusStyle() {\n    const { status } = this.props;\n    switch (status) {\n      case \"Online\":\n        return \"green statusIndicatorBody statusTextOnline \";\n      case \"Pending\":\n        return \"yellow statusIndicatorBody statusTextOnline\";\n      case \"Error\":\n        return \"red statusIndicatorBody statusTextOnline\";\n      default:\n        return \"lightGrey statusIndicatorBody statusTextOffline\";\n    }\n  }\n\n  render() {\n    const { status } = this.props;\n    return <div className={this.getStatusStyle()}>{status}</div>;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.oneOf([\"Online\", \"Offline\", \"Error\", \"Pending\"]).isRequired\n};\n","export default class DeviceInfo {\n  constructor(\n    serial,\n    lastCommunication,\n    publicIpAddress,\n    privateIpAddress,\n    displayName,\n    status,\n    channels,\n    deviceType,\n    extras\n  ) {\n    this.serialNumber = serial;\n    this.lastCommunication = lastCommunication;\n    this.publicIp = publicIpAddress;\n    this.privateIp = privateIpAddress;\n    this.name = displayName;\n    this.status = status;\n    this.channels = channels;\n    this.deviceType = deviceType;\n    this.extras = extras;\n  }\n\n  static getConciseProperties() {\n    return [\n      \"name\",\n      \"serialNumber\",\n      \"status\",\n      \"publicIp\",\n      \"privateIp\",\n      \"channels\"\n    ];\n  }\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { MoreVert } from \"@material-ui/icons/\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class ActionMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorElement: null\n    };\n\n    this.setAnchorElement = this.setAnchorElement.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick(event) {\n    this.setAnchorElement(event.currentTarget);\n  }\n\n  handleClose() {\n    this.setAnchorElement(null);\n  }\n\n  setAnchorElement(element) {\n    this.setState({\n      anchorElement: element\n    });\n  }\n\n  render() {\n    const { anchorElement } = this.state;\n    const { device } = this.props;\n    return (\n      <>\n        <IconButton\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n          size=\"small\"\n        >\n          <MoreVert />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorElement}\n          keepMounted\n          open={Boolean(anchorElement)}\n          onClose={this.handleClose}\n          anchorOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n          transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        >\n          <MenuItem onClick={this.handleClose}>\n            <NavLink\n              to={{\n                pathname: `/Devices/Details/${device.name}`,\n                state: { device }\n              }}\n              className=\"invisibleLink\"\n            >\n              View Details\n            </NavLink>\n          </MenuItem>\n          <MenuItem onClick={this.handleClose}>\n            Start stream with this as receiver\n          </MenuItem>\n          <MenuItem onClick={this.handleClose}>\n            <span className=\"warningText\">Delete</span>\n          </MenuItem>\n        </Menu>\n      </>\n    );\n  }\n}\n\nActionMenu.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  FilterList,\n  Search,\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable, { MTableToolbar } from \"material-table\";\n\nimport ChannelDetailsTable from \"./ChannelDetailsTable\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport ActionMenu from \"./ActionMenu\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nfunction getComponents() {\n  return {\n    /*  eslint-disable react/jsx-props-no-spreading */\n    Toolbar: (props) => (\n      <div className=\"lightestGrey\">\n        <MTableToolbar {...props} />\n      </div>\n    )\n  };\n}\n\nfunction buildNavlink(deviceInfo) {\n  return (\n    <NavLink\n      to={{\n        pathname: `/Devices/Details/${deviceInfo.name}`,\n        state: { device: deviceInfo }\n      }}\n    >\n      {deviceInfo.name}\n    </NavLink>\n  );\n}\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"Name\",\n      field: \"name\",\n      render: (rowData) => buildNavlink(rowData)\n    },\n    {\n      title: \"Serial Number\",\n      field: \"serialNumber\"\n    },\n    {\n      title: \"Status\",\n      field: \"status\",\n      render: (rowData) => <StatusIndicator status={rowData.status} />,\n      lookup: {\n        Online: \"Online\",\n        Pending: \"Pending\",\n        Error: \"Error\",\n        Offline: \"Offline\"\n      }\n    },\n    {\n      title: \"Private IP Address\",\n      field: \"privateIp\"\n    },\n    {\n      title: \"Public IP Address\",\n      field: \"publicIp\"\n    },\n    {\n      title: \"Actions\",\n      field: \"action\",\n      filtering: false,\n      sorting: false,\n      render: (rowData) => <ActionMenu device={rowData} />,\n      align: \"center\",\n      export: false\n    }\n  ];\n}\n\nfunction getDetailPanel() {\n  return [\n    {\n      icon: ExpandMore,\n      openIcon: ExpandLess,\n      tooltip: \"Show Device Details\",\n      render: (rowData) => {\n        return (\n          <div className=\"lightestGrey\">\n            <Box margin={2}>\n              <Typography variant=\"h6\">Channels</Typography>\n              <ChannelDetailsTable channels={rowData.channels} />\n            </Box>\n          </div>\n        );\n      }\n    }\n  ];\n}\n\nfunction getOptions() {\n  return {\n    toolbar: true,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n      // position: 'sticky', top: 0\n    },\n    // maxBodyHeight: '650px',\n    // above lines commented out b/c scrollbar bug, see: https://github.com/mbrn/material-table/issues/780\n    actionsColumnIndex: -1,\n    filtering: true,\n    draggable: false\n  };\n}\n\nfunction getIcons() {\n  return {\n    Filter: FilterList,\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default class DevicesTable extends React.Component {\n  render() {\n    const { title, devices } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer style={{ maxHeight: 570 }}>\n            <MaterialTable\n              title={title}\n              components={getComponents()}\n              columns={getColumnInfo()}\n              data={devices}\n              detailPanel={getDetailPanel()}\n              options={getOptions()}\n              icons={getIcons()}\n            />\n          </TableContainer>\n        </Box>\n      </>\n    );\n  }\n}\n\nDevicesTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  devices: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport { Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default class VerticalTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event, newTab) {\n    const { setValue } = this.props;\n    setValue(newTab);\n  }\n\n  getTabProps(index) {\n    return {\n      id: `vertical-tab-${index}`,\n      \"aria-controls\": `vertical-tabpanel-${index}`\n    };\n  }\n\n  render() {\n    const {\n      value,\n      classes: { tabs }\n    } = this.props;\n    return (\n      <>\n        <Tabs\n          value={value}\n          onChange={this.handleChange}\n          aria-label=\"Vertical tabs\"\n          className={`${tabs} lightGrey blackFont flexContents`}\n          orientation=\"vertical\"\n          variant=\"scrollable\"\n        >\n          <Tab label=\"Senders\" {...this.getTabProps(0)} />\n          <Tab label=\"Receivers\" {...this.getTabProps(1)} />\n        </Tabs>\n      </>\n    );\n  }\n}\nVerticalTabs.propTypes = {\n  setValue: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TabPanel from \"./TabPanel\";\nimport DevicesTable from \"./DevicesTable\";\nimport VerticalTabs from \"../general/VerticalTabs\";\n\nexport default class ContentsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      value: 0\n    };\n    this.dataSource = props.dataSource;\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getSenders(this.handleSendersChange);\n    this.dataSource.getReceivers(this.handleReceiversChange);\n  }\n\n  handleValueChange(tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  render() {\n    const { receivers, senders, value } = this.state;\n    const { classes } = this.props;\n    return (\n      <>\n        <Box\n          style={{\n            display: \"flex\",\n            flexGrow: 1\n          }}\n        >\n          <VerticalTabs\n            value={value}\n            setValue={this.handleValueChange}\n            classes={classes}\n          />\n          <TabPanel value={value} index={0} className=\"lightGreyBorder\">\n            <DevicesTable devices={senders} title=\"List of Senders\" />\n          </TabPanel>\n          <TabPanel value={value} index={1} className=\"lightGreyBorder\">\n            <DevicesTable devices={receivers} title=\"List of Receivers\" />\n          </TabPanel>\n        </Box>\n      </>\n    );\n  }\n}\nContentsTable.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default function defaultMakeStylesTheme() {\n  return makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    },\n    tabs: {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }));\n}\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport TitleBox from \"./TitleBox\";\nimport ContentsTable from \"./ContentsTable\";\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport * as useStyles from \"../DefaultMakeStylesTheme\";\n\nexport default class DeviceListPage extends React.Component {\n  render() {\n    const { dataSource } = this.props;\n    return (\n      <Container>\n        <DynamicBreadcrumb\n          breadcrumbs={[\n            [\"Home\", \"/\"],\n            [\"My Devices\", \"Devices\"]\n          ]}\n        />\n        <Box className=\"areaUnderBreadcrumbs\">\n          <TitleBox />\n          <ContentsTable classes={useStyles} dataSource={dataSource} />\n        </Box>\n      </Container>\n    );\n  }\n}\nDeviceListPage.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { InputAdornment, makeStyles, TextField } from \"@material-ui/core\";\n\nimport { Search } from \"@material-ui/icons/\";\n\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      search: {\n        position: \"relative\",\n        right: 0,\n        marginLeft: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n          marginLeft: theme.spacing(1),\n          width: \"auto\"\n        }\n      },\n      searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        alignItems: \"left\",\n        justifyContent: \"center\"\n      },\n      inputRoot: {\n        color: \"inherit\"\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"searchField\">\n          <TextField\n            placeholder=\"Search\"\n            InputProps={{\n              \"aria-label\": \"search\",\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {\" \"}\n                  <Search />\n                </InputAdornment>\n              )\n            }}\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n  MenuItem,\n  Select\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class SelectDeviceTableRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState((state) => ({ open: !state.open }));\n  }\n\n  render() {\n    const {\n      deviceDetails: { channels, name },\n      onChange\n    } = this.props;\n    const { open } = this.state;\n    return (\n      <>\n        <ListItem button dense onClick={this.onClick}>\n          <ListItemText primary={name} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding style={{ width: \"96%\" }}>\n            <ListItem divider>\n              <ListItemText secondary=\"Select Channel\" />\n              <Select defaultValue=\"\" onChange={onChange}>\n                {channels.map((channel) => {\n                  return (\n                    <MenuItem value={channel.id} key={`${name}_${channel.id}`}>\n                      {channel.port}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </ListItem>\n          </List>\n        </Collapse>\n      </>\n    );\n  }\n}\nSelectDeviceTableRow.propTypes = {\n  deviceDetails: PropTypes.instanceOf(DeviceInfo).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { List } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport SearchBar from \"./SearchBar\";\nimport SelectDeviceTableRow from \"./SelectDeviceTableRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class SelectDevicesTable extends React.Component {\n  render() {\n    const { dataSource, name, onChange } = this.props;\n    return (\n      <>\n        <div className=\"subtitle\">{name}</div>\n        <SearchBar />\n        <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n          <List>\n            {dataSource.map((device) => {\n              return (\n                <SelectDeviceTableRow\n                  deviceDetails={device}\n                  key={device.serialNumber}\n                  onChange={onChange}\n                />\n              );\n            })}\n          </List>\n        </div>\n      </>\n    );\n  }\n}\nSelectDevicesTable.propTypes = {\n  name: PropTypes.string.isRequired,\n  dataSource: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\nimport PropTypes from \"prop-types\";\nimport SelectDevicesTable from \"./SelectDevicesTable\";\nimport StreamButton from \"../general/Buttons/StreamButton\";\n\nexport default class StreamingTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      selectedSenderID: \"\",\n      selectedReceiverID: \"\"\n    };\n\n    this.dataSource = props.dataSource;\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n\n    this.onSenderSelected = this.onSenderSelected.bind(this);\n    this.onReceiverSelected = this.onReceiverSelected.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getSenders(this.handleSendersChange);\n    this.dataSource.getReceivers(this.handleReceiversChange);\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  handleSubmit(event) {\n    const { selectedReceiverID, selectedSenderID } = this.state;\n    if (selectedReceiverID !== \"\" && selectedSenderID !== \"\") {\n      axios.post(process.env.REACT_APP_STREAM, {\n        inputChannelId: selectedReceiverID,\n        outputChannelId: selectedSenderID\n      });\n    }\n    event.preventDefault();\n  }\n\n  onSenderSelected(selectedSender) {\n    this.setState({\n      selectedSenderID: selectedSender.target.value\n    });\n  }\n\n  onReceiverSelected(selectedReceiver) {\n    this.setState({\n      selectedReceiverID: selectedReceiver.target.value\n    });\n  }\n\n  render() {\n    const { receivers, senders } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} id=\"createStreamForm\">\n          <Grid\n            container\n            spacing={2}\n            alignContent=\"center\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"SenderTable\">\n                <SelectDevicesTable\n                  name=\"Sender Devices\"\n                  dataSource={senders}\n                  onChange={this.onSenderSelected}\n                />\n              </div>\n            </Grid>\n            <Grid\n              container\n              item\n              xs={2}\n              id=\"TableStartStreamingBtn\"\n              justify=\"center\"\n              alignContent=\"center\"\n              alignItems=\"center\"\n              display=\"flex\"\n            >\n              <StreamButton id=\"StreamingStreamBtn\" type=\"submit\" />\n            </Grid>\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"ReceiverTable\">\n                <SelectDevicesTable\n                  name=\"Receiver Devices\"\n                  dataSource={receivers}\n                  onChange={this.onReceiverSelected}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </form>\n      </>\n    );\n  }\n}\nStreamingTable.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import DeviceInfo from \"./DeviceInfo\";\n\nexport function convertToDataObject(databaseDevice) {\n  return new DeviceInfo(\n    databaseDevice.serialNumber,\n    databaseDevice.lastCommunication,\n    databaseDevice.device.publicIpAddress,\n    databaseDevice.device.privateIpAddress,\n    databaseDevice.device.displayName,\n    databaseDevice.device.status,\n    databaseDevice.inputs\n  );\n}\n\nexport function convertToServiceObject(deviceInfo) {\n  if (Object.prototype.hasOwnProperty.call(deviceInfo, \"outputs\")) {\n    return {\n      serialNumber: deviceInfo.serialNumber,\n      lastCommunication: deviceInfo.lastCommunication,\n      device: {\n        serialNumber: deviceInfo.serialNumber,\n        publicIpAddress: deviceInfo.publicIp,\n        privateIpAddress: deviceInfo.privateIp,\n        displayName: deviceInfo.name,\n        status: deviceInfo.status\n      },\n      outputs: deviceInfo.channels\n    };\n  }\n  return {\n    serialNumber: deviceInfo.serialNumber,\n    lastCommunication: deviceInfo.lastCommunication,\n    device: {\n      serialNumber: deviceInfo.serialNumber,\n      publicIpAddress: deviceInfo.publicIp,\n      privateIpAddress: deviceInfo.privateIp,\n      displayName: deviceInfo.name,\n      status: deviceInfo.status\n    },\n    inputs: deviceInfo.channels\n  };\n}\n","export default class StreamInfo {\n  // to be used once backend has date, status, type, and time fields\n  // constructor(id, date, sender, receiver, status, type, time, extras) {\n  //     this.id = id;\n  //     this.date = date;\n  //     this.sender = sender;\n  //     this.receiver = receiver;\n  //     this.status = status;\n  //     this.type = type;\n  //     this.time = time;\n  //     this.extras = extras;\n  // }\n\n  // temporary with static fields until backend is up to snuff\n  constructor(id, sender, receiver, extras) {\n    this.id = id;\n    this.date = \"2020-10-31T08:15:30\";\n    this.sender = sender;\n    this.receiver = receiver;\n    this.status = \"Online\";\n    this.type = \"Type 1\";\n    this.time = \"00:34:44\";\n    this.extras = extras;\n  }\n}\n","import DeviceInfo from \"../model/DeviceInfo\";\nimport OutChannelInfo from \"../model/OutputChannelInfo\";\nimport InChannelInfo from \"../model/InputChannelInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nconst extras = [\"Additional Device details go here\"];\nconst sampleInputChannels = [\n  new InChannelInfo(1, \"Input ch 1\", 500, null),\n  new InChannelInfo(2, \"Input ch 2\", 456, null),\n  new InChannelInfo(3, \"Input ch 3\", 800, null)\n];\nconst sampleOutputChannels = [\n  new OutChannelInfo(1, \"Output ch 1\", 500, null),\n  new OutChannelInfo(2, \"Output ch 2\", 456, null),\n  new OutChannelInfo(3, \"Output ch 3\", 800, null)\n];\n\nexport function getSenders(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:30:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 3\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:40:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 4\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:50:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 5\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:60:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 6\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:70:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 7\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:80:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 8\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:90:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 9\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n\n  callback(sampleSenders);\n}\n\nexport function getSampleSender() {\n  return new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n}\n\nexport function getReceivers(callback) {\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:03:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 3\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:04:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 4\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:05:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 5\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:06:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 6\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:07:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 7\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:08:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 8\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:09:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 9\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:11:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 11\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:21:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 12\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:31:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 13\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:41:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 14\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:51:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 15\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:61:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 16\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:71:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 17\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:81:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 18\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:91:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 19\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  callback(sampleReceivers);\n}\n\nexport function getAllStreams(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  const sampleStreams = [\n    new StreamInfo(1, sampleSenders[0], sampleReceivers[0], [\n      \"Additional Stream Details go here\"\n    ]),\n    new StreamInfo(2, sampleSenders[1], sampleReceivers[1], [\n      \"Additional Stream Details go here\"\n    ]),\n    new StreamInfo(3, sampleSenders[1], sampleReceivers[0], [\n      \"Additional Stream Details go here\"\n    ])\n  ];\n\n  callback(sampleStreams);\n}\n","import axios from \"axios\";\nimport { convertToDataObject } from \"../model/ConvertDataFormat\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport * as SampleData from \"./SampleData\";\n\nexport function getAllStreams(callback) {\n  axios\n    .get(process.env.REACT_APP_STREAM)\n    .then((streams) => {\n      Promise.all(\n        streams.data.map((streamId) => {\n          return getStream(streamId);\n        })\n      ).then(callback);\n    })\n    .catch((error) => {\n      SampleData.getAllStreams(callback);\n    });\n}\n\nexport function getStream(streamId) {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(`${process.env.REACT_APP_STREAM}/${streamId}`)\n      .then((response) => {\n        const stream = response.data;\n        resolve(\n          new StreamInfo(\n            stream.id,\n            convertToDataObject(stream.outputChannel.encoder),\n            convertToDataObject(stream.inputChannel.decoder),\n            [\"Additional stream info goes here.\"]\n          )\n        );\n      })\n      .catch(reject);\n  });\n}\n\nexport function deleteStream(streamId, callback) {\n  axios\n    .delete(`${process.env.REACT_APP_STREAM}/${streamId}`)\n    .then(callback)\n    .catch(() => {});\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PropTypes from \"prop-types\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport * as StreamApi from \"../api/StreamApi\";\n\nexport default function DeleteStream(props) {\n  const { deleteId } = props;\n  const [open, setOpen] = React.useState(false);\n  const openDeleteDialog = () => {\n    return setOpen(true);\n  };\n  const cancelDelete = () => {\n    return setOpen(false);\n  };\n  const confirmDelete = () => {\n    StreamApi.deleteStream(deleteId);\n    return setOpen(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"Delete Stream\" aria-label=\"delete stream\">\n        <IconButton onClick={openDeleteDialog}>\n          <Delete />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        open={open}\n        onClose={cancelDelete}\n        aria-labelledby=\"delete-stream-dialog-title\"\n        aria-describedby=\"delete-stream-dialog-description\"\n        id=\"delete-stream-dialog\"\n      >\n        <DialogTitle id=\"delete-stream-dialog-title\">\n          Confirm Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"delete-stream-dialog-description\">\n            {`Are you sure you want to end stream ${deleteId}?`}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancelDelete} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={confirmDelete} color=\"secondary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nDeleteStream.propTypes = {\n  deleteId: PropTypes.objectOf(PropTypes.number).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\n\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport DeleteStream from \"./DeleteStream\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"ID\",\n      field: \"id\"\n    },\n    {\n      title: \"Date\",\n      field: \"date\"\n    },\n    {\n      title: \"Sender\",\n      field: \"sender.name\"\n    },\n    {\n      title: \"Receiver\",\n      field: \"receiver.name\"\n    },\n    {\n      title: \"Status\",\n      field: \"status\",\n      render: (rowData) => <StatusIndicator status={rowData.status} />\n    },\n    {\n      title: \"Type\",\n      field: \"type\"\n    },\n    {\n      title: \"Time Elapsed\",\n      field: \"time\"\n    },\n    {\n      title: \"Actions\",\n      field: \"action\",\n      filtering: false,\n      sorting: false,\n      render: (rowData) => <DeleteStream deleteId={rowData.id} />,\n      align: \"center\",\n      export: false\n    }\n  ];\n}\n\nfunction getDetailPanel() {\n  return [\n    {\n      icon: ExpandMore,\n      openIcon: ExpandLess,\n      tooltip: \"Show Stream Details\",\n      render: () => {\n        return (\n          <div className=\"lightestGrey\">\n            <Typography variant=\"h6\">Additional stream details</Typography>\n          </div>\n        );\n      }\n    }\n  ];\n}\n\nfunction getOptions() {\n  return {\n    toolbar: false,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    actionsColumnIndex: -1,\n    filtering: false,\n    draggable: false\n  };\n}\n\nfunction getIcons() {\n  return {\n    SortArrow: ArrowDownward,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default class StreamsTable extends React.Component {\n  render() {\n    const { streams } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer>\n            <MaterialTable\n              columns={getColumnInfo()}\n              data={streams}\n              detailPanel={getDetailPanel()}\n              options={getOptions()}\n              icons={getIcons()}\n            />\n          </TableContainer>\n        </Box>\n      </>\n    );\n  }\n}\n\nStreamsTable.propTypes = {\n  streams: PropTypes.arrayOf(PropTypes.instanceOf(StreamInfo)).isRequired\n};\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport StreamsTable from \"./StreamsTable\";\n\nexport default class StreamList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: []\n    };\n    this.dataSource = props.dataSource;\n    this.handleStreamsChange = this.handleStreamsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getAllStreams(this.handleStreamsChange);\n  }\n\n  handleStreamsChange(streams) {\n    this.setState({\n      streams\n    });\n  }\n\n  render() {\n    const { streams } = this.state;\n    return (\n      <>\n        <Container>\n          <Box className=\"headerAreaUnderline\">\n            <div className=\"title\">Current Streams</div>\n          </Box>\n          <StreamsTable streams={streams} />\n        </Container>\n      </>\n    );\n  }\n}\nStreamList.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport StreamingTable from \"./StreamingTable\";\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport StreamList from \"../streamlist/StreamList\";\n\nexport default class StreamingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dataSource = props.deviceDataSource;\n  }\n\n  render() {\n    const { deviceDataSource, streamDataSource } = this.props;\n    return (\n      <Container>\n        <DynamicBreadcrumb\n          breadcrumbs={[\n            [\"Home\", \"/\"],\n            [\"My Devices\", \"Devices\"],\n            [\"Streaming\", \"Streaming\"]\n          ]}\n        />\n        <Box className=\"areaUnderBreadcrumbs\">\n          <Box className=\"flexContents headerAreaUnderline\">\n            <div className=\"title\">Streaming</div>\n          </Box>\n          <div id=\"StreamingTable\">\n            <StreamingTable dataSource={deviceDataSource} />\n          </div>\n        </Box>\n        <Box>\n          <StreamList dataSource={streamDataSource} />\n        </Box>\n      </Container>\n    );\n  }\n}\nStreamingPage.propTypes = {\n  deviceDataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  streamDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\nimport { TableContainer, TableCell, TableRow } from \"@material-ui/core\";\nimport ChannelDetailsTable from \"../devicelist/ChannelDetailsTable\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport StatusIndicator from \"../general/StatusIndicator\";\n\nexport default class DeviceDetailsConciseRow extends React.Component {\n  static getPropertyDisplayName(name) {\n    switch (name) {\n      case \"serialNumber\":\n        return \"Serial Number\";\n      case \"lastCommunication\":\n        return \"Last Communication\";\n      case \"privateIp\":\n        return \"Private IP Address\";\n      case \"publicIp\":\n        return \"Public IP Address\";\n      case \"name\":\n        return \"Name\";\n      case \"status\":\n        return \"Status\";\n      case \"channels\":\n        return \"Channels\";\n      default:\n        return \"Additional Info\";\n    }\n  }\n\n  static createInnerTable(value) {\n    return (\n      <TableContainer>\n        <ChannelDetailsTable channels={value} />\n      </TableContainer>\n    );\n  }\n\n  static createTableCellContents(name, value) {\n    switch (name) {\n      case \"channels\":\n        return DeviceDetailsConciseRow.createInnerTable(value);\n      case \"status\":\n        return <StatusIndicator status={value} />;\n      default:\n        return value;\n    }\n  }\n\n  render() {\n    const { name, value } = this.props;\n    return (\n      <>\n        <TableRow>\n          <TableCell>\n            {DeviceDetailsConciseRow.getPropertyDisplayName(name)}\n          </TableCell>\n          <TableCell align=\"center\">\n            {DeviceDetailsConciseRow.createTableCellContents(name, value)}\n          </TableCell>\n        </TableRow>\n      </>\n    );\n  }\n}\n\nDeviceDetailsConciseRow.propTypes = {\n  name: Proptypes.string.isRequired,\n  value: Proptypes.arrayOf(\n    Proptypes.oneOfType([InputChannelInfo, OutputChannelInfo])\n  ).isRequired\n};\n","import React from \"react\";\nimport { TableContainer, Table, TableBody, Paper } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceDetailsConciseRow from \"./DeviceDetailsConciseRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function DeviceDetailsConciseTable(props) {\n  const { device } = props;\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableBody>\n            {DeviceInfo.getConciseProperties().map((property) => (\n              <DeviceDetailsConciseRow\n                name={property}\n                value={device[property]}\n                key={`device_${property}`}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nDeviceDetailsConciseTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nexport default function HorizontalTabPanel(props) {\n  const { value, index, children } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </div>\n  );\n}\n\nHorizontalTabPanel.propTypes = {\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import { Container } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function DeviceDetailsActivityPanel() {\n  return <Container>TODO: Design activity log</Container>;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"@material-ui/core\";\n\nexport default function DeviceDetailsNotesPanel(props) {\n  const { extras } = props;\n  return <Container>{extras}</Container>;\n}\n\nDeviceDetailsNotesPanel.propTypes = {\n  extras: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport { Container, Paper, Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport HorizontalTabPanel from \"../general/HorizontalTabPanel\";\nimport DeviceDetailsConciseTable from \"./DeviceDetailsConciseTable\";\nimport DeviceDetailsActivityPanel from \"./TabPanels/DeviceDetailsActivityPanel\";\nimport DeviceDetailsNotesPanel from \"./TabPanels/DeviceDetailsNotesPanel\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class DeviceDetailsTabTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleValueChange(event, tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  static getPanelContents(tabInfo, device) {\n    switch (tabInfo) {\n      case \"Overview\":\n        return <DeviceDetailsConciseTable device={device} />;\n      case \"Activity Log\":\n        return <DeviceDetailsActivityPanel device={device} />;\n      case \"Notes\":\n        return <DeviceDetailsNotesPanel extras={device.extras} />;\n\n      default:\n        return <div>Whoops not a valid value</div>;\n    }\n  }\n\n  render() {\n    const { value } = this.state;\n    const { device, tabs } = this.props;\n    return (\n      <Container component={Paper}>\n        <Tabs\n          value={value}\n          onChange={this.handleValueChange}\n          className=\"lightGrey blackFont flexContents\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"full width tabs example\"\n        >\n          {tabs.map((tabInfo) => {\n            return <Tab label={tabInfo} key={tabInfo} />;\n          })}\n        </Tabs>\n        {tabs.map((tabInfo, index) => {\n          return (\n            <HorizontalTabPanel\n              value={value}\n              key={tabInfo}\n              index={index}\n              device={device}\n            >\n              {DeviceDetailsTabTable.getPanelContents(tabInfo, device)}\n            </HorizontalTabPanel>\n          );\n        })}\n      </Container>\n    );\n  }\n}\nDeviceDetailsTabTable.propTypes = {\n  tabs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import axios from \"axios\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport * as SampleData from \"./SampleData\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\n\nfunction getStatus(lastCommunicationString) {\n  if (!lastCommunicationString) {\n    return \"Pending\";\n  }\n\n  const lastCommunicationDate = new Date(`${lastCommunicationString}Z`);\n  const diff = Date.now() - lastCommunicationDate.getTime();\n  const tenMinutes = 10 * 60 * 1000;\n  if (diff < tenMinutes) {\n    return \"Online\";\n  }\n  return \"Offline\";\n}\n\nexport function getSenders(callback) {\n  axios\n    .get(process.env.REACT_APP_ENCODER)\n    .then((senders) => {\n      callback(\n        senders.data.map((sender) => {\n          let channels = [];\n          if (sender.output) {\n            channels = sender.output.map((output) => {\n              return new OutputChannelInfo(\n                output.id,\n                output.channel.name,\n                output.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            sender.lastCommunication == null\n              ? \"Never\"\n              : sender.lastCommunication;\n          return new DeviceInfo(\n            sender.serialNumber,\n            lastCommunication,\n            sender.device.publicIpAddress,\n            sender.device.privateIpAddress,\n            sender.device.displayName,\n            getStatus(sender.lastCommunication),\n            channels,\n            \"encoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch((error) => {\n      SampleData.getSenders(callback);\n    });\n}\n\nexport function getReceivers(callback) {\n  axios\n    .get(process.env.REACT_APP_DECODER)\n    .then((receivers) => {\n      callback(\n        receivers.data.map((receiver) => {\n          let channels = [];\n          if (receiver.input) {\n            channels = receiver.input.map((input) => {\n              return new InputChannelInfo(\n                input.id,\n                input.channel.name,\n                input.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            receiver.lastCommunication == null\n              ? \"Never\"\n              : receiver.lastCommunication;\n          return new DeviceInfo(\n            receiver.serialNumber,\n            lastCommunication,\n            receiver.device.publicIpAddress,\n            receiver.device.privateIpAddress,\n            receiver.device.displayName,\n            getStatus(receiver.lastCommunication),\n            channels,\n            \"decoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch((error) => {\n      SampleData.getReceivers(callback);\n    });\n}\n\nexport function deleteDevice(deviceId, callback) {\n  axios\n    .delete(`REACT_APP_DEVICE=$DOMAIN/device/${deviceId}`)\n    .then(callback)\n    .catch(() => {});\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PropTypes from \"prop-types\";\nimport * as DeviceApi from \"../api/DeviceApi\";\n\nexport default function DeleteDeviceButton(props) {\n  const { deleteId } = props;\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n\n  const openDeleteDialog = () => {\n    return setOpen(true);\n  };\n  const cancelDelete = () => {\n    return setOpen(false);\n  };\n  const confirmDelete = () => {\n    DeviceApi.deleteDevice(deleteId);\n    history.push(\"/Devices\");\n    return setOpen(false);\n  };\n\n  return (\n    <>\n      <Button id=\"deleteBtn\" variant=\"outlined\" onClick={openDeleteDialog}>\n        Delete\n      </Button>\n      <Dialog\n        open={open}\n        onClose={cancelDelete}\n        aria-labelledby=\"delete-stream-dialog-title\"\n        aria-describedby=\"delete-stream-dialog-description\"\n        id=\"delete-stream-dialog\"\n      >\n        <DialogTitle id=\"delete-stream-dialog-title\">\n          Confirm Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"delete-stream-dialog-description\">\n            Are you sure you want to delete this device?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button id=\"cancelDeleteBtn\" onClick={cancelDelete} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            id=\"confirmDeleteBtn\"\n            onClick={confirmDelete}\n            color=\"secondary\"\n            autoFocus\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nDeleteDeviceButton.propTypes = {\n  deleteId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Container, Grid } from \"@material-ui/core\";\n\nimport DeviceDetailsConciseTable from \"./DeviceDetailsConciseTable\";\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport DeviceDetailsTabTable from \"./DeviceDetailsTabTable\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport { getSampleSender } from \"../api/SampleData\";\nimport DeleteDeviceButton from \"./DeleteDeviceButton\";\n\nexport default function DeviceDetailsPage(props) {\n  const {\n    location: {\n      state: { device }\n    }\n  } = props;\n  const tabs = [\"Overview\", \"Activity Log\", \"Notes\"];\n\n  return (\n    <Container>\n      <DynamicBreadcrumb\n        breadcrumbs={[\n          [\"Home\", \"/\"],\n          [\"My Devices\", \"/Devices\"],\n          [device.name, device.id]\n        ]}\n      />\n      <Grid container spacing={1}>\n        <Grid item xs={12} className=\"flexContents headerAreaUnderline\">\n          <div className=\"title\">{device.name}</div>\n        </Grid>\n        <Grid item xs={12} />\n        <Grid container xs={5} spacing={2}>\n          <Grid item xs={12}>\n            <DeviceDetailsConciseTable device={device} />\n          </Grid>\n          <Grid item xs={2}>\n            <Button variant=\"contained\" color=\"primary\">\n              Edit\n            </Button>\n          </Grid>\n          <Grid item xs={2}>\n            <DeleteDeviceButton deleteId={device.serialNumber} />\n          </Grid>\n        </Grid>\n        <Grid item xs={1} />\n        <Grid item xs={6}>\n          <DeviceDetailsTabTable tabs={tabs} device={device} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\nDeviceDetailsPage.defaultProps = {\n  location: { state: { device: getSampleSender() } }\n};\n\nDeviceDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      device: PropTypes.instanceOf(DeviceInfo)\n    })\n  })\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport HeaderBar from \"./general/HeaderBar\";\nimport HomePage from \"./general/HomePage\";\nimport DeviceListPage from \"./devicelist/DeviceListPage\";\nimport StreamingTablePage from \"./createStream/StreamingPage\";\nimport DeviceDetailsPage from \"./deviceDetailsPage/DeviceDetailsPage\";\n\nimport * as DeviceApi from \"./api/DeviceApi\";\nimport * as StreamApi from \"./api/StreamApi\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <HeaderBar />\n      <Switch>\n        <Route exact path={[\"/\", \"/Home\"]} component={HomePage} />\n        <Route\n          exact\n          path=\"/Devices\"\n          render={(props) => (\n            <DeviceListPage {...props} dataSource={DeviceApi} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/Streaming\"\n          render={(props) => (\n            <StreamingTablePage\n              {...props}\n              deviceDataSource={DeviceApi}\n              streamDataSource={StreamApi}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/Devices/Details/:deviceId\"\n          component={DeviceDetailsPage}\n        />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}