{"version":3,"sources":["general/HeaderBar.jsx","general/DynamicBreadcrumb.jsx","general/dashboard/GridColumn.jsx","general/dashboard/DashboardCard.jsx","general/dashboard/DashboardButton.jsx","general/StatusIndicator.jsx","general/dialog/DialogBody.jsx","general/dialog/DialogButtons.jsx","general/dialog/Dialog.jsx","model/DeviceInfo.js","model/ConvertDataFormat.js","model/StreamInfo.js","model/OutputChannelInfo.js","model/InputChannelInfo.js","model/LogInfo.js","api/SampleData.js","api/StreamApi.js","streamlist/DeleteStreamDialog.jsx","streamlist/DeleteStreamDialogOpener.jsx","streamlist/StreamsTable.jsx","streamlist/StreamsTableWrapper.jsx","homepage/ActiveStreamCard.jsx","homepage/ActivityLogCard.jsx","homepage/DevicesCard.jsx","homepage/AdminPanelCard.jsx","general/Buttons/StreamButton.jsx","general/Buttons/AddDeviceButton.jsx","devicelist/TitleBox.jsx","devicelist/TabPanel.jsx","devicelist/ChannelDetailsTableHead.jsx","devicelist/ChannelDetailsTableRow.jsx","devicelist/ChannelDetailsTable.jsx","api/DeviceApi.js","general/Buttons/DeleteDeviceButton.jsx","devicelist/ActionMenu.jsx","devicelist/DevicesTable.jsx","general/VerticalTabs.jsx","devicelist/ContentsTable.jsx","DefaultMakeStylesTheme.js","devicelist/DeviceListPage.jsx","createStream/SearchBar.jsx","createStream/SelectDeviceTableRow.jsx","createStream/SelectDevicesTable.jsx","createStream/StreamingTable.jsx","streamlist/StreamListPage.jsx","createStream/StreamingPage.jsx","general/HorizontalTabPanel.jsx","loglist/LogsTable.jsx","api/LogApi.js","deviceDetailsPage/TabPanels/DeviceDetailsActivityPanel.jsx","deviceDetailsPage/TabPanels/DeviceDetailsNotesPanel.jsx","deviceDetailsPage/DeviceDetailsConciseRow.jsx","deviceDetailsPage/DeviceDetailsConciseTable.jsx","deviceDetailsPage/DeviceDetailsTabTable.jsx","deviceDetailsPage/DeviceNameDetail.jsx","deviceDetailsPage/DeviceDetailsPage.jsx","loglist/LogsTableWrapper.jsx","loglist/LogListPage.jsx","api/AuthenticationApi.js","login/LoginFailedDialog.jsx","login/LoginConsole.jsx","index.jsx","homepage/HomePage.jsx","login/LoginPage.jsx"],"names":["HeaderBar","props","classes","makeStyles","theme","menuButton","marginRight","spacing","className","AppBar","position","Toolbar","to","IconButton","edge","this","color","aria-label","Home","id","AccountCircle","React","Component","DynamicBreadcrumb","breadcrumbs","Box","padding","Breadcrumbs","map","crumb","i","Link","href","Typography","GridColumn","width","children","Grid","item","xs","container","defaultProps","DashboardCard","title","Paper","elevation","variant","gutterBottom","DashboardButton","StyledButton","withStyles","root","background","borderRadius","border","height","minWidth","maxWidth","textTransform","Button","StatusIndicator","status","getStatusStyle","DialogBody","DialogButtons","button1","button2","onClick","name","autoFocus","Dialog","state","open","openDialog","bind","closeDialog","setState","cancelButton","actionButton","onClose","aria-labelledby","aria-describedby","DialogTitle","DeviceInfo","serial","lastCommunication","publicIpAddress","privateIpAddress","displayName","channels","deviceType","extras","serialNumber","publicIp","privateIp","convertToDataObject","databaseDevice","device","inputs","outputs","StreamInfo","sender","receiver","date","Date","toString","split","slice","join","type","time","OutputChannelInfo","port","encoder","InputChannelInfo","decoder","LogInfo","dateTime","level","message","sampleInputChannels","InChannelInfo","sampleOutputChannels","OutChannelInfo","getAllLogs","callback","dates","getStream","streamId","Promise","resolve","reject","axios","get","process","then","response","stream","data","outputChannel","inputChannel","catch","getAllStreams","streams","all","sampleSenders","sampleReceivers","SampleData","deleteStream","delete","DeleteStreamDialog","dialogElement","createRef","confirmDelete","history","current","push","go","deleteId","finally","afterDelete","ref","DeleteStreamDialogOpener","Tooltip","Delete","withRouter","StreamsTable","columnInfo","field","render","rowData","filtering","sorting","align","export","detailPanel","icon","ExpandMore","openIcon","ExpandLess","tooltip","options","toolbar","headerStyle","backgroundColor","fontWeight","draggable","icons","SortArrow","ArrowDownward","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","TableContainer","columns","getColumnInfo","getDetailPanel","getOptions","getIcons","concat","Intl","DateTimeFormat","resolvedOptions","timeZone","StreamsTableWrapper","dataSource","handleStreamsChange","ActiveStreamCard","StreamApi","style","justify","direction","ActivityLogCard","DevicesCard","AdminPanelCard","StreamButton","margin","label","SwapHoriz","AddDeviceButton","AddSharp","TitleBox","activeClassName","exact","TabPanel","value","index","role","hidden","p","component","ChannelDetailsTableHead","TableRow","TableCell","ChannelDetailsTableRow","channel","ChannelDetailsTable","Table","TableHead","TableBody","getStatus","lastCommunicationString","lastCommunicationDate","now","getTime","getSenders","senders","output","getReceivers","receivers","input","deleteDevice","deviceId","REACT_APP_DEVICE","updateDeviceName","updatedName","a","put","renderDeleteButton","openDeleteDialog","renderDeleteMenuItem","MenuItem","DeleteDeviceButton","button","useState","setOpen","useHistory","cancelDelete","DialogContent","DialogContentText","DialogActions","DeviceApi","location","pathname","endsWith","ActionMenu","anchorElement","setAnchorElement","handleClick","handleClose","event","currentTarget","element","aria-controls","aria-haspopup","size","MoreVert","Menu","anchorEl","keepMounted","Boolean","anchorOrigin","horizontal","vertical","transformOrigin","deviceInfo","lookup","Online","Pending","Error","Offline","DevicesTable","devices","maxHeight","components","search","exportButton","Filter","FilterList","Search","ResetSearch","Clear","Export","SaveAlt","VerticalTabs","handleChange","newTab","setValue","tabs","Tabs","onChange","orientation","indicatorColor","Tab","ContentsTable","handleValueChange","handleSendersChange","handleReceiversChange","tabIndex","display","flexGrow","defaultMakeStylesTheme","palette","paper","borderRight","divider","DeviceListPage","Container","useStyles","SearchBar","right","marginLeft","breakpoints","up","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","TextField","placeholder","InputProps","startAdornment","InputAdornment","SelectDeviceTableRow","deviceDetails","ListItem","dense","ListItemText","primary","Collapse","in","timeout","unmountOnExit","List","disablePadding","secondary","Select","defaultValue","SelectDevicesTable","overflow","StreamingTable","selectedSenderID","selectedReceiverID","onSenderSelected","onReceiverSelected","handleSubmit","post","inputChannelId","outputChannelId","preventDefault","selectedSender","target","selectedReceiver","onSubmit","alignContent","StreamListPage","StreamingPage","deviceDataSource","streamDataSource","HorizontalTabPanel","bodyHeight","showTitle","maxBodyHeight","minBodyHeight","LogsTable","logs","cellStyle","getLogs","endpoint","log","getDeviceLogs","deviceSerialNumber","DeviceDetailsActivityPanel","handleLogsChange","LogApi","DeviceDetailsNotesPanel","DeviceDetailsConciseRow","getPropertyDisplayName","createTableCellContents","createInnerTable","DeviceDetailsConciseTable","getConciseProperties","property","DeviceDetailsTabTable","textColor","tabInfo","getPanelContents","DeviceNameDetail","deviceName","editing","startEdit","cancelEditing","confirmEditing","setName","paddingLeft","paddingBottom","required","paddingRight","disableElevation","renderEditName","renderStaticName","DeviceDetailsPage","marginTop","LogsTableWrapper","logsDataSource","LogListPage","unknownErrorMessage","incorrectCredentialsMessage","error","LoginFailedDialog","flexDirection","form","submit","LoginConsole","username","setUsername","password","setPassword","noValidate","fullWidth","autoComplete","ReactDOM","StrictMode","path","dialogOpen","setDialogOpen","dialogMessage","setDialogMessage","AuthenticationApi","document","getElementById"],"mappings":"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E+H,EAAUlH,KAAK9G,KAAI,SAAC0E,GAClB,IAAIb,EAAW,GACXa,EAASuJ,QACXpK,EAAWa,EAASuJ,MAAMjO,KAAI,SAACiO,GAC7B,OAAO,IAAI3I,GACT2I,EAAM1O,GACN0O,EAAMf,QAAQ1K,KACdyL,EAAMf,QAAQ9H,KACd,UAIN,IAAM3B,EAC0B,MAA9BiB,EAASjB,kBACL,QACAiB,EAASjB,kBACf,OAAO,IAAIF,GACTmB,EAASV,aACTP,EACAiB,EAASL,OAAOX,gBAChBgB,EAASL,OAAOV,iBAChBe,EAASL,OAAOT,YAChB2J,GAAU7I,EAASjB,mBACnBI,EACA,UACA,CAAC,6CAKRoD,OAAM,YjB0CJ,SAAsBhB,GA0M3BA,EAzMwB,CACtB,IAAI1C,GACF,eACA,KACA,gBACA,UACA,aACA,SACAqC,GACA,UACA7B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,QACAqC,GACA,UACA7B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAqC,GACA,UACA7B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAqC,GACA,UACA7B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,SACAqC,GACA,UACA7B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,QACAqC,GACA,UACA7B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAqC,GACA,UACA7B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAqC,GACA,UACA7B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,SACAqC,GACA,UACA7B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,SACAqC,GACA,UACA7B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,QACAqC,GACA,UACA7B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACAqC,GACA,UACA7B,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACAqC,GACA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","file":"static/js/main.f99d6100.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\nimport { AccountCircle, Home } from \"@material-ui/icons/\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default class HeaderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      menuButton: {\n        marginRight: theme.spacing(2)\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"headerBar\">\n        <AppBar position=\"static\">\n          <Toolbar className=\"darkGrey\">\n            <div className=\"headerTitle\">\n              <NavLink to=\"/\" className=\"headerTitle\">\n                <IconButton\n                  edge=\"start\"\n                  className={this.classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"menu\"\n                >\n                  <Home />\n                </IconButton>\n              </NavLink>\n              Switchboard\n            </div>\n            <IconButton id=\"acctBtn\" color=\"inherit\">\n              <AccountCircle />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Box, Breadcrumbs, Link, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default function DynamicBreadcrumb(props) {\n  const { breadcrumbs } = props;\n  return (\n    <Box padding=\"2em 0em 0em 1em\">\n      <Breadcrumbs aria-label=\"breadcrumb\" id=\"breadcrumbParent\">\n        {breadcrumbs.map((crumb, i) => {\n          return (\n            <Link\n              color=\"inherit\"\n              href={crumb[1]}\n              id={`breadcrumb${i}`}\n              key={`breadcrumb ${crumb[0]}`}\n            >\n              <Typography color=\"textPrimary\">{crumb[0]}</Typography>\n            </Link>\n          );\n        })}\n      </Breadcrumbs>\n    </Box>\n  );\n}\nDynamicBreadcrumb.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function GridColumn(props) {\n  const { width, spacing, children } = props;\n  return (\n    <Grid item xs={width}>\n      <Grid container spacing={spacing}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\nGridColumn.propTypes = {\n  width: PropTypes.number.isRequired,\n  spacing: PropTypes.number,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nGridColumn.defaultProps = {\n  spacing: 3\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Typography, Paper } from \"@material-ui/core\";\n\nexport default function DashboardCard(props) {\n  const { title, children } = props;\n  return (\n    <>\n      <Paper className=\"dashboardCard\" elevation={2}>\n        <Typography variant=\"h5\" gutterBottom>\n          {title}\n        </Typography>\n        {children}\n      </Paper>\n    </>\n  );\n}\n\nDashboardCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nDashboardCard.defaultProps = {\n  children: \"\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Link, Button, withStyles } from \"@material-ui/core\";\n\nexport default function DashboardButton(props) {\n  const { href, children } = props;\n\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      minWidth: 100,\n      maxWidth: 200,\n      padding: \"0 5px\",\n      textTransform: \"none\"\n    }\n  })(Button);\n  return (\n    <Link color=\"inherit\" href={href}>\n      <StyledButton>{children}</StyledButton>\n    </Link>\n  );\n}\n\nDashboardButton.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class StatusIndicator extends React.Component {\n  getStatusStyle() {\n    const { status } = this.props;\n    switch (status) {\n      case \"Online\":\n        return \"green statusIndicatorBody statusTextOnline \";\n      case \"Pending\":\n        return \"yellow statusIndicatorBody statusTextOnline\";\n      case \"Error\":\n        return \"red statusIndicatorBody statusTextOnline\";\n      default:\n        return \"lightGrey statusIndicatorBody statusTextOffline\";\n    }\n  }\n\n  render() {\n    const { status } = this.props;\n    return <div className={this.getStatusStyle()}>{status}</div>;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.oneOf([\"Online\", \"Offline\", \"Error\", \"Pending\"]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogContentText from \"@material-ui/core/DialogContentText\";\n\nexport default function DialogBody(props) {\n  const { children } = props;\n  return (\n    <MuiDialogContent>\n      <MuiDialogContentText id=\"dialog-description\">\n        {children}\n      </MuiDialogContentText>\n    </MuiDialogContent>\n  );\n}\nDialogBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\n\nexport default function DialogButtons(props) {\n  const { button1, button2 } = props;\n\n  return (\n    <MuiDialogActions>\n      <Button onClick={button1.onClick} color=\"primary\">\n        {button1.name}\n      </Button>\n      <Button onClick={button2.onClick} color=\"secondary\" autoFocus>\n        {button2.name}\n      </Button>\n    </MuiDialogActions>\n  );\n}\n\nDialogButtons.propTypes = {\n  button1: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired,\n  button2: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MuiDialog from \"@material-ui/core/Dialog/Dialog\";\nimport { DialogTitle } from \"@material-ui/core\";\nimport DialogBody from \"./DialogBody\";\nimport DialogButtons from \"./DialogButtons\";\n\nexport default class Dialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.openDialog = this.openDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.setState({ open: true });\n  }\n\n  closeDialog() {\n    return this.setState({ open: false });\n  }\n\n  render() {\n    const cancelButton = {\n      name: \"Cancel\",\n      onClick: this.closeDialog\n    };\n\n    const { title, actionButton, children } = this.props;\n    const { open } = this.state;\n    return (\n      <MuiDialog\n        open={open}\n        onClose={() => this.closeDialog}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n        id=\"dialog\"\n      >\n        <DialogTitle>{title}</DialogTitle>\n        <DialogBody>{children}</DialogBody>\n        <DialogButtons button1={cancelButton} button2={actionButton} />\n      </MuiDialog>\n    );\n  }\n}\n\nDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  actionButton: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","export default class DeviceInfo {\n  constructor(\n    serial,\n    lastCommunication,\n    publicIpAddress,\n    privateIpAddress,\n    displayName,\n    status,\n    channels,\n    deviceType,\n    extras\n  ) {\n    this.serialNumber = serial;\n    this.lastCommunication = lastCommunication;\n    this.publicIp = publicIpAddress;\n    this.privateIp = privateIpAddress;\n    this.name = displayName;\n    this.status = status;\n    this.channels = channels;\n    this.deviceType = deviceType;\n    this.extras = extras;\n  }\n\n  static getConciseProperties() {\n    return [\n      \"name\",\n      \"serialNumber\",\n      \"status\",\n      \"publicIp\",\n      \"privateIp\",\n      \"channels\"\n    ];\n  }\n}\n","import DeviceInfo from \"./DeviceInfo\";\n\nexport function convertToDataObject(databaseDevice) {\n  return new DeviceInfo(\n    databaseDevice.serialNumber,\n    databaseDevice.lastCommunication,\n    databaseDevice.device.publicIpAddress,\n    databaseDevice.device.privateIpAddress,\n    databaseDevice.device.displayName,\n    databaseDevice.device.status,\n    databaseDevice.inputs || databaseDevice.outputs,\n    databaseDevice.inputs ? \"receiver\" : \"sender\"\n  );\n}\n\nexport function convertToServiceObject(deviceInfo) {\n  const serviceObject = {\n    serialNumber: deviceInfo.serialNumber,\n    lastCommunication: deviceInfo.lastCommunication,\n    device: {\n      serialNumber: deviceInfo.serialNumber,\n      publicIpAddress: deviceInfo.publicIp,\n      privateIpAddress: deviceInfo.privateIp,\n      displayName: deviceInfo.name,\n      status: deviceInfo.status\n    }\n  };\n  if (deviceInfo.deviceType === \"sender\") {\n    serviceObject.outputs = deviceInfo.channels;\n  } else {\n    serviceObject.inputs = deviceInfo.channels;\n  }\n  return serviceObject;\n}\n","export default class StreamInfo {\n  // to be used once backend has date, status, type, and time fields\n  // constructor(id, date, sender, receiver, status, type, time, extras) {\n  //     this.id = id;\n  //     this.date = new Date(date).toString().split(\" \").slice(0, 5).join(\" \");\n  //     this.sender = sender;\n  //     this.receiver = receiver;\n  //     this.status = status;\n  //     this.type = type;\n  //     this.time = time;\n  //     this.extras = extras;\n  // }\n\n  // temporary with static fields until backend is up to snuff\n  constructor(id, sender, receiver, extras) {\n    this.id = id;\n    this.date = new Date(\"2020-10-31T08:15:30\")\n      .toString()\n      .split(\" \")\n      .slice(0, 5)\n      .join(\" \");\n    this.sender = sender;\n    this.receiver = receiver;\n    this.status = \"Online\";\n    this.type = \"Type 1\";\n    this.time = \"00:34:44\";\n    this.extras = extras;\n  }\n}\n","export default class OutputChannelInfo {\n  constructor(id, name, port, encoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.encoder = encoder;\n  }\n}\n","export default class InputChannelInfo {\n  constructor(id, name, port, decoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.decoder = decoder;\n  }\n}\n","export default class LogInfo {\n  constructor(id, dateTime, level, message) {\n    this.id = id;\n    this.dateTime = new Date(dateTime)\n      .toString()\n      .split(\" \")\n      .slice(0, 5)\n      .join(\" \");\n    this.level = level;\n    this.message = message;\n  }\n}\n","import DeviceInfo from \"../model/DeviceInfo\";\nimport OutChannelInfo from \"../model/OutputChannelInfo\";\nimport InChannelInfo from \"../model/InputChannelInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport LogInfo from \"../model/LogInfo\";\n\nconst extras = [\"Additional Device details go here\"];\nconst sampleInputChannels = [\n  new InChannelInfo(1, \"Input ch 1\", 500, null),\n  new InChannelInfo(2, \"Input ch 2\", 456, null),\n  new InChannelInfo(3, \"Input ch 3\", 800, null)\n];\nconst sampleOutputChannels = [\n  new OutChannelInfo(1, \"Output ch 1\", 500, null),\n  new OutChannelInfo(2, \"Output ch 2\", 456, null),\n  new OutChannelInfo(3, \"Output ch 3\", 800, null)\n];\n\nexport function getSenders(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:30:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 3\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:40:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 4\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:50:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 5\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:60:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 6\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:70:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 7\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:80:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 8\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:90:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 9\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n\n  callback(sampleSenders);\n}\n\nexport function getSampleSender() {\n  return new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n}\n\nexport function getReceivers(callback) {\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:03:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 3\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:04:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 4\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:05:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 5\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:06:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 6\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:07:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 7\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:08:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 8\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:09:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 9\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:11:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 11\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:21:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 12\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:31:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 13\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:41:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 14\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:51:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 15\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:61:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 16\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:71:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 17\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:81:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 18\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:91:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 19\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  callback(sampleReceivers);\n}\n\nexport function getAllStreams(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  const sampleStreams = [\n    new StreamInfo(1, sampleSenders[0], sampleReceivers[0], [\n      \"Additional Stream Details go here\"\n    ]),\n    new StreamInfo(2, sampleSenders[1], sampleReceivers[1], [\n      \"Additional Stream Details go here\"\n    ]),\n    new StreamInfo(3, sampleSenders[1], sampleReceivers[0], [\n      \"Additional Stream Details go here\"\n    ])\n  ];\n\n  callback(sampleStreams);\n}\n\nexport function getAllLogs(callback) {\n  const dates = [\n    new Date(\"2020-10-31T15:53:23\"),\n    new Date(\"2020-11-13T12:36:30\"),\n    new Date(\"2020-11-13T08:24:30\")\n  ];\n\n  const sampleLogs = [\n    new LogInfo(1, dates[0], \"Info\", \"Log 1 info\"),\n    new LogInfo(2, dates[1], \"Info\", \"Log 2 info\"),\n    new LogInfo(3, dates[2], \"Info\", \"Log 3 info\")\n  ];\n\n  callback(sampleLogs);\n}\n","import axios from \"axios\";\nimport { convertToDataObject } from \"../model/ConvertDataFormat\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport * as SampleData from \"./SampleData\";\n\nexport function getStream(streamId) {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(`${process.env.REACT_APP_STREAM}/${streamId}`)\n      .then((response) => {\n        const stream = response.data;\n        resolve(\n          new StreamInfo(\n            stream.id,\n            convertToDataObject(stream.outputChannel.encoder),\n            convertToDataObject(stream.inputChannel.decoder),\n            [\"Additional stream info goes here.\"]\n          )\n        );\n      })\n      .catch(reject);\n  });\n}\n\nexport function getAllStreams(callback) {\n  axios\n    .get(process.env.REACT_APP_STREAM)\n    .then((streams) => {\n      Promise.all(\n        streams.data.map((streamId) => {\n          return getStream(streamId);\n        })\n      ).then(callback);\n    })\n    .catch(() => {\n      SampleData.getAllStreams(callback);\n    });\n}\n\nexport function deleteStream(streamId) {\n  return axios.delete(`${process.env.REACT_APP_STREAM}/${streamId}`);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../general/dialog/Dialog\";\nimport { deleteStream } from \"../api/StreamApi\";\n\nexport default class DeleteStreamDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  afterDelete() {\n    const { history } = this.props;\n    this.dialogElement.current.closeDialog();\n    history.push(\"/Streaming\");\n    history.go(0);\n  }\n\n  confirmDelete() {\n    const { deleteId } = this.props;\n    deleteStream(deleteId).finally(this.afterDelete());\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId } = this.props;\n    const title = \"Confirm Delete\";\n    const message = `Are you sure you want to end stream ${deleteId}?`;\n\n    const actionButton = {\n      name: \"Confirm\",\n      onClick: this.confirmDelete\n    };\n\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        {message}\n      </Dialog>\n    );\n  }\n}\n\nDeleteStreamDialog.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport { withRouter } from \"react-router-dom\";\n\nimport DeleteStreamDialog from \"./DeleteStreamDialog\";\n\nclass DeleteStreamDialogOpener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId, history } = this.props;\n    return (\n      <>\n        <Tooltip title=\"Delete Stream\" aria-label=\"delete stream\">\n          <IconButton onClick={this.openDialog}>\n            <Delete />\n          </IconButton>\n        </Tooltip>\n        <DeleteStreamDialog\n          ref={this.dialogElement}\n          deleteId={deleteId}\n          history={history}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(DeleteStreamDialogOpener);\n\nDeleteStreamDialogOpener.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\n\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport DeleteStreamDialogOpener from \"./DeleteStreamDialogOpener\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default class StreamsTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.columnInfo = [\n      {\n        title: \"ID\",\n        field: \"id\"\n      },\n      {\n        title: \"Date\",\n        field: \"date\"\n      },\n      {\n        title: \"Sender\",\n        field: \"sender.name\"\n      },\n      {\n        title: \"Receiver\",\n        field: \"receiver.name\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        }\n      },\n      {\n        title: \"Type\",\n        field: \"type\"\n      },\n      {\n        title: \"Time Elapsed\",\n        field: \"time\"\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <DeleteStreamDialogOpener deleteId={rowData.id} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n    this.detailPanel = [\n      {\n        icon: ExpandMore,\n        openIcon: ExpandLess,\n        tooltip: \"Show Stream Details\",\n        render: function DetailPanel(rowData) {\n          return (\n            <div className=\"lightestGrey\">\n              <Typography variant=\"h6\">{rowData.extras}</Typography>\n            </div>\n          );\n        }\n      }\n    ];\n    this.options = {\n      toolbar: false,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: false,\n      draggable: false\n    };\n    this.icons = {\n      SortArrow: ArrowDownward,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  getColumnInfo() {\n    return this.columnInfo;\n  }\n\n  getDetailPanel() {\n    return this.detailPanel;\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  getIcons() {\n    return this.icons;\n  }\n\n  render() {\n    const { streams } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer>\n            <MaterialTable\n              columns={this.getColumnInfo()}\n              data={streams}\n              detailPanel={this.getDetailPanel()}\n              options={this.getOptions()}\n              icons={this.getIcons()}\n            />\n          </TableContainer>\n          <div className=\"textAlignRightPadded\">\n            {\"Time Zone: \".concat(\n              Intl.DateTimeFormat().resolvedOptions().timeZone\n            )}\n          </div>\n        </Box>\n      </>\n    );\n  }\n}\n\nStreamsTable.propTypes = {\n  streams: PropTypes.arrayOf(PropTypes.instanceOf(StreamInfo)).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StreamsTable from \"./StreamsTable\";\n\nexport default class StreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: []\n    };\n    this.dataSource = props.dataSource;\n    this.handleStreamsChange = this.handleStreamsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getAllStreams(this.handleStreamsChange);\n  }\n\n  handleStreamsChange(streams) {\n    this.setState({\n      streams\n    });\n  }\n\n  render() {\n    const { streams } = this.state;\n    return <StreamsTable streams={streams} />;\n  }\n}\n\nStreamsTableWrapper.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\nimport StreamsTableWrapper from \"../streamlist/StreamsTableWrapper\";\n\nimport * as StreamApi from \"../api/StreamApi\";\n\nexport default function ActiveStreamCard() {\n  const dataSource = StreamApi;\n\n  return (\n    <DashboardCard title=\"Active Streams\" style={{ height: \"100%\" }}>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={12}>\n          <StreamsTableWrapper dataSource={dataSource} />\n        </Grid>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Streaming\">See more</DashBoardButton>\n        </Grid>\n        <Grid item xs={4}>\n          {\n            // TODO make it create stream\n          }\n          <DashBoardButton href=\"/Streaming\">Start Stream</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function ActivityLogCard() {\n  return (\n    <DashboardCard title=\"Activity Logs\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Logs\">View All</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function DevicesCard() {\n  return (\n    <DashboardCard title=\"Devices\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Devices\">View Senders</DashBoardButton>\n        </Grid>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Devices\">View Receivers</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function AdminPanelCard() {\n  return (\n    <DashboardCard title=\"Admin Panel\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Admin\">View Users</DashBoardButton>\n        </Grid>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Admin\">Create a User</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { SwapHoriz } from \"@material-ui/icons/\";\n\nexport default function StreamButton(props) {\n  const { id, type } = props;\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      padding: \"0 5px\",\n      margin: \"1em\"\n    },\n    label: {\n      textTransform: \"\"\n    }\n  })(Button);\n\n  return (\n    <StyledButton id={id} type={type}>\n      <div className=\"buttonText\">\n        <SwapHoriz />\n        Stream\n      </div>\n    </StyledButton>\n  );\n}\n\nStreamButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport { AddSharp } from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\n\nexport default class AddDeviceButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.id = props.id;\n  }\n\n  render() {\n    const StyledButton = withStyles({\n      root: {\n        background: \"linear-gradient(45deg, #01b2fe 30%, #01b2fe 90%)\",\n        borderRadius: 90,\n        border: 0,\n        color: \"white\",\n        height: 40,\n        padding: \"0px\"\n      },\n      label: {\n        textTransform: \"\"\n      }\n    })(Button);\n\n    return (\n      <StyledButton id={this.id}>\n        <div className=\"buttonText\">\n          <AddSharp />\n          Add Device\n        </div>\n      </StyledButton>\n    );\n  }\n}\nAddDeviceButton.propTypes = {\n  id: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nimport StreamButton from \"../general/Buttons/StreamButton\";\nimport AddDeviceButton from \"../general/Buttons/AddDeviceButton\";\n\nexport default function TitleBox() {\n  return (\n    <>\n      <Box className=\"flexContents headerAreaNoUnderline\">\n        <div className=\"title\">My Devices</div>\n        <div className=\"alignRightFloat\">\n          <NavLink\n            to=\"/Streaming\"\n            activeClassName=\"hideLinkStyle\"\n            className=\"hideLinkStyle\"\n            exact\n          >\n            <StreamButton id=\"DeviceListStreamBtn\" type=\"submit\" />\n          </NavLink>\n          <AddDeviceButton id=\"DeviceListAddDevBtn\" />\n        </div>\n      </Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default function TabPanel(props) {\n  const { children, value, index } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n    >\n      {value === index && (\n        <Box p={0}>\n          <Typography component=\"span\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.element.isRequired,\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function ChannelDetailsTableHead() {\n  return (\n    <TableRow>\n      <TableCell className=\"lightGrey\">ID</TableCell>\n      <TableCell className=\"lightGrey\">Name</TableCell>\n      <TableCell className=\"lightGrey\">Port</TableCell>\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\n\nexport default function ChannelDetailsTableRow(props) {\n  const {\n    channel: { id, name, port }\n  } = props;\n  return (\n    <TableRow>\n      <TableCell>{id}</TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{port}</TableCell>\n    </TableRow>\n  );\n}\nChannelDetailsTableRow.propTypes = {\n  channel: PropTypes.oneOfType([\n    PropTypes.instanceOf(InputChannelInfo),\n    PropTypes.instanceOf(OutputChannelInfo)\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Table, TableBody, TableHead } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport ChannelDetailsTableHead from \"./ChannelDetailsTableHead\";\nimport ChannelDetailsTableRow from \"./ChannelDetailsTableRow\";\n\nexport default function ChannelDetailsTable(props) {\n  const { channels } = props;\n  return (\n    <Table className=\"flexContents\">\n      <TableHead>\n        <ChannelDetailsTableHead />\n      </TableHead>\n      <TableBody>\n        {channels.map((channel) => {\n          return (\n            <ChannelDetailsTableRow channel={channel} key={channel.name} />\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\nChannelDetailsTable.propTypes = {\n  channels: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.instanceOf(InputChannelInfo),\n      PropTypes.instanceOf(OutputChannelInfo)\n    ])\n  ).isRequired\n};\n","import axios from \"axios\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport * as SampleData from \"./SampleData\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\n\nfunction getStatus(lastCommunicationString) {\n  if (!lastCommunicationString) {\n    return \"Pending\";\n  }\n\n  const lastCommunicationDate = new Date(`${lastCommunicationString}Z`);\n  const diff = Date.now() - lastCommunicationDate.getTime();\n  const tenMinutes = 10 * 60 * 1000;\n  if (diff < tenMinutes) {\n    return \"Online\";\n  }\n  return \"Offline\";\n}\n\nexport function getSenders(callback) {\n  axios\n    .get(process.env.REACT_APP_ENCODER)\n    .then((senders) => {\n      callback(\n        senders.data.map((sender) => {\n          let channels = [];\n          if (sender.output) {\n            channels = sender.output.map((output) => {\n              return new OutputChannelInfo(\n                output.id,\n                output.channel.name,\n                output.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            sender.lastCommunication == null\n              ? \"Never\"\n              : sender.lastCommunication;\n          return new DeviceInfo(\n            sender.serialNumber,\n            lastCommunication,\n            sender.device.publicIpAddress,\n            sender.device.privateIpAddress,\n            sender.device.displayName,\n            getStatus(sender.lastCommunication),\n            channels,\n            \"encoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getSenders(callback);\n    });\n}\n\nexport function getReceivers(callback) {\n  axios\n    .get(process.env.REACT_APP_DECODER)\n    .then((receivers) => {\n      callback(\n        receivers.data.map((receiver) => {\n          let channels = [];\n          if (receiver.input) {\n            channels = receiver.input.map((input) => {\n              return new InputChannelInfo(\n                input.id,\n                input.channel.name,\n                input.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            receiver.lastCommunication == null\n              ? \"Never\"\n              : receiver.lastCommunication;\n          return new DeviceInfo(\n            receiver.serialNumber,\n            lastCommunication,\n            receiver.device.publicIpAddress,\n            receiver.device.privateIpAddress,\n            receiver.device.displayName,\n            getStatus(receiver.lastCommunication),\n            channels,\n            \"decoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getReceivers(callback);\n    });\n}\n\nexport function deleteDevice(deviceId) {\n  return axios\n    .delete(`${process.env.REACT_APP_DEVICE}/${deviceId}`)\n    .catch(() => {});\n}\n\nexport async function updateDeviceName(deviceId, updatedName) {\n  return axios\n    .put(process.env.REACT_APP_DEVICE, {\n      serialNumber: deviceId,\n      displayName: updatedName\n    })\n    .catch(() => {});\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PropTypes from \"prop-types\";\nimport { MenuItem } from \"@material-ui/core\";\nimport * as DeviceApi from \"../../api/DeviceApi\";\n\nfunction renderDeleteButton(openDeleteDialog) {\n  return (\n    <Button\n      id=\"deleteBtn\"\n      variant=\"outlined\"\n      color=\"secondary\"\n      onClick={openDeleteDialog}\n    >\n      Delete\n    </Button>\n  );\n}\n\nfunction renderDeleteMenuItem(openDeleteDialog) {\n  return (\n    <MenuItem onClick={openDeleteDialog}>\n      <span className=\"warningText\">Delete</span>\n    </MenuItem>\n  );\n}\n\nexport default function DeleteDeviceButton(props) {\n  const { button, deleteId } = props;\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n\n  const openDeleteDialog = () => {\n    return setOpen(true);\n  };\n  const cancelDelete = () => {\n    return setOpen(false);\n  };\n  const confirmDelete = () => {\n    DeviceApi.deleteDevice(deleteId).then(() => {\n      if (history.location.pathname.endsWith(\"Devices\")) {\n        history.go(0);\n      } else {\n        history.push(\"/Devices\");\n      }\n    });\n    return setOpen(false);\n  };\n\n  return (\n    <>\n      {button\n        ? renderDeleteButton(openDeleteDialog)\n        : renderDeleteMenuItem(openDeleteDialog)}\n      <Dialog\n        open={open}\n        onClose={cancelDelete}\n        aria-labelledby=\"delete-stream-dialog-title\"\n        aria-describedby=\"delete-stream-dialog-description\"\n        id=\"delete-stream-dialog\"\n      >\n        <DialogTitle id=\"delete-stream-dialog-title\">\n          Confirm Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"delete-stream-dialog-description\">\n            Are you sure you want to delete this device?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button id=\"cancelDeleteBtn\" onClick={cancelDelete} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            id=\"confirmDeleteBtn\"\n            onClick={confirmDelete}\n            color=\"secondary\"\n            autoFocus\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nDeleteDeviceButton.propTypes = {\n  button: PropTypes.bool.isRequired,\n  deleteId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { MoreVert } from \"@material-ui/icons/\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeleteDeviceButton from \"../general/Buttons/DeleteDeviceButton\";\n\nexport default class ActionMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorElement: null\n    };\n\n    this.setAnchorElement = this.setAnchorElement.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick(event) {\n    this.setAnchorElement(event.currentTarget);\n  }\n\n  handleClose() {\n    this.setAnchorElement(null);\n  }\n\n  setAnchorElement(element) {\n    this.setState({\n      anchorElement: element\n    });\n  }\n\n  render() {\n    const { anchorElement } = this.state;\n    const { device } = this.props;\n    return (\n      <>\n        <IconButton\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n          size=\"small\"\n        >\n          <MoreVert />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorElement}\n          keepMounted\n          open={Boolean(anchorElement)}\n          onClose={this.handleClose}\n          anchorOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n          transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        >\n          <MenuItem onClick={this.handleClose}>\n            <NavLink\n              to={{\n                pathname: `/Devices/Details/${device.name}`,\n                state: { device }\n              }}\n              className=\"hideLinkStyle\"\n            >\n              View Details\n            </NavLink>\n          </MenuItem>\n          <MenuItem onClick={this.handleClose}>\n            Start stream with this as receiver\n          </MenuItem>\n          <DeleteDeviceButton button={false} deleteId={device.serialNumber} />\n        </Menu>\n      </>\n    );\n  }\n}\n\nActionMenu.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  FilterList,\n  Search,\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable, { MTableToolbar } from \"material-table\";\n\nimport ChannelDetailsTable from \"./ChannelDetailsTable\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport ActionMenu from \"./ActionMenu\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nfunction getComponents() {\n  return {\n    /*  eslint-disable react/jsx-props-no-spreading */\n    Toolbar: function Components(props) {\n      return (\n        <div className=\"lightestGrey\">\n          <MTableToolbar {...props} />\n        </div>\n      );\n    }\n  };\n}\n\nfunction buildNavlink(deviceInfo) {\n  return (\n    <NavLink\n      to={{\n        pathname: `/Devices/Details/${deviceInfo.name}`,\n        state: { device: deviceInfo }\n      }}\n    >\n      {deviceInfo.name}\n    </NavLink>\n  );\n}\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"Name\",\n      field: \"name\",\n      render: (rowData) => buildNavlink(rowData)\n    },\n    {\n      title: \"Serial Number\",\n      field: \"serialNumber\"\n    },\n    {\n      title: \"Status\",\n      field: \"status\",\n      render: function Status(rowData) {\n        return <StatusIndicator status={rowData.status} />;\n      },\n      lookup: {\n        Online: \"Online\",\n        Pending: \"Pending\",\n        Error: \"Error\",\n        Offline: \"Offline\"\n      }\n    },\n    {\n      title: \"Private IP Address\",\n      field: \"privateIp\"\n    },\n    {\n      title: \"Public IP Address\",\n      field: \"publicIp\"\n    },\n    {\n      title: \"Actions\",\n      field: \"action\",\n      filtering: false,\n      sorting: false,\n      render: function Actions(rowData) {\n        return <ActionMenu device={rowData} />;\n      },\n      align: \"center\",\n      export: false\n    }\n  ];\n}\n\nfunction getDetailPanel() {\n  return [\n    {\n      icon: ExpandMore,\n      openIcon: ExpandLess,\n      tooltip: \"Show Device Details\",\n      render: function DetailPanel(rowData) {\n        return (\n          <div className=\"lightestGrey\" style={{ padding: \"1.5em\" }}>\n            <Typography variant=\"h6\">Channels</Typography>\n            <ChannelDetailsTable channels={rowData.channels} />\n          </div>\n        );\n      }\n    }\n  ];\n}\n\nfunction getOptions() {\n  return {\n    toolbar: true,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: true,\n    draggable: false\n  };\n}\n\nfunction getIcons() {\n  return {\n    Filter: FilterList,\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function DevicesTable(props) {\n  const { title, devices } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer style={{ maxHeight: 570 }}>\n          <MaterialTable\n            title={title}\n            components={getComponents()}\n            columns={getColumnInfo()}\n            data={devices}\n            detailPanel={getDetailPanel()}\n            options={getOptions()}\n            icons={getIcons()}\n          />\n        </TableContainer>\n      </Box>\n    </>\n  );\n}\n\nDevicesTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  devices: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport { Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default class VerticalTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event, newTab) {\n    const { setValue } = this.props;\n    setValue(newTab);\n  }\n\n  render() {\n    const {\n      value,\n      classes: { tabs }\n    } = this.props;\n\n    return (\n      <>\n        <Tabs\n          value={value}\n          onChange={this.handleChange}\n          aria-label=\"Vertical tabs\"\n          className={`${tabs} lightGrey blackFont flexContents`}\n          orientation=\"vertical\"\n          indicatorColor=\"primary\"\n          variant=\"scrollable\"\n        >\n          <Tab\n            label=\"Senders\"\n            id=\"vertical-tab-0\"\n            aria-controls=\"vertical-tabpanel-0\"\n          />\n          <Tab\n            label=\"Receivers\"\n            id=\"vertical-tab-1\"\n            aria-controls=\"vertical-tabpanel-1\"\n          />\n        </Tabs>\n      </>\n    );\n  }\n}\n\nVerticalTabs.propTypes = {\n  setValue: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TabPanel from \"./TabPanel\";\nimport DevicesTable from \"./DevicesTable\";\nimport VerticalTabs from \"../general/VerticalTabs\";\n\nexport default class ContentsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      value: 0\n    };\n    this.dataSource = props.dataSource;\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getSenders(this.handleSendersChange);\n    this.dataSource.getReceivers(this.handleReceiversChange);\n  }\n\n  handleValueChange(tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  render() {\n    const { receivers, senders, value } = this.state;\n    const { classes } = this.props;\n    return (\n      <>\n        <Box\n          style={{\n            display: \"flex\",\n            flexGrow: 1\n          }}\n        >\n          <VerticalTabs\n            value={value}\n            setValue={this.handleValueChange}\n            classes={classes}\n          />\n          <TabPanel value={value} index={0} className=\"lightGreyBorder\">\n            <DevicesTable devices={senders} title=\"List of Senders\" />\n          </TabPanel>\n          <TabPanel value={value} index={1} className=\"lightGreyBorder\">\n            <DevicesTable devices={receivers} title=\"List of Receivers\" />\n          </TabPanel>\n        </Box>\n      </>\n    );\n  }\n}\nContentsTable.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default function defaultMakeStylesTheme() {\n  return makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    },\n    tabs: {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }));\n}\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport TitleBox from \"./TitleBox\";\nimport ContentsTable from \"./ContentsTable\";\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport * as useStyles from \"../DefaultMakeStylesTheme\";\n\nexport default function DeviceListPage(props) {\n  const { dataSource } = props;\n  return (\n    <Container>\n      <DynamicBreadcrumb\n        breadcrumbs={[\n          [\"Home\", \"/\"],\n          [\"My Devices\", \"Devices\"]\n        ]}\n      />\n      <Box className=\"areaUnderBreadcrumbs\">\n        <TitleBox />\n        <ContentsTable classes={useStyles} dataSource={dataSource} />\n      </Box>\n    </Container>\n  );\n}\n\nDeviceListPage.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { InputAdornment, makeStyles, TextField } from \"@material-ui/core\";\n\nimport { Search } from \"@material-ui/icons/\";\n\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      search: {\n        position: \"relative\",\n        right: 0,\n        marginLeft: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n          marginLeft: theme.spacing(1),\n          width: \"auto\"\n        }\n      },\n      searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        alignItems: \"left\",\n        justifyContent: \"center\"\n      },\n      inputRoot: {\n        color: \"inherit\"\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"searchField\">\n          <TextField\n            placeholder=\"Search\"\n            InputProps={{\n              \"aria-label\": \"search\",\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {\" \"}\n                  <Search />\n                </InputAdornment>\n              )\n            }}\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n  MenuItem,\n  Select\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class SelectDeviceTableRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState((state) => ({ open: !state.open }));\n  }\n\n  render() {\n    const {\n      deviceDetails: { channels, name },\n      onChange\n    } = this.props;\n    const { open } = this.state;\n    return (\n      <>\n        <ListItem button dense onClick={this.onClick}>\n          <ListItemText primary={name} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding style={{ width: \"96%\" }}>\n            <ListItem divider>\n              <ListItemText secondary=\"Select Channel\" />\n              <Select defaultValue=\"\" onChange={onChange}>\n                {channels.map((channel) => {\n                  return (\n                    <MenuItem value={channel.id} key={`${name}_${channel.id}`}>\n                      {channel.port}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </ListItem>\n          </List>\n        </Collapse>\n      </>\n    );\n  }\n}\nSelectDeviceTableRow.propTypes = {\n  deviceDetails: PropTypes.instanceOf(DeviceInfo).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { List } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport SearchBar from \"./SearchBar\";\nimport SelectDeviceTableRow from \"./SelectDeviceTableRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function SelectDevicesTable(props) {\n  const { dataSource, name, onChange } = props;\n  return (\n    <>\n      <div className=\"subtitle\">{name}</div>\n      <SearchBar />\n      <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n        <List>\n          {dataSource.map((device) => {\n            return (\n              <SelectDeviceTableRow\n                deviceDetails={device}\n                key={device.serialNumber}\n                onChange={onChange}\n              />\n            );\n          })}\n        </List>\n      </div>\n    </>\n  );\n}\n\nSelectDevicesTable.propTypes = {\n  name: PropTypes.string.isRequired,\n  dataSource: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\nimport PropTypes from \"prop-types\";\nimport SelectDevicesTable from \"./SelectDevicesTable\";\nimport StreamButton from \"../general/Buttons/StreamButton\";\n\nexport default class StreamingTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      selectedSenderID: \"\",\n      selectedReceiverID: \"\"\n    };\n\n    this.dataSource = props.dataSource;\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n\n    this.onSenderSelected = this.onSenderSelected.bind(this);\n    this.onReceiverSelected = this.onReceiverSelected.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getSenders(this.handleSendersChange);\n    this.dataSource.getReceivers(this.handleReceiversChange);\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  handleSubmit(event) {\n    const { selectedReceiverID, selectedSenderID } = this.state;\n    if (selectedReceiverID !== \"\" && selectedSenderID !== \"\") {\n      axios.post(process.env.REACT_APP_STREAM, {\n        inputChannelId: selectedReceiverID,\n        outputChannelId: selectedSenderID\n      });\n    }\n    event.preventDefault();\n  }\n\n  onSenderSelected(selectedSender) {\n    this.setState({\n      selectedSenderID: selectedSender.target.value\n    });\n  }\n\n  onReceiverSelected(selectedReceiver) {\n    this.setState({\n      selectedReceiverID: selectedReceiver.target.value\n    });\n  }\n\n  render() {\n    const { receivers, senders } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} id=\"createStreamForm\">\n          <Grid\n            container\n            spacing={2}\n            alignContent=\"center\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"SenderTable\">\n                <SelectDevicesTable\n                  name=\"Sender Devices\"\n                  dataSource={senders}\n                  onChange={this.onSenderSelected}\n                />\n              </div>\n            </Grid>\n            <Grid\n              container\n              item\n              xs={2}\n              id=\"TableStartStreamingBtn\"\n              justify=\"center\"\n              alignContent=\"center\"\n              alignItems=\"center\"\n              display=\"flex\"\n            >\n              <StreamButton id=\"StreamingStreamBtn\" type=\"submit\" />\n            </Grid>\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"ReceiverTable\">\n                <SelectDevicesTable\n                  name=\"Receiver Devices\"\n                  dataSource={receivers}\n                  onChange={this.onReceiverSelected}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </form>\n      </>\n    );\n  }\n}\nStreamingTable.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport StreamsTableWrapper from \"./StreamsTableWrapper\";\n\nexport default function StreamListPage(props) {\n  const { dataSource } = props;\n  return (\n    <>\n      <Container>\n        <Box className=\"headerAreaUnderline\">\n          <div className=\"title\">Current Streams</div>\n        </Box>\n        <StreamsTableWrapper dataSource={dataSource} />\n      </Container>\n    </>\n  );\n}\n\nStreamListPage.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport StreamingTable from \"./StreamingTable\";\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport StreamList from \"../streamlist/StreamListPage\";\n\nexport default class StreamingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dataSource = props.deviceDataSource;\n  }\n\n  render() {\n    const { deviceDataSource, streamDataSource } = this.props;\n    return (\n      <Container>\n        <DynamicBreadcrumb\n          breadcrumbs={[\n            [\"Home\", \"/\"],\n            [\"My Devices\", \"Devices\"],\n            [\"Streaming\", \"Streaming\"]\n          ]}\n        />\n        <Box className=\"areaUnderBreadcrumbs\">\n          <Box className=\"flexContents headerAreaUnderline\">\n            <div className=\"title\">Streaming</div>\n          </Box>\n          <div id=\"StreamingTable\">\n            <StreamingTable dataSource={deviceDataSource} />\n          </div>\n        </Box>\n        <Box>\n          <StreamList dataSource={streamDataSource} />\n        </Box>\n      </Container>\n    );\n  }\n}\nStreamingPage.propTypes = {\n  deviceDataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  streamDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nexport default function HorizontalTabPanel(props) {\n  const { value, index, children } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </div>\n  );\n}\n\nHorizontalTabPanel.propTypes = {\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Search,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\nimport LogInfo from \"../model/LogInfo\";\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"ID\",\n      field: \"id\",\n      cellStyle: { width: \"10%\" }\n    },\n    {\n      title: \"Date\",\n      field: \"dateTime\",\n      cellStyle: { width: \"15%\" }\n    },\n    {\n      title: \"Level\",\n      field: \"level\",\n      cellStyle: { width: \"10%\" }\n    },\n    {\n      title: \"Message\",\n      field: \"message\",\n      sorting: false\n    }\n  ];\n}\n\nfunction getOptions(bodyHeight) {\n  return {\n    toolbar: true,\n    showTitle: false,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: false,\n    draggable: false,\n    maxBodyHeight: bodyHeight,\n    minBodyHeight: bodyHeight\n  };\n}\n\nfunction getIcons() {\n  return {\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function LogsTable(props) {\n  const { logs, bodyHeight, title } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer>\n          <MaterialTable\n            title={title}\n            columns={getColumnInfo()}\n            data={logs}\n            options={getOptions(bodyHeight)}\n            icons={getIcons()}\n          />\n        </TableContainer>\n        <div className=\"textAlignRightPadded\">\n          {\"Time Zone: \".concat(\n            Intl.DateTimeFormat().resolvedOptions().timeZone\n          )}\n        </div>\n      </Box>\n    </>\n  );\n}\n\nLogsTable.propTypes = {\n  logs: PropTypes.arrayOf(PropTypes.instanceOf(LogInfo)).isRequired,\n  bodyHeight: PropTypes.string,\n  title: PropTypes.string\n};\n\nLogsTable.defaultProps = {\n  bodyHeight: \"auto\",\n  title: \"Logs\"\n};\n","import axios from \"axios\";\nimport LogInfo from \"../model/LogInfo\";\nimport * as SampleData from \"./SampleData\";\n\nasync function getLogs(endpoint) {\n  return axios\n    .get(endpoint)\n    .then((response) => {\n      return Promise.resolve(\n        response.data.map((log) => {\n          return new LogInfo(log.id, log.dateTime, log.level, log.message);\n        })\n      );\n    })\n    .catch(() => {\n      return new Promise((resolve) => {\n        SampleData.getAllLogs(resolve);\n      });\n    });\n}\n\nexport async function getAllLogs() {\n  return getLogs(process.env.REACT_APP_LOGS);\n}\n\nexport async function getDeviceLogs(deviceSerialNumber) {\n  return getLogs(`${process.env.REACT_APP_LOGS}/${deviceSerialNumber}`);\n}\n","import { Container, Paper } from \"@material-ui/core\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport LogsTable from \"../../loglist/LogsTable\";\nimport * as LogApi from \"../../api/LogApi\";\n\nexport default class DeviceDetailsActivityPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.device = props.device;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    LogApi.getDeviceLogs(this.device.serialNumber).then(this.handleLogsChange);\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return (\n      <>\n        <Container component={Paper}>\n          <LogsTable\n            title={`${this.device.serialNumber} Logs`}\n            logs={logs}\n            bodyHeight=\"35vh\"\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nDeviceDetailsActivityPanel.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Paper } from \"@material-ui/core\";\n\nexport default function DeviceDetailsNotesPanel(props) {\n  const { extras } = props;\n  return <Container component={Paper}>{extras}</Container>;\n}\n\nDeviceDetailsNotesPanel.propTypes = {\n  extras: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\nimport { TableContainer, TableCell, TableRow } from \"@material-ui/core\";\nimport ChannelDetailsTable from \"../devicelist/ChannelDetailsTable\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport StatusIndicator from \"../general/StatusIndicator\";\n\nexport default class DeviceDetailsConciseRow extends React.Component {\n  static getPropertyDisplayName(name) {\n    switch (name) {\n      case \"serialNumber\":\n        return \"Serial Number\";\n      case \"lastCommunication\":\n        return \"Last Communication\";\n      case \"privateIp\":\n        return \"Private IP Address\";\n      case \"publicIp\":\n        return \"Public IP Address\";\n      case \"name\":\n        return \"Name\";\n      case \"status\":\n        return \"Status\";\n      case \"channels\":\n        return \"Channels\";\n      default:\n        return \"Additional Info\";\n    }\n  }\n\n  static createInnerTable(value) {\n    return (\n      <TableContainer>\n        <ChannelDetailsTable channels={value} />\n      </TableContainer>\n    );\n  }\n\n  static createTableCellContents(name, value) {\n    switch (name) {\n      case \"channels\":\n        return DeviceDetailsConciseRow.createInnerTable(value);\n      case \"status\":\n        return <StatusIndicator status={value} />;\n      default:\n        return value;\n    }\n  }\n\n  render() {\n    const { name, value } = this.props;\n    return (\n      <>\n        <TableRow>\n          <TableCell>\n            {DeviceDetailsConciseRow.getPropertyDisplayName(name)}\n          </TableCell>\n          <TableCell align=\"center\">\n            {DeviceDetailsConciseRow.createTableCellContents(name, value)}\n          </TableCell>\n        </TableRow>\n      </>\n    );\n  }\n}\n\nDeviceDetailsConciseRow.propTypes = {\n  name: Proptypes.string.isRequired,\n  value: Proptypes.arrayOf(\n    Proptypes.oneOfType([InputChannelInfo, OutputChannelInfo])\n  ).isRequired\n};\n","import React from \"react\";\nimport { TableContainer, Table, TableBody, Paper } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceDetailsConciseRow from \"./DeviceDetailsConciseRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function DeviceDetailsConciseTable(props) {\n  const { device } = props;\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableBody>\n            {DeviceInfo.getConciseProperties().map((property) => (\n              <DeviceDetailsConciseRow\n                name={property}\n                value={device[property]}\n                key={`device_${property}`}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nDeviceDetailsConciseTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { Container, Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport HorizontalTabPanel from \"../general/HorizontalTabPanel\";\nimport DeviceDetailsActivityPanel from \"./TabPanels/DeviceDetailsActivityPanel\";\nimport DeviceDetailsNotesPanel from \"./TabPanels/DeviceDetailsNotesPanel\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeviceDetailsConciseTable from \"./DeviceDetailsConciseTable\";\n\nexport default class DeviceDetailsTabTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleValueChange(event, tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  static getPanelContents(tabInfo, device) {\n    switch (tabInfo) {\n      case \"Overview\":\n        return <DeviceDetailsConciseTable device={device} />;\n      case \"Activity Log\":\n        return <DeviceDetailsActivityPanel device={device} />;\n      case \"Notes\":\n        return <DeviceDetailsNotesPanel extras={device.extras} />;\n\n      default:\n        return <div>Whoops not a valid value</div>;\n    }\n  }\n\n  render() {\n    const { value } = this.state;\n    const { device, tabs } = this.props;\n    return (\n      <Container>\n        <Tabs\n          value={value}\n          onChange={this.handleValueChange}\n          className=\"lightGrey blackFont flexContents\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {tabs.map((tabInfo) => {\n            let tab;\n            if (tabInfo === \"Overview\") {\n              tab = (\n                <Tab\n                  label={tabInfo}\n                  key={tabInfo}\n                  style={{ pointerEvents: \"none\" }}\n                />\n              );\n            } else {\n              tab = <Tab label={tabInfo} key={tabInfo} />;\n            }\n            return tab;\n          })}\n        </Tabs>\n        {tabs.map((tabInfo, index) => {\n          return (\n            <HorizontalTabPanel\n              value={value}\n              key={tabInfo}\n              index={index}\n              device={device}\n            >\n              {DeviceDetailsTabTable.getPanelContents(tabInfo, device)}\n            </HorizontalTabPanel>\n          );\n        })}\n      </Container>\n    );\n  }\n}\nDeviceDetailsTabTable.propTypes = {\n  tabs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Button, TextField } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport * as DeviceApi from \"../api/DeviceApi\";\n\nexport default class DeviceNameDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.deviceName = props.deviceName;\n    this.deviceId = props.deviceId;\n    this.state = {\n      editing: false,\n      name: this.deviceName\n    };\n\n    this.startEdit = this.startEdit.bind(this);\n    this.cancelEditing = this.cancelEditing.bind(this);\n    this.confirmEditing = this.confirmEditing.bind(this);\n    this.setName = this.setName.bind(this);\n  }\n\n  setName(updatedName) {\n    this.setState({ name: updatedName });\n  }\n\n  startEdit() {\n    this.setState({ editing: true });\n  }\n\n  cancelEditing() {\n    this.setState({ name: this.deviceName });\n    this.setState({ editing: false });\n  }\n\n  confirmEditing(event) {\n    // api call\n    event.preventDefault();\n    const { name } = this.state;\n    DeviceApi.updateDeviceName(this.deviceId, name).then(() => {\n      // check response OK to update deviceName\n      this.deviceName = name;\n    });\n\n    this.setState({ editing: false });\n  }\n\n  renderStaticName() {\n    const { name } = this.state;\n    return (\n      <>\n        <Box className=\"flexContents\">\n          <div className=\"title\">{name}</div>\n          <Box padding={4} paddingLeft={1} paddingBottom={0}>\n            <Button>\n              <EditIcon id=\"editBtn\" color=\"action\" onClick={this.startEdit} />\n            </Button>\n          </Box>\n        </Box>\n      </>\n    );\n  }\n\n  renderEditName() {\n    return (\n      <>\n        <form className=\"deviceNameEditForm\" onSubmit={this.confirmEditing}>\n          <Box className=\"flexContents\">\n            <TextField\n              id=\"deviceName\"\n              name=\"deviceName\"\n              required\n              defaultValue={this.deviceName}\n              label=\"Device Name\"\n              onChange={(event) => this.setName(event.target.value)}\n            />\n            <Box padding={4} paddingLeft={1} paddingRight={1}>\n              <Button\n                id=\"cancelEditBtn\"\n                onClick={this.cancelEditing}\n                variant=\"contained\"\n                disableElevation\n              >\n                Cancel\n              </Button>\n            </Box>\n            <Box padding={4} paddingLeft={0}>\n              <Button\n                id=\"confirmEditBtn\"\n                type=\"submit\"\n                color=\"primary\"\n                variant=\"contained\"\n                disableElevation\n              >\n                Save\n              </Button>\n            </Box>\n          </Box>\n        </form>\n      </>\n    );\n  }\n\n  render() {\n    const { editing } = this.state;\n    return (\n      <>\n        <div>{editing ? this.renderEditName() : this.renderStaticName()}</div>\n      </>\n    );\n  }\n}\n\nDeviceNameDetail.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  deviceId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Container, Grid } from \"@material-ui/core\";\n\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport DeviceDetailsTabTable from \"./DeviceDetailsTabTable\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport { getSampleSender } from \"../api/SampleData\";\nimport DeleteDeviceButton from \"../general/Buttons/DeleteDeviceButton\";\nimport DeviceNameDetail from \"./DeviceNameDetail\";\n\nexport default function DeviceDetailsPage(props) {\n  const {\n    location: {\n      state: { device }\n    }\n  } = props;\n  const tabs = [\"Activity Log\", \"Notes\"];\n\n  return (\n    <Container>\n      <DynamicBreadcrumb\n        breadcrumbs={[\n          [\"Home\", \"/\"],\n          [\"My Devices\", \"/Devices\"],\n          [device.name, device.id]\n        ]}\n      />\n      <Box className=\"areaUnderBreadcrumbs\">\n        <Box className=\"flexContents headerAreaUnderline\">\n          <DeviceNameDetail\n            deviceName={device.name}\n            deviceId={device.serialNumber}\n          />\n          <div className=\"alignRightFloat\">\n            <Box marginRight={2} marginTop={2}>\n              <DeleteDeviceButton button deleteId={device.serialNumber} />\n            </Box>\n          </div>\n        </Box>\n      </Box>\n      <Grid container>\n        <Grid item xs={6}>\n          <DeviceDetailsTabTable tabs={[\"Overview\"]} device={device} />\n        </Grid>\n        <Grid item xs={6}>\n          <DeviceDetailsTabTable tabs={tabs} device={device} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\nDeviceDetailsPage.defaultProps = {\n  location: { state: { device: getSampleSender() } }\n};\n\nDeviceDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      device: PropTypes.instanceOf(DeviceInfo)\n    })\n  })\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LogsTable from \"./LogsTable\";\n\nexport default class LogsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.logsDataSource = props.logsDataSource;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.logsDataSource.getAllLogs().then(this.handleLogsChange);\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} />;\n  }\n}\n\nLogsTableWrapper.propTypes = {\n  logsDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport LogsTableWrapper from \"./LogsTableWrapper\";\n\nexport default function LogListPage(props) {\n  const { logsDataSource } = props;\n  return (\n    <>\n      <Container>\n        <DynamicBreadcrumb\n          breadcrumbs={[\n            [\"Home\", \"/\"],\n            [\"Logs\", \"/Logs\"]\n          ]}\n        />\n        <Box className=\"areaUnderBreadcrumbs\">\n          <Box className=\"headerAreaUnderline\">\n            <div className=\"title\">Logs</div>\n          </Box>\n          <LogsTableWrapper logsDataSource={logsDataSource} />\n        </Box>\n      </Container>\n    </>\n  );\n}\n\nLogListPage.propTypes = {\n  logsDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import axios from \"axios\";\n\nexport const unknownErrorMessage =\n  \"An unknown error occurred. Please try again later.\";\nexport const incorrectCredentialsMessage =\n  \"Incorrect username and/or password. Please enter the correct credentials and try again.\";\n\nexport async function logIn() {\n  // TODO: Correct backend URL from environment variables\n  return axios\n    .post(\"backendUrl/login\")\n    .then(() => {\n      // TODO: Happy path login\n    })\n    .catch((error) => {\n      let message = unknownErrorMessage;\n      if (error.response && error.response.status === \"403\") {\n        message = incorrectCredentialsMessage;\n      }\n      return Promise.reject(new Error(message));\n    });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    color: \"#ef5350\"\n  }\n}));\n\nexport default function LoginFailedDialog(props) {\n  const classes = useStyles();\n  const { open, setOpen, message } = props;\n\n  const closeDialog = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Dialog open={open} onClose={closeDialog}>\n        <DialogTitle id=\"login-failed-dialog-title\" className={classes.title}>\n          Login Failed\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"login-failed-dialog-description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nLoginFailedDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired\n};\n","import React, { useState } from \"react\";\nimport { Button, Container, makeStyles, TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function LoginConsole(props) {\n  const { handleSubmit } = props;\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit(username, password);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nLoginConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport HeaderBar from \"./general/HeaderBar\";\nimport HomePage from \"./homepage/HomePage\";\nimport DeviceListPage from \"./devicelist/DeviceListPage\";\nimport StreamingTablePage from \"./createStream/StreamingPage\";\nimport DeviceDetailsPage from \"./deviceDetailsPage/DeviceDetailsPage\";\nimport LogListPage from \"./loglist/LogListPage\";\nimport LoginPage from \"./login/LoginPage\";\n\nimport * as DeviceApi from \"./api/DeviceApi\";\nimport * as StreamApi from \"./api/StreamApi\";\nimport * as LogApi from \"./api/LogApi\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <HeaderBar />\n      <Switch>\n        <Route exact path={[\"/\", \"/Home\"]} component={HomePage} />\n        <Route\n          exact\n          path=\"/Devices\"\n          render={() => <DeviceListPage dataSource={DeviceApi} />}\n        />\n        <Route\n          exact\n          path=\"/Streaming\"\n          render={() => (\n            <StreamingTablePage\n              deviceDataSource={DeviceApi}\n              streamDataSource={StreamApi}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/Devices/Details/:deviceId\"\n          component={DeviceDetailsPage}\n        />\n        <Route\n          exact\n          path=\"/Logs\"\n          render={() => <LogListPage logsDataSource={LogApi} />}\n        />\n        <Route exact path=\"/Login\" component={LoginPage} />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport { Box, Container, Grid } from \"@material-ui/core\";\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\n\nimport GridColumn from \"../general/dashboard/GridColumn\";\nimport ActiveStreamCard from \"./ActiveStreamCard\";\nimport ActivityLogCard from \"./ActivityLogCard\";\nimport DevicesCard from \"./DevicesCard\";\nimport AdminPanelCard from \"./AdminPanelCard\";\n\nexport default function HomePage() {\n  return (\n    <Container>\n      <DynamicBreadcrumb breadcrumbs={[[\"Home\", \"\"]]} />\n      <Box className=\"flexContents headerAreaUnderline\">\n        <div className=\"title\">Dashboard</div>\n      </Box>\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"stretch\"\n        direction=\"row\"\n        spacing={3}\n      >\n        <Grid item xs={6}>\n          <Grid style={{ height: \"100%\" }}>\n            <ActiveStreamCard />\n          </Grid>\n        </Grid>\n        <GridColumn width={6}>\n          <Grid item xs={12}>\n            <DevicesCard />\n          </Grid>\n          <Grid item xs={12}>\n            <ActivityLogCard />\n          </Grid>\n          <Grid item xs={12}>\n            <AdminPanelCard />\n          </Grid>\n        </GridColumn>\n      </Grid>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport * as AuthenticationApi from \"../api/AuthenticationApi\";\nimport LoginFailedDialog from \"./LoginFailedDialog\";\nimport LoginConsole from \"./LoginConsole\";\n\nexport default function LoginPage() {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [dialogMessage, setDialogMessage] = useState(\"\");\n\n  const handleSubmit = (username, password) => {\n    AuthenticationApi.logIn({ username, password }).catch((error) => {\n      setDialogMessage(error.message);\n      setDialogOpen(true);\n    });\n  };\n\n  return (\n    <Container>\n      <Box className=\"flexContents headerAreaUnderline\">\n        <div className=\"title\">Login</div>\n      </Box>\n      <LoginConsole handleSubmit={handleSubmit} />\n      <LoginFailedDialog\n        open={dialogOpen}\n        setOpen={setDialogOpen}\n        message={dialogMessage}\n      />\n    </Container>\n  );\n}\n"],"sourceRoot":""}