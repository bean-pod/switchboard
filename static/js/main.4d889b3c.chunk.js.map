{"version":3,"sources":["api/AuthenticationUtil.js","app/ProtectedRoute.jsx","model/DeviceInfo.js","model/StreamInfo.js","general/DynamicBreadcrumb.jsx","general/Buttons/StreamButton.jsx","general/TitleButtons.jsx","general/Title.jsx","api/AuthenticationApi.js","general/LogoutMenu/LogoutMenu.jsx","general/LogoutMenu/LogoutMenuOpener.jsx","general/HeaderBar.jsx","general/Page.jsx","general/dialog/DialogBody.jsx","general/dialog/DialogButtons.jsx","general/dialog/Dialog.jsx","general/userForm/FormFailedDialog.jsx","general/dashboard/ButtonInfo.js","general/dashboard/SmallCardButton.jsx","general/dashboard/DashboardCard.jsx","general/userForm/FormConsole.jsx","login/LoginFormConsole.jsx","login/LoginPageContents.jsx","login/LoginPage.jsx","general/dashboard/GridColumn.jsx","general/dashboard/DashboardButton.jsx","general/SnackbarMessage.jsx","streamlist/StreamsTable.jsx","streamlist/StreamsTableWrapper.jsx","general/StatusIndicator.jsx","general/Buttons/DetailsButton.jsx","streamlist/StreamDetailsButton.jsx","model/StreamStatistics/StreamStatisticsInfo.js","model/StreamStatistics/StreamStatsSendInfo.js","model/StreamStatistics/StreamStatsReceiveInfo.js","model/StreamStatistics/StreamStatsLinkInfo.js","model/StreamStatistics/StreamStatsWindowInfo.js","model/ConvertDataFormat.js","api/StreamApi.js","streamlist/SimpleStreamsTableWrapper.jsx","homepage/ActiveStreamCard.jsx","homepage/ActivityLogCard.jsx","homepage/DevicesCard.jsx","homepage/AdminPanelCard.jsx","homepage/HomePageContents.jsx","homepage/HomePage.jsx","model/OutputChannelInfo.js","model/InputChannelInfo.js","api/DeviceApi.js","devicelist/StyledInput.jsx","devicelist/DeviceTableTitle.jsx","devicelist/ChannelDetailsTableHead.jsx","devicelist/ChannelDetailsTableRow.jsx","devicelist/ChannelDetailsTable.jsx","devicelist/DeviceDetailsButton.jsx","devicelist/DevicesTable.jsx","devicelist/DeviceListPageContents.jsx","devicelist/DeviceListPage.jsx","deviceDetailsPage/EditableName.jsx","deviceDetailsPage/StaticName.jsx","deviceDetailsPage/DeviceName.jsx","deviceDetailsPage/DeviceInfoTable/DeviceInfoRow.jsx","deviceDetailsPage/DeviceInfoTable/DeviceInfoTable.jsx","deviceDetailsPage/DeviceDetailsInfoTable.jsx","deviceDetailsPage/cards/DeviceInfoCard.jsx","model/LogInfo.js","model/StreamLogInfo.js","loglist/LogsTable.jsx","deviceDetailsPage/DeviceLogTableWrapper.jsx","api/LogApi.js","deviceDetailsPage/cards/DeviceLogCard.jsx","deviceDetailsPage/cards/DeviceChannelCard.jsx","api/SampleData.js","deviceDetailsPage/DeleteDeviceDialog/DeleteDeviceDialog.jsx","deviceDetailsPage/DeleteDeviceDialog/DeleteDeviceDialogOpener.jsx","deviceDetailsPage/configuration/UploadConfigDialog.jsx","deviceDetailsPage/configuration/UploadConfigDialogOpenButton.jsx","deviceDetailsPage/configuration/DownloadConfigButton.jsx","deviceDetailsPage/cards/DeviceConfigActionsCard.jsx","deviceDetailsPage/DeviceDetailsPageContents.jsx","deviceDetailsPage/DeviceDetailsPage.jsx","streamlist/DetailedStreamsTableWrapper.jsx","streamlist/StreamListPage.jsx","createStream/SelectDeviceDialog/SelectTable.jsx","createStream/SelectDeviceDialog/SelectDeviceTable.jsx","createStream/SelectDeviceDialog/SelectChannelTable.jsx","general/simpleTable/SimpleTableRow.jsx","general/simpleTable/SimpleTable.jsx","general/StreamDeviceCard.jsx","createStream/SwipeableSteps/StepperNextButton.jsx","createStream/SwipeableSteps/StepperBackButton.jsx","createStream/SwipeableSteps/SelectDeviceSwipeableSteps.jsx","createStream/SelectDeviceDialog/SelectDeviceDialog.jsx","createStream/cards/SelectedDeviceCard.jsx","createStream/cards/UnselectedDeviceCard.jsx","createStream/cards/CreateStreamCardToggler.jsx","createStream/CreateStreamDeviceCardWrapper.jsx","createStream/CreateStreamPageContents.jsx","createStream/CreateStreamPage.jsx","loglist/LogsTableWrapper.jsx","loglist/LogListPage.jsx","api/UserManagementApi.js","admin/createUser/CreateUserPageContents.jsx","admin/createUser/CreateUserPage.jsx","streamDetails/StreamDetailsDeviceCard.jsx","streamDetails/DeleteStreamDialog.jsx","streamDetails/DeleteStreamDialogOpener.jsx","streamDetails/StreamStatisticsCard.jsx","streamDetails/StreamLogTableWrapper.jsx","streamDetails/cards/StreamLogCard.jsx","streamDetails/StreamDetailsPageContents.jsx","streamDetails/StreamDetailsPage.jsx","general/PathNotFoundPage.jsx","streamDetails/DetailedStreamStatistics/StatisticsOverviewCard.jsx","streamDetails/DetailedStreamStatistics/StatisticsSendingCard.jsx","streamDetails/DetailedStreamStatistics/StatisticsReceivingCard.jsx","streamDetails/DetailedStreamStatistics/StreamStatisticsPageContents.jsx","streamDetails/DetailedStreamStatistics/StreamStatisticsPage.jsx","app/AppRouter.jsx","index.jsx"],"names":["parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","component","charCodeAt","toString","slice","join","JSON","parse","saveToken","tokenPayload","expiryDate","Date","exp","Cookies","set","expires","SameSite","getAuthorizationHeader","get","headers","Authorization","isAuthenticated","isAdmin","role","ProtectedRoute","props","bind","location","this","authenticationRequired","render","authenticated","to","pathname","path","exact","React","Component","defaultProps","DeviceInfo","serial","lastCommunication","publicIpAddress","privateIpAddress","displayName","status","channels","deviceType","extras","serialNumber","publicIp","privateIp","name","StreamInfo","id","date","sender","receiver","outputChannel","inputChannel","type","time","DynamicBreadcrumb","breadcrumbs","Box","padding","Breadcrumbs","aria-label","separator","NavigateNext","fontSize","crumb","Link","NavLink","state","Typography","color","StreamButton","StyledButton","withStyles","root","background","borderRadius","border","height","margin","zIndex","label","textTransform","Button","className","SwapHoriz","TitleButtons","activeClassName","Title","title","hasStreamButton","unknownErrorMessage","incorrectCredentialsMessage","credentials","a","authorizationHeader","auth","username","password","axios","process","then","response","AuthenticationUtil","authorization","catch","error","message","Promise","reject","Error","LogoutMenu","anchor","open","handleClose","handleLogout","Popper","anchorEl","transition","disablePortal","Grow","in","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","MenuItem","disabled","selected","onClick","LogoutMenuOpener","anchorElement","createRef","handleOpen","setState","IconButton","ref","AccountCircle","current","HeaderBar","classes","makeStyles","theme","menuButton","marginRight","spacing","history","remove","push","AppBar","position","Toolbar","edge","Home","withRouter","Page","children","Container","DialogBody","DialogButtons","button1","button2","autoFocus","undefined","Dialog","openDialog","closeDialog","actionButton","isError","button","onClose","aria-labelledby","aria-describedby","DialogTitle","FormFailedDialog","dialogElement","errorMessage","ButtonInfo","referenceObject","buttonText","SmallCardButton","variant","size","DashboardCard","elevation","gutterBottom","Grid","container","justify","direction","item","xs","FormConsole","passwordErrorCondition","onSubmit","setUsername","setPassword","setPasswordError","passwordOnChange","event","handleSubmit","preventDefault","passwordError","length","upperbound","lowerbound","buttonName","isValidate","passwordInputProps","passwordHelperText","alignItems","noValidate","TextField","required","fullWidth","autoComplete","onChange","target","value","inputProps","helperText","LoginFormConsole","LoginPageContents","dialogMessage","setDialogMessage","logIn","LoginPage","GridColumn","width","DashboardButton","href","passedState","minWidth","maxWidth","openSnackbar","StreamsTable","options","toolbar","headerStyle","backgroundColor","fontWeight","filtering","draggable","icons","SortArrow","ArrowDownward","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","streams","columns","TableContainer","data","getOptions","getIcons","SnackbarMessage","reason","stat","msg","isSuccess","Snackbar","contentprops","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","CheckCircle","action","Close","snackbar","StreamsTableWrapper","dataSource","handleStreamsChange","getAllStreams","StatusIndicator","getStatusStyle","DetailsButton","navLinkInfo","tooltipTitle","Tooltip","Description","StreamDetailsButton","streamInfo","stream","StreamStatisticsInfo","window","link","send","receive","StreamStatsSendInfo","sending","packets","packetsLost","packetsDropped","packetsRetransmitted","bytes","bytesDropped","mbitRate","StreamStatsReceiveInfo","receiving","packetsBelated","bytesLost","StreamStatsLinkInfo","rtt","bandwidth","maxBandwidth","StreamStatsWindowInfo","flow","congestion","flight","convertDeviceToDataObject","databaseDevice","device","inputs","outputs","convertStatsToDataObject","databaseStats","recv","getStream","streamId","startDate","encoder","decoder","channel","port","all","deleteStream","delete","createStream","selectedReceiverID","selectedSenderID","post","inputChannelId","outputChannelId","getStreamStatistics","SimpleStreamsTableWrapper","simpleColumns","field","rowData","sorting","align","export","streamDataSource","ActiveStreamCard","ActivityLogCard","DevicesCard","AdminPanelCard","HomePageContents","HomePage","OutputChannelInfo","InputChannelInfo","getStatus","lastCommunicationString","lastCommunicationDate","now","getTime","getSenders","senders","resolve","output","configurationInstance","getReceivers","receivers","input","deviceId","updatedName","put","configFile","FormData","append","letterSpacing","lineHeight","borderColor","boxShadow","InputBase","DeviceTableTitle","handleChange","index","Select","StyledInput","ChannelDetailsTableHead","TableRow","TableCell","ChannelDetailsTableRow","ChannelDetailsTable","Table","TableHead","TableBody","DeviceDetailsButton","deviceInfo","DevicesTable","components","passedProps","lookup","Online","Pending","Offline","detailPanel","icon","ExpandMore","openIcon","ExpandLess","tooltip","search","exportButton","Filter","FilterList","Search","ResetSearch","Clear","Export","SaveAlt","devices","maxHeight","DeviceListPageContents","getDevices","getTitle","handleSendersChange","handleReceiversChange","selectedState","concat","DeviceListPage","EditableName","confirmEditing","deviceName","setName","cancelEditing","defaultValue","Cancel","Save","StaticName","startEditing","Edit","DeviceName","editing","startEdit","newName","oldName","DeviceApi","forceUpdate","DeviceInfoRow","getPropertyDisplayName","createInnerTable","createTableCellContents","DeviceInfoTable","properties","property","DeviceDetailsInfoTable","DeviceInfoCard","LogInfo","dateTime","level","StreamLogInfo","LogsTable","showTitle","maxBodyHeight","minBodyHeight","logs","DeviceLogTableWrapper","defaultSort","handleDeviceLogsChange","getDeviceLogs","getLogs","endpoint","log","getAllLogs","deviceSerialNumber","getStreamLogs","logEntity","DeviceLogCard","deviceLogsDataSource","DeviceChannelCard","sampleOutputChannels","InChannelInfo","OutChannelInfo","getSampleSender","DeleteDeviceDialog","confirmDelete","DeleteDeviceDialogOpener","startIcon","UploadConfigDialog","file","handleUpload","files","uploadConfiguration","finally","Input","disableUnderline","UploadConfigDialogOpenButton","CloudUpload","DownloadConfigButton","handleDownload","filename","element","document","createElement","setAttribute","display","body","appendChild","click","removeChild","GetApp","DeviceConfigActionsCard","DeviceDetailsPageContents","DeviceDetailsPage","DetailedStreamsTableWrapper","detailedColumns","StreamListPage","SelectTable","handleListItemClick","setIndex","selectedIndex","items","List","ListItem","ListItemText","primary","SelectDeviceTable","deviceNames","deviceList","SelectChannelTable","channelNames","deviceIndex","SimpleTableRow","alignment","SimpleTable","propertiesArr","Object","keys","propertyName","propertyPair","StreamDeviceCard","Name","Channel","StepperNextButton","isLast","handleNext","handleClick","KeyboardArrowRight","StepperBackButton","isFirst","handleBack","KeyboardArrowLeft","SelectDeviceSwipeableSteps","activeStep","steps","getNextButton","getBackButton","previousStep","maxSteps","disableNext","channelIndex","setDeviceIndex","setChannelIndex","axis","enableMouseEvents","MobileStepper","nextButton","backButton","SelectDeviceDialog","SelectedDeviceCard","channelId","UnselectedDeviceCard","CreateStreamCardToggler","CreateStreamDeviceCardWrapper","CreateStreamPageContents","senderDeviceIndex","senderChannelIndex","receiverDeviceIndex","receiverChannelIndex","setSenders","setReceivers","setSenderDeviceIndex","setReceiverDeviceIndex","setSenderChannelIndex","setReceiverChannelIndex","recieverChannel","senderChannel","textAlign","Forward","CreateStreamPage","LogsTableWrapper","cellStyle","logsDataSource","handleLogsChange","LogListPage","userRole","createUser","CreateUserPageContents","maxLength","minLength","CreateUserPage","StreamDetailsDeviceCard","cardTitle","DeleteStreamDialog","deleteId","DeleteStreamDialogOpener","StreamStatisticsCard","stats","handleStatsChange","getProperties","getButton","Time","statistics","StreamLogTableWrapper","handleStreamLogsChange","StreamLogCard","streamLogsDataSource","StreamDetailsPageContents","StreamDetailsPage","PathNotFoundPage","StatisticsOverviewCard","Flow","Congestion","Flight","Latency","Bandwidth","StatisticsSendingCard","Packets","Bytes","StatisticsReceivingCard","StreamStatisticsPageContents","StreamStatisticsPage","AppRouter","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4d889b3c.chunk.js","sourcesContent":["import Cookies from \"js-cookie\";\n\nfunction parseJwt(token) {\n  const base64Url = token.split(\".\")[1];\n  const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  const jsonPayload = decodeURIComponent(\n    atob(base64)\n      .split(\"\")\n      .map((c) => {\n        const component = `00${c.charCodeAt(0).toString(16)}`;\n        return `%${component.slice(-2)}`;\n      })\n      .join(\"\")\n  );\n\n  return JSON.parse(jsonPayload);\n}\n\nexport function saveToken(token) {\n  const tokenPayload = parseJwt(token.split(\" \")[1]);\n  const expiryDate = new Date(tokenPayload.exp * 1000);\n  Cookies.set(\"authToken\", token, { expires: expiryDate, SameSite: \"Strict\" });\n}\n\nexport function getAuthorizationHeader() {\n  const token = Cookies.get(\"authToken\");\n  return {\n    headers: { Authorization: `${token}` }\n  };\n}\n\nexport function isAuthenticated() {\n  return !!Cookies.get(\"authToken\");\n}\n\nexport function isAdmin() {\n  const token = Cookies.get(\"authToken\");\n  const tokenPayload = parseJwt(token.split(\" \")[1]);\n  return tokenPayload.role === \"ADMIN\" || tokenPayload.role === \"SUPERUSER\";\n}\n\nexport default {\n  saveToken,\n  getAuthorizationHeader\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\n\nexport default class ProtectedRoute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.component = this.component.bind(this);\n  }\n\n  component(location) {\n    const { authenticationRequired, render } = this.props;\n    const authenticated = isAuthenticated();\n\n    if (authenticationRequired) {\n      if (authenticated) {\n        return render(location);\n      }\n\n      return <Redirect to={{ pathname: \"/Login\" }} />;\n    }\n\n    if (authenticated) {\n      return <Redirect to={{ pathname: \"/Home\" }} />;\n    }\n\n    return render(location);\n  }\n\n  render() {\n    const { path } = this.props;\n    return (\n      <Route\n        exact\n        path={path}\n        render={({ location }) => this.component(location)}\n      />\n    );\n  }\n}\n\nProtectedRoute.propTypes = {\n  path: PropTypes.string.isRequired,\n  authenticationRequired: PropTypes.bool,\n  render: PropTypes.func.isRequired\n};\n\nProtectedRoute.defaultProps = {\n  authenticationRequired: false\n};\n","export default class DeviceInfo {\n  constructor(\n    serial,\n    lastCommunication,\n    publicIpAddress,\n    privateIpAddress,\n    displayName,\n    status,\n    channels,\n    deviceType,\n    extras\n  ) {\n    this.serialNumber = serial;\n    this.lastCommunication = lastCommunication;\n    this.publicIp = publicIpAddress;\n    this.privateIp = privateIpAddress;\n    this.name = displayName;\n    this.status = status;\n    this.channels = channels;\n    this.deviceType = deviceType;\n    this.extras = extras;\n  }\n}\n","export default class StreamInfo {\n  // to be used once backend has date, status, type, and time fields\n  // constructor(id, date, sender, receiver, status, type, time, extras) {\n  //     this.id = id;\n  //     this.date = new Date(date).toString().split(\" \").slice(0, 5).join(\" \");\n  //     this.sender = sender;\n  //     this.receiver = receiver;\n  //     this.status = status;\n  //     this.type = type;\n  //     this.time = time;\n  //     this.extras = extras;\n  // }\n\n  // temporary with static fields until backend is up to snuff\n  constructor(id, date, sender, receiver, outputChannel, inputChannel) {\n    this.id = id;\n    this.date = date;\n    this.sender = sender;\n    this.receiver = receiver;\n    this.outputChannel = outputChannel;\n    this.inputChannel = inputChannel;\n    this.status = \"Online\";\n    this.type = \"Type 1\";\n    this.time = \"00:34:44\";\n  }\n}\n","import React from \"react\";\nimport { Box, Breadcrumbs, Link, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport { NavigateNext } from \"@material-ui/icons\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default function DynamicBreadcrumb(props) {\n  const { breadcrumbs } = props;\n  return (\n    <Box padding=\"2em 0em 0em\">\n      <Breadcrumbs\n        aria-label=\"breadcrumb\"\n        separator={<NavigateNext fontSize=\"medium\" />}\n      >\n        {breadcrumbs.map((crumb) => {\n          return (\n            <Link\n              component={NavLink}\n              to={{\n                pathname: crumb[1],\n                state: crumb[2] ? crumb[2] : null\n              }}\n              key={`breadcrumb ${crumb[0]}`}\n            >\n              <Typography color=\"textPrimary\">{crumb[0]}</Typography>\n            </Link>\n          );\n        })}\n      </Breadcrumbs>\n    </Box>\n  );\n}\nDynamicBreadcrumb.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.objectOf(\n          PropTypes.oneOfType([\n            PropTypes.instanceOf(DeviceInfo),\n            PropTypes.instanceOf(StreamInfo)\n          ])\n        )\n      ])\n    )\n  ).isRequired\n};\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { SwapHoriz } from \"@material-ui/icons/\";\n\nexport default function StreamButton(props) {\n  const { type } = props;\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      padding: \"0 5px\",\n      margin: \"1em\",\n      zIndex: -1\n    },\n    label: {\n      textTransform: \"\"\n    }\n  })(Button);\n\n  return (\n    <StyledButton type={type}>\n      <div className=\"buttonText\">\n        <SwapHoriz />\n        Stream\n      </div>\n    </StyledButton>\n  );\n}\n\nStreamButton.propTypes = {\n  type: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport StreamButton from \"./Buttons/StreamButton\";\n\nexport default function TitleButtons() {\n  return (\n    <div className=\"alignRightFloat\">\n      <NavLink\n        to=\"/Streams/New\"\n        activeClassName=\"hideLinkStyle\"\n        className=\"hideLinkStyle\"\n        exact\n      >\n        <StreamButton type=\"submit\" />\n      </NavLink>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TitleButtons from \"./TitleButtons\";\n\nexport default function Title(props) {\n  const { title, hasStreamButton } = props;\n  return (\n    <Box className=\"flexContents headerAreaUnderline\">\n      <div className=\"title\">{title}</div>\n      {hasStreamButton ? <TitleButtons /> : <></>}\n    </Box>\n  );\n}\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  hasStreamButton: PropTypes.bool.isRequired\n};\n","import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport * as AuthenticationUtil from \"./AuthenticationUtil\";\n\nexport const unknownErrorMessage =\n  \"An unknown error occurred. Please try again later.\";\nexport const incorrectCredentialsMessage =\n  \"Incorrect username and/or password. Please enter the correct credentials and try again.\";\n\nexport async function logIn(credentials) {\n  const authorizationHeader = {\n    auth: {\n      username: credentials.username,\n      password: credentials.password\n    }\n  };\n\n  return axios\n    .get(process.env.REACT_APP_TOKEN, authorizationHeader)\n    .then((response) => {\n      AuthenticationUtil.saveToken(response.headers.authorization);\n    })\n    .catch((error) => {\n      let message = unknownErrorMessage;\n      if (error.response && error.response.status === \"403\") {\n        message = incorrectCredentialsMessage;\n      }\n      return Promise.reject(new Error(message));\n    });\n}\n\nexport function logOut() {\n  Cookies.remove(\"authToken\");\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ClickAwayListener,\n  Grow,\n  MenuItem,\n  MenuList,\n  Paper,\n  Popper,\n  Typography\n} from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function LogoutMenu(props) {\n  const { anchor, open, handleClose, handleLogout } = props;\n\n  return (\n    <Popper open={open} anchorEl={anchor} transition disablePortal>\n      <Grow in={open} style={{ transformOrigin: \"center top\" }}>\n        <Paper>\n          <ClickAwayListener onClickAway={handleClose}>\n            <MenuList autoFocusItem={open} id=\"menu-list-grow\">\n              <MenuItem disabled>\n                <Typography color=\"textSecondary\">Quick Actions</Typography>\n              </MenuItem>\n              <NavLink to=\"/Home\" className=\"hideLinkStyle\">\n                <MenuItem>\n                  <Typography color=\"textPrimary\">Dashboard</Typography>\n                </MenuItem>\n              </NavLink>\n              <NavLink\n                to={{ pathname: \"/Devices\", state: { selected: 0 } }}\n                className=\"hideLinkStyle\"\n              >\n                <MenuItem>\n                  <Typography color=\"textPrimary\">My Devices</Typography>\n                </MenuItem>\n              </NavLink>\n              <MenuItem onClick={handleLogout}>\n                <Typography color=\"error\">Logout</Typography>\n              </MenuItem>\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Grow>\n    </Popper>\n  );\n}\n\nLogoutMenu.propTypes = {\n  anchor: PropTypes.node.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleLogout: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton } from \"@material-ui/core\";\n\nimport { AccountCircle } from \"@material-ui/icons/\";\nimport LogoutMenu from \"./LogoutMenu\";\n\nexport default class LogoutMenuOpener extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n\n    this.anchorElement = React.createRef();\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleOpen() {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    const { open } = this.state;\n    const { disabled, handleLogout } = this.props;\n    return (\n      <>\n        <IconButton\n          ref={this.anchorElement}\n          id=\"acctBtn\"\n          color=\"inherit\"\n          disabled={disabled}\n          onClick={this.handleOpen}\n        >\n          <AccountCircle />\n        </IconButton>\n        <LogoutMenu\n          anchor={this.anchorElement.current}\n          open={open}\n          handleLogout={handleLogout}\n          handleClose={this.handleClose}\n        />\n      </>\n    );\n  }\n}\n\nLogoutMenuOpener.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  handleLogout: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport { AppBar, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\nimport { Home } from \"@material-ui/icons/\";\n\nimport { logOut } from \"../api/AuthenticationApi\";\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\nimport LogoutMenuOpener from \"./LogoutMenu/LogoutMenuOpener\";\n\nclass HeaderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      menuButton: {\n        marginRight: theme.spacing(2)\n      }\n    }));\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout() {\n    const { history } = this.props;\n    logOut();\n    history.push(\"/Login\");\n  }\n\n  render() {\n    return (\n      <div className=\"headerBar\">\n        <AppBar position=\"static\">\n          <Toolbar className=\"darkGrey\">\n            <div className=\"headerTitle\">\n              <NavLink to=\"/Home\" className=\"headerTitle\">\n                <IconButton\n                  edge=\"start\"\n                  className={this.classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"home\"\n                >\n                  <Home />\n                </IconButton>\n              </NavLink>\n              Switchboard\n            </div>\n            <LogoutMenuOpener\n              disabled={!isAuthenticated()}\n              handleLogout={this.handleLogout}\n            />\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\nexport default withRouter(HeaderBar);\n\nHeaderBar.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"@material-ui/core\";\nimport DynamicBreadcrumb from \"./DynamicBreadcrumb\";\nimport Title from \"./Title\";\nimport HeaderBar from \"./HeaderBar\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default function Page(props) {\n  const { breadcrumbs, title, hasStreamButton, children } = props;\n  return (\n    <>\n      <HeaderBar />\n      <Container>\n        <DynamicBreadcrumb breadcrumbs={breadcrumbs} />\n        <Title title={title} hasStreamButton={hasStreamButton} />\n        {children}\n      </Container>\n    </>\n  );\n}\n\nPage.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.objectOf(\n          PropTypes.oneOfType([\n            PropTypes.instanceOf(DeviceInfo),\n            PropTypes.instanceOf(StreamInfo)\n          ])\n        )\n      ])\n    )\n  ).isRequired,\n  title: PropTypes.string.isRequired,\n  hasStreamButton: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\nPage.defaultProps = {\n  hasStreamButton: false\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogContentText from \"@material-ui/core/DialogContentText\";\n\nexport default function DialogBody(props) {\n  const { children } = props;\n  return (\n    <MuiDialogContent>\n      <MuiDialogContentText id=\"dialog-description\">\n        {children}\n      </MuiDialogContentText>\n    </MuiDialogContent>\n  );\n}\nDialogBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\n\nexport default function DialogButtons(props) {\n  const { button1, button2 } = props;\n\n  return (\n    <MuiDialogActions>\n      <Button onClick={button1.onClick} color=\"primary\">\n        {button1.name}\n      </Button>\n      {button2 ? (\n        <Button onClick={button2.onClick} color=\"secondary\" autoFocus>\n          {button2.name}\n        </Button>\n      ) : undefined}\n    </MuiDialogActions>\n  );\n}\n\nDialogButtons.propTypes = {\n  button1: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired,\n  button2: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  })\n};\n\nDialogButtons.defaultProps = {\n  button2: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MuiDialog from \"@material-ui/core/Dialog/Dialog\";\nimport { DialogTitle } from \"@material-ui/core\";\nimport DialogBody from \"./DialogBody\";\nimport DialogButtons from \"./DialogButtons\";\n\nexport default class Dialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.openDialog = this.openDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.setState({ open: true });\n  }\n\n  closeDialog() {\n    return this.setState({ open: false });\n  }\n\n  render() {\n    const { title, actionButton, children, isError } = this.props;\n    const { open } = this.state;\n\n    const button = {\n      name: actionButton ? \"Cancel\" : \"OK\",\n      onClick: this.closeDialog\n    };\n\n    return (\n      <MuiDialog\n        open={open}\n        onClose={() => this.closeDialog}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n        id=\"dialog\"\n      >\n        <DialogTitle className={isError ? \"warningText\" : undefined}>\n          {title}\n        </DialogTitle>\n        <DialogBody>{children}</DialogBody>\n        {actionButton ? (\n          <DialogButtons button1={button} button2={actionButton} />\n        ) : (\n          <DialogButtons button1={button} />\n        )}\n      </MuiDialog>\n    );\n  }\n}\n\nDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  actionButton: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }),\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  isError: PropTypes.bool\n};\n\nDialog.defaultProps = {\n  isError: false,\n  actionButton: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Dialog from \"../dialog/Dialog\";\n\nexport default class FormFailedDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { title, errorMessage } = this.props;\n\n    return (\n      <Dialog ref={this.dialogElement} title={title} isError>\n        {errorMessage}\n      </Dialog>\n    );\n  }\n}\n\nFormFailedDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string.isRequired\n};\n","export default class ButtonInfo {\n  constructor(pathname, referenceObject, buttonText, onClick) {\n    this.pathname = pathname;\n    this.referenceObject = referenceObject;\n    this.buttonText = buttonText;\n    this.onClick = onClick;\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport ButtonInfo from \"./ButtonInfo\";\n\nexport default function SmallCardButton(props) {\n  const {\n    button: { pathname, referenceObject, buttonText, onClick }\n  } = props;\n\n  if (onClick) {\n    return (\n      <Button variant=\"contained\" size=\"small\" onClick={onClick}>\n        {buttonText}\n      </Button>\n    );\n  }\n\n  return (\n    <NavLink\n      activeClassName=\"hideLinkStyle\"\n      className=\"hideLinkStyle\"\n      to={{\n        pathname,\n        state: referenceObject\n      }}\n    >\n      <Button variant=\"contained\" size=\"small\">\n        {buttonText}\n      </Button>\n    </NavLink>\n  );\n}\n\nSmallCardButton.propTypes = {\n  button: PropTypes.instanceOf(ButtonInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Typography, Paper, Grid, Box } from \"@material-ui/core\";\nimport SmallCardButton from \"./SmallCardButton\";\nimport ButtonInfo from \"./ButtonInfo\";\n\nexport default function DashboardCard(props) {\n  const { title, children, button } = props;\n  return (\n    <Paper className=\"dashboardCard\" elevation={2}>\n      <Typography variant=\"h5\" gutterBottom>\n        {title}\n      </Typography>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        {children}\n        {button ? (\n          <Grid item xs={12}>\n            <Box className=\"alignRightFloatPadded\">\n              <SmallCardButton button={button} />\n            </Box>\n          </Grid>\n        ) : null}\n      </Grid>\n    </Paper>\n  );\n}\n\nDashboardCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]),\n  button: PropTypes.instanceOf(ButtonInfo)\n};\n\nDashboardCard.defaultProps = {\n  children: \"\",\n  button: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, TextField, Grid } from \"@material-ui/core\";\nimport DashboardCard from \"../dashboard/DashboardCard\";\n\nexport default class FormConsole extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      passwordErrorCondition: false\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.setUsername = this.setUsername.bind(this);\n    this.setPassword = this.setPassword.bind(this);\n    this.setPasswordError = this.setPasswordError.bind(this);\n    this.passwordOnChange = this.passwordOnChange.bind(this);\n  }\n\n  onSubmit(event) {\n    const { handleSubmit } = this.props;\n    const { username, password } = this.state;\n    event.preventDefault();\n    handleSubmit(username, password);\n  }\n\n  setUsername(username) {\n    this.setState({\n      username\n    });\n  }\n\n  setPassword(password) {\n    this.setState({\n      password\n    });\n  }\n\n  setPasswordError(password) {\n    const { passwordError } = this.props;\n    if (passwordError) {\n      if (\n        password.length < passwordError.upperbound &&\n        password.length > passwordError.lowerbound\n      ) {\n        this.setState({ passwordErrorCondition: true });\n      } else {\n        this.setState({ passwordErrorCondition: false });\n      }\n    }\n  }\n\n  passwordOnChange(password) {\n    this.setPassword(password);\n    this.setPasswordError(password);\n  }\n\n  render() {\n    const {\n      buttonName,\n      isValidate,\n      passwordInputProps,\n      passwordHelperText\n    } = this.props;\n    const { passwordErrorCondition } = this.state;\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"stretch\"\n        direction=\"row\"\n        spacing={3}\n      >\n        <Grid item xs={6}>\n          <DashboardCard title=\"\">\n            <div>\n              <form noValidate={!isValidate} onSubmit={this.onSubmit}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  autoFocus\n                  onChange={(event) => this.setUsername(event.target.value)}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  error={passwordErrorCondition}\n                  inputProps={passwordInputProps}\n                  helperText={passwordHelperText}\n                  autoComplete=\"current-password\"\n                  // prettier-ignore\n                  onChange={(event) => this.passwordOnChange(event.target.value)}\n                />\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  {buttonName}\n                </Button>\n              </form>\n            </div>\n          </DashboardCard>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nFormConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  buttonName: PropTypes.string.isRequired,\n  isValidate: PropTypes.bool,\n  passwordError: PropTypes.shape({\n    upperbound: PropTypes.number.isRequired,\n    lowerbound: PropTypes.number.isRequired\n  }),\n  passwordInputProps: PropTypes.shape({\n    maxLength: PropTypes.number.isRequired,\n    minLength: PropTypes.number.isRequired\n  }),\n  passwordHelperText: PropTypes.string\n};\n\nFormConsole.defaultProps = {\n  isValidate: false,\n  passwordError: undefined,\n  passwordInputProps: undefined,\n  passwordHelperText: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormConsole from \"../general/userForm/FormConsole\";\n\nexport default function LoginFormConsole(props) {\n  const { handleSubmit } = props;\n\n  return <FormConsole handleSubmit={handleSubmit} buttonName=\"Login\" />;\n}\n\nLoginFormConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { withRouter } from \"react-router-dom\";\nimport FormFailedDialog from \"../general/userForm/FormFailedDialog\";\nimport LoginFormConsole from \"./LoginFormConsole\";\nimport { logIn } from \"../api/AuthenticationApi\";\n\nclass LoginPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogMessage: \"\"\n    };\n    this.dialogElement = React.createRef();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n    this.setDialogMessage = this.setDialogMessage.bind(this);\n  }\n\n  handleSubmit(username, password) {\n    const { history } = this.props;\n    logIn({ username, password })\n      .then(() => {\n        history.push(\"/Home\");\n      })\n      .catch((error) => {\n        this.openDialog();\n        this.setDialogMessage(error.message);\n      });\n  }\n\n  setDialogMessage(message) {\n    this.setState({\n      dialogMessage: message\n    });\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { dialogMessage } = this.state;\n    return (\n      <>\n        <LoginFormConsole handleSubmit={this.handleSubmit} />\n        <FormFailedDialog\n          ref={this.dialogElement}\n          title=\"Login failed\"\n          errorMessage={dialogMessage}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(LoginPageContents);\n\nLoginPageContents.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport LoginPageContents from \"./LoginPageContents\";\n\nexport default function LoginPage() {\n  return (\n    <Page title=\"Login\" breadcrumbs={[]}>\n      <LoginPageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function GridColumn(props) {\n  const { width, spacing, children } = props;\n  return (\n    <Grid item xs={width}>\n      <Grid container spacing={spacing}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\nGridColumn.propTypes = {\n  width: PropTypes.number.isRequired,\n  spacing: PropTypes.number,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nGridColumn.defaultProps = {\n  spacing: 3\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button, withStyles } from \"@material-ui/core\";\n\nexport default function DashboardButton(props) {\n  const { href, children, passedState } = props;\n\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      minWidth: 100,\n      maxWidth: 200,\n      padding: \"0 5px\",\n      textTransform: \"none\"\n    }\n  })(Button);\n  return (\n    <NavLink\n      activeClassName=\"hideLinkStyle\"\n      className=\"hideLinkStyle\"\n      color=\"inherit\"\n      to={{\n        pathname: href,\n        state: { passedState }\n      }}\n    >\n      <StyledButton>{children}</StyledButton>\n    </NavLink>\n  );\n}\n\nDashboardButton.defaultProps = {\n  passedState: 0\n};\nDashboardButton.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  passedState: PropTypes.number\n};\n","import React from \"react\";\nimport { Snackbar, SnackbarContent, IconButton, Box } from \"@material-ui/core\";\nimport { CheckCircle, Error, Close } from \"@material-ui/icons\";\n\nlet openSnackbar;\n\nexport default class SnackbarMessage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      status: \"\",\n      message: \"\"\n    };\n    this.openSnackbar = this.openSnackbar.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  componentDidMount() {\n    openSnackbar = this.openSnackbar;\n  }\n\n  handleClose(event, reason) {\n    if (reason !== \"clickaway\") {\n      this.setState({\n        open: false\n      });\n    }\n  }\n\n  openSnackbar(stat, msg) {\n    this.setState({\n      open: true,\n      status: stat,\n      message: msg\n    });\n  }\n\n  render() {\n    const { open, status, message } = this.state;\n    const isSuccess = status === \"success\";\n    return (\n      <>\n        <Snackbar\n          contentprops={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={open}\n          autoHideDuration={3000}\n          onClose={this.handleClose}\n        >\n          <SnackbarContent\n            style={{\n              backgroundColor: isSuccess ? \"#4caf50\" : \"#f44336\"\n            }}\n            // prettier-ignore\n            message={(\n              <Box id='message-id' className=\"snackMessage\">\n                {isSuccess ? \n                  <CheckCircle className=\"iconPadding\" /> : \n                  <Error className=\"iconPadding\" />}\n                {message}\n              </Box>\n            )}\n            action={[\n              <IconButton\n                key=\"close\"\n                aria-label=\"Close\"\n                color=\"inherit\"\n                onClick={this.handleClose}\n              >\n                <Close />\n              </IconButton>\n            ]}\n          />\n        </Snackbar>\n      </>\n    );\n  }\n}\n\nexport function snackbar(status, message) {\n  openSnackbar(status, message);\n}\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  ArrowDownward,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default class StreamsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = {\n      toolbar: false,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: false,\n      draggable: false\n    };\n    this.icons = {\n      SortArrow: ArrowDownward,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  getIcons() {\n    return this.icons;\n  }\n\n  render() {\n    const { streams, columns } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer>\n            <MaterialTable\n              columns={columns}\n              data={streams}\n              options={this.getOptions()}\n              icons={this.getIcons()}\n            />\n          </TableContainer>\n        </Box>\n      </>\n    );\n  }\n}\n\nStreamsTable.propTypes = {\n  streams: PropTypes.arrayOf(PropTypes.instanceOf(StreamInfo)).isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      field: PropTypes.string.isRequired,\n      filtering: PropTypes.bool,\n      sorting: PropTypes.bool,\n      render: PropTypes.func,\n      align: PropTypes.string,\n      export: PropTypes.bool\n    })\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StreamsTable from \"./StreamsTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class StreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: []\n    };\n    this.dataSource = props.dataSource;\n    this.handleStreamsChange = this.handleStreamsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource\n      .getAllStreams()\n      .then(this.handleStreamsChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch streams: ${error.message}`);\n      });\n  }\n\n  handleStreamsChange(streams) {\n    this.setState({\n      streams\n    });\n  }\n\n  render() {\n    const { streams } = this.state;\n    const { columns } = this.props;\n    return <StreamsTable streams={streams} columns={columns} />;\n  }\n}\n\nStreamsTableWrapper.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      field: PropTypes.string.isRequired,\n      filtering: PropTypes.bool,\n      sorting: PropTypes.bool,\n      render: PropTypes.func,\n      align: PropTypes.string,\n      export: PropTypes.bool\n    })\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class StatusIndicator extends React.Component {\n  getStatusStyle() {\n    const { status } = this.props;\n    switch (status) {\n      case \"Online\":\n        return \"green statusIndicatorBody statusTextOnline \";\n      case \"Pending\":\n        return \"yellow statusIndicatorBody statusTextOnline\";\n      case \"Error\":\n        return \"red statusIndicatorBody statusTextOnline\";\n      default:\n        return \"lightGrey statusIndicatorBody statusTextOffline\";\n    }\n  }\n\n  render() {\n    const { status } = this.props;\n    return <div className={this.getStatusStyle()}>{status}</div>;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.oneOf([\"Online\", \"Offline\", \"Error\", \"Pending\"]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { Description } from \"@material-ui/icons\";\nimport { NavLink } from \"react-router-dom\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport StreamInfo from \"../../model/StreamInfo\";\n\nexport default function DetailsButton(props) {\n  const { navLinkInfo, tooltipTitle } = props;\n\n  return (\n    <>\n      <NavLink to={navLinkInfo}>\n        <Tooltip title={tooltipTitle}>\n          <IconButton>\n            <Description />\n          </IconButton>\n        </Tooltip>\n      </NavLink>\n    </>\n  );\n}\n\nDetailsButton.propTypes = {\n  navLinkInfo: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    state: PropTypes.oneOfType([\n      PropTypes.shape({\n        device: PropTypes.instanceOf(DeviceInfo)\n      }),\n      PropTypes.shape({\n        stream: PropTypes.instanceOf(StreamInfo)\n      })\n    ])\n  }).isRequired,\n  tooltipTitle: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StreamInfo from \"../model/StreamInfo\";\nimport DetailsButton from \"../general/Buttons/DetailsButton\";\n\nexport default function StreamDetailsButton(props) {\n  const { streamInfo } = props;\n\n  const navLinkInfo = {\n    pathname: `/Streams/Details/${streamInfo.id}`,\n    state: { stream: streamInfo }\n  };\n\n  return (\n    <>\n      <DetailsButton\n        navLinkInfo={navLinkInfo}\n        tooltipTitle=\"View Stream Details\"\n      />\n    </>\n  );\n}\n\nStreamDetailsButton.propTypes = {\n  streamInfo: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","export default class StreamStatisticsInfo {\n  constructor(id, time, window, link, send, receive) {\n    this.id = id;\n    this.time = time;\n    this.window = window;\n    this.link = link;\n    this.send = send;\n    this.receive = receive;\n  }\n}\n","export default class StreamStatsSendInfo {\n  constructor(sending) {\n    this.packets = sending.packets;\n    this.packetsLost = sending.packetsLost;\n    this.packetsDropped = sending.packetsDropped;\n    this.packetsRetransmitted = sending.packetsRetransmitted;\n    this.bytes = sending.bytes;\n    this.bytesDropped = sending.bytesDropped;\n    this.mbitRate = sending.mbitRate;\n  }\n}\n","export default class StreamStatsReceiveInfo {\n  constructor(receiving) {\n    this.packets = receiving.packets;\n    this.packetsLost = receiving.packetsLost;\n    this.packetsDropped = receiving.packetsDropped;\n    this.packetsRetransmitted = receiving.packetsRetransmitted;\n    this.packetsBelated = receiving.packetsBelated;\n    this.bytes = receiving.bytes;\n    this.bytesLost = receiving.bytesLost;\n    this.bytesDropped = receiving.bytesDropped;\n    this.mbitRate = receiving.mbitRate;\n  }\n}\n","export default class StreamStatsLinkInfo {\n  constructor(link) {\n    this.rtt = link.rtt;\n    this.bandwidth = link.bandwidth;\n    this.maxBandwidth = link.maxBandwidth;\n  }\n}\n","export default class StreamStatsWindowInfo {\n  constructor(window) {\n    this.flow = window.flow;\n    this.congestion = window.congestion;\n    this.flight = window.flight;\n  }\n}\n","import DeviceInfo from \"./DeviceInfo\";\nimport StreamStatisticsInfo from \"./StreamStatistics/StreamStatisticsInfo\";\nimport StreamStatsSendInfo from \"./StreamStatistics/StreamStatsSendInfo\";\nimport StreamStatsReceiveInfo from \"./StreamStatistics/StreamStatsReceiveInfo\";\nimport StreamStatsLinkInfo from \"./StreamStatistics/StreamStatsLinkInfo\";\nimport StreamStatsWindowInfo from \"./StreamStatistics/StreamStatsWindowInfo\";\n\nexport function convertDeviceToDataObject(databaseDevice) {\n  return new DeviceInfo(\n    databaseDevice.serialNumber,\n    databaseDevice.lastCommunication,\n    databaseDevice.device.publicIpAddress,\n    databaseDevice.device.privateIpAddress,\n    databaseDevice.device.displayName,\n    databaseDevice.device.status,\n    databaseDevice.inputs || databaseDevice.outputs,\n    databaseDevice.inputs ? \"receiver\" : \"sender\"\n  );\n}\n\nexport function convertStatsToDataObject(databaseStats) {\n  return new StreamStatisticsInfo(\n    databaseStats.id,\n    databaseStats.time,\n    new StreamStatsWindowInfo(databaseStats.window),\n    new StreamStatsLinkInfo(databaseStats.link),\n    new StreamStatsSendInfo(databaseStats.send),\n    new StreamStatsReceiveInfo(databaseStats.recv)\n  );\n}\n\nexport function convertToServiceObject(deviceInfo) {\n  const serviceObject = {\n    serialNumber: deviceInfo.serialNumber,\n    lastCommunication: deviceInfo.lastCommunication,\n    device: {\n      serialNumber: deviceInfo.serialNumber,\n      publicIpAddress: deviceInfo.publicIp,\n      privateIpAddress: deviceInfo.privateIp,\n      displayName: deviceInfo.name,\n      status: deviceInfo.status\n    }\n  };\n  if (deviceInfo.deviceType === \"sender\") {\n    serviceObject.outputs = deviceInfo.channels;\n  } else {\n    serviceObject.inputs = deviceInfo.channels;\n  }\n  return serviceObject;\n}\n","import axios from \"axios\";\nimport {\n  convertDeviceToDataObject,\n  convertStatsToDataObject\n} from \"../model/ConvertDataFormat\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nexport async function getStream(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAM}/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      const stream = response.data;\n      return new StreamInfo(\n        stream.id,\n        stream.startDate,\n        convertDeviceToDataObject(stream.outputChannel.encoder),\n        convertDeviceToDataObject(stream.inputChannel.decoder),\n        stream.outputChannel.channel.port,\n        stream.inputChannel.channel.port\n      );\n    });\n}\n\nexport async function getAllStreams() {\n  return axios\n    .get(process.env.REACT_APP_STREAM, getAuthorizationHeader())\n    .then((streams) => {\n      return Promise.all(\n        streams.data.map((streamId) => {\n          return getStream(streamId);\n        })\n      );\n    });\n}\n\nexport async function deleteStream(streamId) {\n  return axios.delete(\n    `${process.env.REACT_APP_STREAM}/${streamId}`,\n    getAuthorizationHeader()\n  );\n}\n\nexport async function createStream(selectedReceiverID, selectedSenderID) {\n  return axios.post(\n    process.env.REACT_APP_STREAM,\n    {\n      inputChannelId: selectedReceiverID,\n      outputChannelId: selectedSenderID\n    },\n    getAuthorizationHeader()\n  );\n}\n\nexport async function getStreamStatistics(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAM}/statistics/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      const stats = response.data;\n      return convertStatsToDataObject(stats);\n    });\n}\n","import React from \"react\";\nimport StreamsTableWrapper from \"./StreamsTableWrapper\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport StreamDetailsButton from \"./StreamDetailsButton\";\nimport * as streamDataSource from \"../api/StreamApi\";\n\nexport default class SimpleStreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.simpleColumns = [\n      {\n        title: \"Sender\",\n        field: \"sender.name\"\n      },\n      {\n        title: \"Receiver\",\n        field: \"receiver.name\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        }\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <StreamDetailsButton streamInfo={rowData} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n  }\n\n  render() {\n    return (\n      <StreamsTableWrapper\n        dataSource={streamDataSource}\n        columns={this.simpleColumns}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\nimport SimpleStreamsTableWrapper from \"../streamlist/SimpleStreamsTableWrapper\";\n\nexport default function ActiveStreamCard() {\n  return (\n    <DashboardCard title=\"Active Streams\" style={{ height: \"100%\" }}>\n      <Grid item xs={12}>\n        <SimpleStreamsTableWrapper />\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Streams\">See More</DashBoardButton>\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Streams/New\">Start Stream</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function ActivityLogCard() {\n  return (\n    <DashboardCard title=\"Activity Logs\">\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Logs\">View All</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashboardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function DevicesCard() {\n  return (\n    <DashboardCard title=\"Devices\">\n      <Grid item xs={4}>\n        <DashboardButton href=\"/Devices\" passedState={1}>\n          View Senders\n        </DashboardButton>\n      </Grid>\n      <Grid item xs={4}>\n        <DashboardButton href=\"/Devices\" passedState={2}>\n          View Receivers\n        </DashboardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function AdminPanelCard() {\n  return (\n    <DashboardCard title=\"Admin Panel\">\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Admin/New\">Create a User</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport GridColumn from \"../general/dashboard/GridColumn\";\nimport ActiveStreamCard from \"./ActiveStreamCard\";\nimport ActivityLogCard from \"./ActivityLogCard\";\nimport DevicesCard from \"./DevicesCard\";\nimport AdminPanelCard from \"./AdminPanelCard\";\n\nimport { isAdmin } from \"../api/AuthenticationUtil\";\n\nexport default function HomePageContents() {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"stretch\"\n      direction=\"row\"\n      spacing={3}\n    >\n      <Grid item xs={6}>\n        <Grid style={{ height: \"100%\" }}>\n          <ActiveStreamCard />\n        </Grid>\n      </Grid>\n      <GridColumn width={6}>\n        <Grid item xs={12}>\n          <DevicesCard />\n        </Grid>\n        <Grid item xs={12}>\n          <ActivityLogCard />\n        </Grid>\n        {isAdmin() ? (\n          <Grid item xs={12}>\n            <AdminPanelCard />\n          </Grid>\n        ) : (\n          <div />\n        )}\n      </GridColumn>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport HomePageContents from \"./HomePageContents\";\n\nexport default function HomePage() {\n  return (\n    <Page title=\"Dashboard\" breadcrumbs={[[\"Home\", \"\"]]}>\n      <HomePageContents />\n    </Page>\n  );\n}\n","export default class OutputChannelInfo {\n  constructor(id, name, port, encoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.encoder = encoder;\n  }\n}\n","export default class InputChannelInfo {\n  constructor(id, name, port, decoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.decoder = decoder;\n  }\n}\n","import axios from \"axios\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nfunction getStatus(lastCommunicationString) {\n  if (!lastCommunicationString) {\n    return \"Pending\";\n  }\n\n  const lastCommunicationDate = new Date(`${lastCommunicationString}Z`);\n  const diff = Date.now() - lastCommunicationDate.getTime();\n  const tenMinutes = 10 * 60 * 1000;\n  if (diff < tenMinutes) {\n    return \"Online\";\n  }\n  return \"Offline\";\n}\n\nexport async function getSenders() {\n  return axios\n    .get(process.env.REACT_APP_ENCODER, getAuthorizationHeader())\n    .then((senders) => {\n      return Promise.resolve(\n        senders.data.map((sender) => {\n          let channels = [];\n          if (sender.output) {\n            channels = sender.output.map((output) => {\n              return new OutputChannelInfo(\n                output.id,\n                output.channel.name,\n                output.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            sender.lastCommunication == null\n              ? \"Never\"\n              : sender.lastCommunication;\n          return new DeviceInfo(\n            sender.serialNumber,\n            lastCommunication,\n            sender.device.publicIpAddress,\n            sender.device.privateIpAddress,\n            sender.device.displayName,\n            getStatus(sender.lastCommunication),\n            channels,\n            \"encoder\",\n            sender.device.configurationInstance\n          );\n        })\n      );\n    });\n}\n\nexport async function getReceivers() {\n  return axios\n    .get(process.env.REACT_APP_DECODER, getAuthorizationHeader())\n    .then((receivers) => {\n      return Promise.resolve(\n        receivers.data.map((receiver) => {\n          let channels = [];\n          if (receiver.input) {\n            channels = receiver.input.map((input) => {\n              return new InputChannelInfo(\n                input.id,\n                input.channel.name,\n                input.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            receiver.lastCommunication == null\n              ? \"Never\"\n              : receiver.lastCommunication;\n          return new DeviceInfo(\n            receiver.serialNumber,\n            lastCommunication,\n            receiver.device.publicIpAddress,\n            receiver.device.privateIpAddress,\n            receiver.device.displayName,\n            getStatus(receiver.lastCommunication),\n            channels,\n            \"decoder\",\n            receiver.device.configurationInstance\n          );\n        })\n      );\n    });\n}\n\nexport function deleteDevice(deviceId) {\n  return axios.delete(\n    `${process.env.REACT_APP_DEVICE}/${deviceId}`,\n    getAuthorizationHeader()\n  );\n}\n\nexport async function updateDeviceName(deviceId, updatedName) {\n  return axios.put(\n    process.env.REACT_APP_DEVICE,\n    {\n      serialNumber: deviceId,\n      displayName: updatedName\n    },\n    getAuthorizationHeader()\n  );\n}\n\n// https://programmingwithmosh.com/javascript/react-file-upload-proper-server-side-nodejs-easy/\nexport async function uploadConfiguration(deviceId, configFile) {\n  const data = new FormData();\n  data.append(\"configuration\", configFile);\n  const headers = getAuthorizationHeader();\n  // eslint-disable-next-line\n  headers.headers[\"Content-Type\"] = `multipart/form-data; boundary=${data[\"_boundary\"]}` ;\n  return axios.put(\n    `${process.env.REACT_APP_DEVICE}/config/${deviceId}`,\n    data,\n    headers\n  );\n}\n","import { InputBase, withStyles } from \"@material-ui/core\";\n\nexport default withStyles({\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    fontWeight: 500,\n    letterSpacing: \"0.0075em\",\n    lineHeight: \"1.6\",\n    fontSize: \"1.25rem\",\n    padding: \"10px 26px 10px 12px\",\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  }\n})(InputBase);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MenuItem, Select } from \"@material-ui/core\";\nimport StyledInput from \"./StyledInput\";\n\nexport default class DeviceTableTitle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { handleChange } = this.props;\n    handleChange(event.target.value);\n  }\n\n  render() {\n    const { index } = this.props;\n    return (\n      <Select\n        id=\"device-table-title-select\"\n        value={index}\n        onChange={this.handleChange}\n        input={<StyledInput />}\n      >\n        <MenuItem value={0}>All Devices</MenuItem>\n        <MenuItem value={1}>Senders</MenuItem>\n        <MenuItem value={2}>Receivers</MenuItem>\n      </Select>\n    );\n  }\n}\n\nDeviceTableTitle.propTypes = {\n  index: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function ChannelDetailsTableHead() {\n  return (\n    <TableRow>\n      <TableCell className=\"lightGrey\">ID</TableCell>\n      <TableCell className=\"lightGrey\">Name</TableCell>\n      <TableCell className=\"lightGrey\">Port</TableCell>\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\n\nexport default function ChannelDetailsTableRow(props) {\n  const {\n    channel: { id, name, port }\n  } = props;\n  return (\n    <TableRow>\n      <TableCell>{id}</TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{port}</TableCell>\n    </TableRow>\n  );\n}\nChannelDetailsTableRow.propTypes = {\n  channel: PropTypes.oneOfType([\n    PropTypes.instanceOf(InputChannelInfo),\n    PropTypes.instanceOf(OutputChannelInfo)\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Table, TableBody, TableHead } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport ChannelDetailsTableHead from \"./ChannelDetailsTableHead\";\nimport ChannelDetailsTableRow from \"./ChannelDetailsTableRow\";\n\nexport default function ChannelDetailsTable(props) {\n  const { channels } = props;\n  return (\n    <Table className=\"flexContents\">\n      <TableHead>\n        <ChannelDetailsTableHead />\n      </TableHead>\n      <TableBody>\n        {channels.map((channel) => {\n          return (\n            <ChannelDetailsTableRow channel={channel} key={channel.name} />\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\nChannelDetailsTable.propTypes = {\n  channels: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.instanceOf(InputChannelInfo),\n      PropTypes.instanceOf(OutputChannelInfo)\n    ])\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DetailsButton from \"../general/Buttons/DetailsButton\";\n\nexport default function DeviceDetailsButton(props) {\n  const { deviceInfo } = props;\n\n  const navLinkInfo = {\n    pathname: `/Devices/Details/${deviceInfo.serialNumber}`,\n    state: { device: deviceInfo }\n  };\n\n  return (\n    <>\n      <DetailsButton\n        navLinkInfo={navLinkInfo}\n        tooltipTitle=\"View Device Details\"\n      />\n    </>\n  );\n}\n\nDeviceDetailsButton.propTypes = {\n  deviceInfo: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  FilterList,\n  Search,\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable, { MTableToolbar } from \"material-table\";\n\nimport ChannelDetailsTable from \"./ChannelDetailsTable\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeviceDetailsButton from \"./DeviceDetailsButton\";\n\nexport default class DevicesTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.components = {\n      /*  eslint-disable react/jsx-props-no-spreading */\n      Toolbar: function Components(passedProps) {\n        return (\n          <div className=\"lightestGrey\">\n            <MTableToolbar {...passedProps} />\n          </div>\n        );\n      }\n    };\n    this.columns = [\n      {\n        title: \"Name\",\n        field: \"name\"\n      },\n      {\n        title: \"Serial Number\",\n        field: \"serialNumber\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        },\n        lookup: {\n          Online: \"Online\",\n          Pending: \"Pending\",\n          Error: \"Error\",\n          Offline: \"Offline\"\n        }\n      },\n      {\n        title: \"Private IP Address\",\n        field: \"privateIp\"\n      },\n      {\n        title: \"Public IP Address\",\n        field: \"publicIp\"\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <DeviceDetailsButton deviceInfo={rowData} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n    this.detailPanel = [\n      {\n        icon: ExpandMore,\n        openIcon: ExpandLess,\n        tooltip: \"Show Channels\",\n        render: function DetailPanel(rowData) {\n          return (\n            <div className=\"lightestGrey\" style={{ padding: \"1.5em\" }}>\n              <Typography variant=\"h6\">Channels</Typography>\n              <ChannelDetailsTable channels={rowData.channels} />\n            </div>\n          );\n        }\n      }\n    ];\n    this.options = {\n      toolbar: true,\n      search: true,\n      exportButton: true,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: true,\n      draggable: false\n    };\n    this.icons = {\n      Filter: FilterList,\n      Search,\n      ResetSearch: Clear,\n      SortArrow: ArrowDownward,\n      Export: SaveAlt,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  render() {\n    const { title, devices } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer style={{ maxHeight: 570 }}>\n            <MaterialTable\n              title={title}\n              components={this.components}\n              columns={this.columns}\n              data={devices}\n              detailPanel={this.detailPanel}\n              options={this.options}\n              icons={this.icons}\n            />\n          </TableContainer>\n        </Box>\n      </>\n    );\n  }\n}\n\nDevicesTable.propTypes = {\n  title: PropTypes.node.isRequired,\n  devices: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { getSenders, getReceivers } from \"../api/DeviceApi\";\nimport DeviceTableTitle from \"./DeviceTableTitle\";\nimport DevicesTable from \"./DevicesTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class DeviceListPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 0,\n      senders: [],\n      receivers: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.getDevices = this.getDevices.bind(this);\n    this.getTitle = this.getTitle.bind(this);\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { selectedState } = this.props;\n    this.handleChange(selectedState.passedState);\n    getSenders()\n      .then(this.handleSendersChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch senders: ${error.message}`);\n      });\n    getReceivers()\n      .then(this.handleReceiversChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch receivers: ${error.message}`);\n      });\n  }\n\n  handleChange(value) {\n    this.setState({\n      selected: value\n    });\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  getDevices() {\n    const { receivers, senders, selected } = this.state;\n    switch (selected) {\n      case 1:\n        return senders;\n      case 2:\n        return receivers;\n      default:\n        return senders.concat(receivers);\n    }\n  }\n\n  getTitle() {\n    const { selected } = this.state;\n    return (\n      <DeviceTableTitle index={selected} handleChange={this.handleChange} />\n    );\n  }\n\n  render() {\n    return <DevicesTable devices={this.getDevices()} title={this.getTitle()} />;\n  }\n}\n\nDeviceListPageContents.defaultProps = {\n  selectedState: { passedState: 0 }\n};\n\nDeviceListPageContents.propTypes = {\n  selectedState: PropTypes.shape({\n    passedState: PropTypes.number\n  })\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Page from \"../general/Page\";\nimport DeviceListPageContents from \"./DeviceListPageContents\";\n\nexport default function DeviceListPage(props) {\n  const {\n    location: { state: passedState }\n  } = props;\n\n  const breadcrumb = [\n    [\"Home\", \"/Home\"],\n    [\"My Devices\", \"/Devices\"]\n  ];\n  return (\n    <Page title=\"My Devices\" breadcrumbs={breadcrumb} hasStreamButton>\n      <DeviceListPageContents selectedState={passedState} />\n    </Page>\n  );\n}\n\nDeviceListPage.defaultProps = {\n  location: { state: { passedState: 0 } }\n};\n\nDeviceListPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      passedState: PropTypes.number\n    })\n  })\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\nimport { Cancel, Save } from \"@material-ui/icons\";\n\nexport default function EditableName(props) {\n  const { confirmEditing, deviceName, setName, cancelEditing } = props;\n  return (\n    <form className=\"deviceNameEditForm\" onSubmit={confirmEditing}>\n      <Box className=\"flexContents\">\n        <TextField\n          id=\"deviceName\"\n          name=\"deviceName\"\n          required\n          defaultValue={deviceName}\n          onChange={(event) => setName(event.target.value)}\n        />\n        <div className=\"alignRightFloat\">\n          <IconButton id=\"cancelEditBtn\" size=\"small\" onClick={cancelEditing}>\n            <Cancel />\n          </IconButton>\n\n          <IconButton id=\"confirmEditBtn\" type=\"submit\" color=\"primary\">\n            <Save />\n          </IconButton>\n        </div>\n      </Box>\n    </form>\n  );\n}\n\nEditableName.propTypes = {\n  confirmEditing: PropTypes.func.isRequired,\n  deviceName: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired,\n  cancelEditing: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Edit } from \"@material-ui/icons\";\n\nexport default function StaticName(props) {\n  const { deviceName, startEditing } = props;\n  return (\n    <>\n      {deviceName}\n      <div className=\"alignRightFloat\">\n        <IconButton\n          id=\"editBtn\"\n          size=\"small\"\n          color=\"action\"\n          onClick={startEditing}\n        >\n          <Edit />\n        </IconButton>\n      </div>\n    </>\n  );\n}\n\nStaticName.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  startEditing: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport * as DeviceApi from \"../api/DeviceApi\";\nimport EditableName from \"./EditableName\";\nimport StaticName from \"./StaticName\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class DeviceName extends React.Component {\n  constructor(props) {\n    super(props);\n    this.deviceName = props.deviceName;\n    this.deviceId = props.deviceId;\n    this.state = {\n      editing: false,\n      name: this.deviceName\n    };\n\n    this.startEdit = this.startEdit.bind(this);\n    this.cancelEditing = this.cancelEditing.bind(this);\n    this.confirmEditing = this.confirmEditing.bind(this);\n    this.setName = this.setName.bind(this);\n  }\n\n  setName(updatedName) {\n    this.setState({ name: updatedName });\n  }\n\n  startEdit() {\n    this.setState({ editing: true });\n  }\n\n  cancelEditing() {\n    this.setState({ name: this.deviceName });\n    this.setState({ editing: false });\n  }\n\n  confirmEditing(event) {\n    event.preventDefault();\n    const { name: newName } = this.state;\n\n    const oldName = this.deviceName;\n    this.deviceName = newName;\n    this.setState({ editing: false });\n\n    DeviceApi.updateDeviceName(this.deviceId, newName)\n      .then(() => {\n        snackbar(\"success\", `Device successfully renamed to ${newName}`);\n      })\n      .catch(() => {\n        // If update was unsuccessful, return to the old name\n        this.deviceName = oldName;\n        this.forceUpdate();\n        snackbar(\"error\", `Failed to rename device`);\n      });\n  }\n\n  render() {\n    const { editing } = this.state;\n    return (\n      <>\n        {editing ? (\n          <EditableName\n            confirmEditing={this.confirmEditing}\n            deviceName={this.deviceName}\n            setName={this.setName}\n            cancelEditing={this.cancelEditing}\n          />\n        ) : (\n          <StaticName\n            deviceName={this.deviceName}\n            startEditing={this.startEdit}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nDeviceName.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  deviceId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\n\nimport { TableContainer, TableCell, TableRow } from \"@material-ui/core\";\nimport ChannelDetailsTable from \"../../devicelist/ChannelDetailsTable\";\nimport InputChannelInfo from \"../../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../../model/OutputChannelInfo\";\nimport StatusIndicator from \"../../general/StatusIndicator\";\nimport DeviceName from \"../DeviceName\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class DeviceInfoRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getPropertyDisplayName = this.getPropertyDisplayName.bind(this);\n    this.createInnerTable = this.createInnerTable.bind(this);\n    this.createTableCellContents = this.createTableCellContents.bind(this);\n  }\n\n  getPropertyDisplayName() {\n    const { name } = this.props;\n    switch (name) {\n      case \"serialNumber\":\n        return \"Serial Number\";\n      case \"lastCommunication\":\n        return \"Last Communication\";\n      case \"privateIp\":\n        return \"Private IP Address\";\n      case \"publicIp\":\n        return \"Public IP Address\";\n      case \"name\":\n        return \"Name\";\n      case \"status\":\n        return \"Status\";\n      case \"channels\":\n        return \"Channels\";\n      default:\n        return \"Additional Info\";\n    }\n  }\n\n  createInnerTable() {\n    const { value } = this.props;\n    return (\n      <TableContainer>\n        <ChannelDetailsTable channels={value} />\n      </TableContainer>\n    );\n  }\n\n  createTableCellContents() {\n    const {\n      name,\n      value,\n      device: { serialNumber }\n    } = this.props;\n    switch (name) {\n      case \"channels\":\n        return this.createInnerTable();\n      case \"status\":\n        return <StatusIndicator status={value} />;\n      case \"name\":\n        return <DeviceName deviceName={value} deviceId={serialNumber} />;\n      default:\n        return value;\n    }\n  }\n\n  render() {\n    return (\n      <TableRow>\n        <TableCell>{this.getPropertyDisplayName()}</TableCell>\n        <TableCell align=\"center\">{this.createTableCellContents()}</TableCell>\n      </TableRow>\n    );\n  }\n}\n\nDeviceInfoRow.propTypes = {\n  name: Proptypes.string.isRequired,\n  value: Proptypes.oneOfType([\n    Proptypes.string,\n    Proptypes.arrayOf(\n      Proptypes.oneOfType([InputChannelInfo, OutputChannelInfo])\n    )\n  ]).isRequired,\n  device: Proptypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { TableContainer, Table, TableBody } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfoRow from \"./DeviceInfoRow\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function DeviceInfoTable(props) {\n  const { device, properties } = props;\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          {properties.map((property) => (\n            <DeviceInfoRow\n              name={property}\n              value={device[property]}\n              device={device}\n              key={`device_${property}`}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nDeviceInfoTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  properties: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfoTable from \"./DeviceInfoTable/DeviceInfoTable\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function DeviceDetailsInfoTable(props) {\n  const { device } = props;\n  const properties = [\n    \"name\",\n    \"serialNumber\",\n    \"status\",\n    \"publicIp\",\n    \"privateIp\"\n  ];\n  return <DeviceInfoTable device={device} properties={properties} />;\n}\n\nDeviceDetailsInfoTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport DeviceDetailsInfoTable from \"../DeviceDetailsInfoTable\";\n\nexport default function DeviceInfoCard(props) {\n  const { device } = props;\n\n  return (\n    <DashboardCard title=\"Device Info\">\n      <Grid item xs={12}>\n        <DeviceDetailsInfoTable device={device} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceInfoCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","export default class LogInfo {\n  constructor(id, dateTime, level, message) {\n    this.id = id;\n    this.dateTime = dateTime;\n    this.level = level;\n    this.message = message;\n  }\n}\n","export default class StreamLogInfo {\n  constructor(dateTime, level, message) {\n    this.dateTime = dateTime;\n    this.level = level;\n    this.message = message;\n  }\n}\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {\n  Search,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\nimport MaterialTable from \"material-table\";\nimport LogInfo from \"../model/LogInfo\";\nimport StreamLogInfo from \"../model/StreamLogInfo\";\n\nexport default class LogsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = {\n      toolbar: true,\n      showTitle: false,\n      search: true,\n      exportButton: true,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: false,\n      draggable: false,\n      maxBodyHeight: \"auto\",\n      minBodyHeight: \"auto\"\n    };\n    this.icons = {\n      Search,\n      ResetSearch: Clear,\n      SortArrow: ArrowDownward,\n      Export: SaveAlt,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  getIcons() {\n    return this.icons;\n  }\n\n  render() {\n    const { columns, logs } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer>\n            <MaterialTable\n              columns={columns}\n              data={logs}\n              options={this.getOptions()}\n              icons={this.getIcons()}\n            />\n          </TableContainer>\n        </Box>\n      </>\n    );\n  }\n}\n\nLogsTable.propTypes = {\n  logs: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.instanceOf(LogInfo)),\n    PropTypes.arrayOf(PropTypes.instanceOf(StreamLogInfo))\n  ]).isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      field: PropTypes.string.isRequired,\n      sorting: PropTypes.bool,\n      cellStyle: PropTypes.shape({\n        width: PropTypes.string\n      })\n    })\n  ).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport LogsTable from \"../loglist/LogsTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class DeviceLogTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.columns = [\n      {\n        title: \"ID\",\n        field: \"id\"\n      },\n      {\n        title: \"Date\",\n        field: \"dateTime\",\n        defaultSort: \"desc\"\n      },\n      {\n        title: \"Level\",\n        field: \"level\"\n      },\n      {\n        title: \"Message\",\n        field: \"message\",\n        sorting: false\n      }\n    ];\n    this.dataSource = props.dataSource;\n    this.handleDeviceLogsChange = this.handleDeviceLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { device } = this.props;\n    this.dataSource\n      .getDeviceLogs(device.serialNumber)\n      .then(this.handleDeviceLogsChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch device logs: ${error.message}`);\n      });\n  }\n\n  handleDeviceLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} columns={this.columns} />;\n  }\n}\n\nDeviceLogTableWrapper.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import axios from \"axios\";\nimport LogInfo from \"../model/LogInfo\";\nimport StreamLogInfo from \"../model/StreamLogInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nasync function getLogs(endpoint) {\n  return axios.get(endpoint, getAuthorizationHeader()).then((response) => {\n    return Promise.resolve(\n      response.data.map((log) => {\n        return new LogInfo(log.id, log.dateTime, log.level, log.message);\n      })\n    );\n  });\n}\n\nexport async function getAllLogs() {\n  return getLogs(process.env.REACT_APP_LOG);\n}\n\nexport async function getDeviceLogs(deviceSerialNumber) {\n  return getLogs(`${process.env.REACT_APP_LOG}/${deviceSerialNumber}`);\n}\n\nexport async function getStreamLogs(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAMLOG}/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      return Promise.resolve(\n        response.data.map((log) => {\n          return new StreamLogInfo(\n            log.logEntity.dateTime,\n            log.logEntity.level,\n            log.logEntity.message\n          );\n        })\n      );\n    });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport DeviceLogTableWrapper from \"../DeviceLogTableWrapper\";\nimport * as deviceLogsDataSource from \"../../api/LogApi\";\n\nexport default function DeviceLogCard(props) {\n  const { device } = props;\n\n  return (\n    <DashboardCard title=\"Logs\">\n      <Grid item xs={12}>\n        <DeviceLogTableWrapper\n          dataSource={deviceLogsDataSource}\n          device={device}\n        />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceLogCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport ChannelDetailsTable from \"../../devicelist/ChannelDetailsTable\";\n\nexport default function DeviceChannelCard(props) {\n  const {\n    device: { channels }\n  } = props;\n\n  return (\n    <DashboardCard title=\"Channels\">\n      <Grid item xs={12}>\n        <ChannelDetailsTable channels={channels} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceChannelCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import DeviceInfo from \"../model/DeviceInfo\";\nimport OutChannelInfo from \"../model/OutputChannelInfo\";\nimport InChannelInfo from \"../model/InputChannelInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport LogInfo from \"../model/LogInfo\";\nimport { convertStatsToDataObject } from \"../model/ConvertDataFormat\";\n\nconst extras = [\"Additional Device details go here\"];\nconst sampleInputChannels = [\n  new InChannelInfo(1, \"Input ch 1\", 500, null),\n  new InChannelInfo(2, \"Input ch 2\", 456, null),\n  new InChannelInfo(3, \"Input ch 3\", 800, null)\n];\nconst sampleOutputChannels = [\n  new OutChannelInfo(1, \"Output ch 1\", 500, null),\n  new OutChannelInfo(2, \"Output ch 2\", 456, null),\n  new OutChannelInfo(3, \"Output ch 3\", 800, null)\n];\n\nexport function getSenders(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:30:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 3\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:40:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 4\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:50:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 5\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:60:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 6\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:70:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 7\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:80:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 8\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:90:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 9\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n\n  callback(sampleSenders);\n}\n\nexport function getSampleSender() {\n  return new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n}\n\nexport function getReceivers(callback) {\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:03:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 3\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:04:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 4\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:05:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 5\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:06:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 6\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:07:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 7\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:08:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 8\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:09:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 9\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:11:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 11\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:21:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 12\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:31:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 13\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:41:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 14\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:51:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 15\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:61:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 16\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:71:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 17\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:81:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 18\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:91:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 19\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  callback(sampleReceivers);\n}\n\nexport function getAllStreams() {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  return [\n    new StreamInfo(1, sampleSenders[0], sampleReceivers[0], 1, 2),\n    new StreamInfo(2, sampleSenders[1], sampleReceivers[1], 3, 4),\n    new StreamInfo(3, sampleSenders[1], sampleReceivers[0], 5, 6)\n  ];\n}\n\nexport function getSampleStream() {\n  const sampleSender = new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n\n  const sampleReceiver = new DeviceInfo(\n    \"1:22:333:989\",\n    null,\n    \"145:396\",\n    \"Receiver 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"decoder\",\n    extras\n  );\n\n  return new StreamInfo(\n    1,\n    sampleSender,\n    sampleReceiver,\n    sampleSender.channels[0].port,\n    sampleReceiver.channels[1].port\n  );\n}\n\nexport function getAllLogs(callback) {\n  const dates = [\n    \"2020-10-31T15:53:23\",\n    \"2020-11-13T12:36:30\",\n    \"2020-11-13T08:24:30\"\n  ];\n\n  const sampleLogs = [\n    new LogInfo(1, dates[0], \"Info\", \"Log 1 info\"),\n    new LogInfo(2, dates[1], \"Info\", \"Log 2 info\"),\n    new LogInfo(3, dates[2], \"Info\", \"Log 3 info\")\n  ];\n\n  callback(sampleLogs);\n}\n\nexport function getSampleStreamStats() {\n  const sampleDbStreamStats = {\n    id: 1,\n    time: 2,\n    window: {\n      flow: 31,\n      congestion: 32,\n      flight: 33\n    },\n    link: {\n      rtt: 41,\n      bandwidth: 42,\n      maxBandwidth: 43\n    },\n    send: {\n      packets: 51,\n      packetsLost: 52,\n      packetsDropped: 53,\n      packetsRetransmitted: 54,\n      bytes: 55,\n      bytesDropped: 56,\n      mbitRate: 57\n    },\n    recv: {\n      packets: 61,\n      packetsLost: 62,\n      packetsDropped: 63,\n      packetsRetransmitted: 64,\n      packetsBelated: 65,\n      bytes: 66,\n      bytesLost: 67,\n      bytesDropped: 68,\n      mbitRate: 69\n    }\n  };\n\n  return convertStatsToDataObject(sampleDbStreamStats);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../../general/dialog/Dialog\";\nimport { deleteDevice } from \"../../api/DeviceApi\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport { snackbar } from \"../../general/SnackbarMessage\";\n\nexport default class DeleteDeviceDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  confirmDelete() {\n    const {\n      device: { serialNumber },\n      history\n    } = this.props;\n    this.dialogElement.current.closeDialog();\n    deleteDevice(serialNumber)\n      .then(() => {\n        history.push(\"/Devices\");\n        snackbar(\"success\", `Device deleted! (Serial Number: ${serialNumber})`);\n      })\n      .catch(() => {\n        snackbar(\n          \"error\",\n          `Could not delete device (Serial Number: ${serialNumber})`\n        );\n      });\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { device } = this.props;\n    const title = \"Confirm Delete\";\n    const message = `Are you sure you want to delete ${device.name}?`;\n\n    const actionButton = {\n      name: \"Confirm\",\n      onClick: this.confirmDelete\n    };\n\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        {message}\n      </Dialog>\n    );\n  }\n}\n\nDeleteDeviceDialog.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withRouter } from \"react-router-dom\";\nimport DeleteDeviceDialog from \"./DeleteDeviceDialog\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nclass DeleteDeviceDialogOpener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { device, history } = this.props;\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={<DeleteIcon />}\n          onClick={this.openDialog}\n        >\n          Delete\n        </Button>\n        <DeleteDeviceDialog\n          ref={this.dialogElement}\n          device={device}\n          history={history}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(DeleteDeviceDialogOpener);\n\nDeleteDeviceDialogOpener.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"@material-ui/core\";\n\nimport Dialog from \"../../general/dialog/Dialog\";\n\nimport { uploadConfiguration } from \"../../api/DeviceApi\";\nimport { snackbar } from \"../../general/SnackbarMessage\";\n\nexport default class UploadConfigDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null\n    };\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      file: event.target.files[0]\n    });\n  }\n\n  handleUpload() {\n    const { deviceId } = this.props;\n    const { file } = this.state;\n    uploadConfiguration(deviceId, file)\n      .then(() => {\n        snackbar(\"success\", \"Successfully uploaded configuration\");\n      })\n      .catch(() => {\n        snackbar(\"error\", \"Upload failed\");\n      })\n      .finally(() => {\n        this.dialogElement.current.closeDialog();\n      });\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const title = \"Upload a file\";\n    const actionButton = {\n      name: \"Upload\",\n      onClick: this.handleUpload\n    };\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        <Input\n          type=\"file\"\n          name=\"file\"\n          disableUnderline\n          onChange={this.handleChange}\n        />\n      </Dialog>\n    );\n  }\n}\n\nUploadConfigDialog.propTypes = {\n  deviceId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { CloudUpload } from \"@material-ui/icons\";\n\nimport UploadConfigDialog from \"./UploadConfigDialog\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class UploadConfigDialogOpenButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const {\n      device: { serialNumber }\n    } = this.props;\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<CloudUpload />}\n          onClick={this.openDialog}\n        >\n          Upload New\n        </Button>\n\n        <UploadConfigDialog ref={this.dialogElement} deviceId={serialNumber} />\n      </>\n    );\n  }\n}\n\nUploadConfigDialogOpenButton.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { GetApp } from \"@material-ui/icons\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class DownloadConfigButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.handleDownload = this.handleDownload.bind(this);\n  }\n\n  handleDownload() {\n    const { device } = this.props;\n    if (!device.extras) return;\n    const filename = `${device.serialNumber}.config`;\n    const element = document.createElement(\"a\");\n    element.setAttribute(\n      \"href\",\n      `data:text/plain;charset=utf-8,${atob(device.extras)}`\n    );\n    element.setAttribute(\"download\", filename);\n\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  }\n\n  render() {\n    const { device } = this.props;\n    return (\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={this.handleDownload}\n        startIcon={<GetApp />}\n        disabled={!device.extras}\n      >\n        Download\n      </Button>\n    );\n  }\n}\n\nDownloadConfigButton.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport UploadConfigDialogOpenButton from \"../configuration/UploadConfigDialogOpenButton\";\nimport DownloadConfigButton from \"../configuration/DownloadConfigButton\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function DeviceConfigActionsCard(props) {\n  const { device } = props;\n  return (\n    <DashboardCard title=\"Configuration\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <UploadConfigDialogOpenButton device={device} />\n        </Grid>\n        <Grid item xs={4}>\n          <DownloadConfigButton device={device} />\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceConfigActionsCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, Box, Container } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeviceInfoCard from \"./cards/DeviceInfoCard\";\nimport DeviceLogCard from \"./cards/DeviceLogCard\";\nimport DeviceChannelCard from \"./cards/DeviceChannelCard\";\n\nimport { getSampleSender } from \"../api/SampleData\";\nimport GridColumn from \"../general/dashboard/GridColumn\";\nimport DeleteDeviceDialogOpener from \"./DeleteDeviceDialog/DeleteDeviceDialogOpener\";\nimport DeviceConfigActionsCard from \"./cards/DeviceConfigActionsCard\";\n\nexport default function DeviceDetailsPageContents(props) {\n  const { device } = props;\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <GridColumn width={6}>\n          <Grid item xs={12}>\n            <DeviceInfoCard device={device} />\n          </Grid>\n          <Grid item xs={12}>\n            <DeviceChannelCard device={device} />\n          </Grid>\n          <Grid item xs={12}>\n            <DeviceConfigActionsCard device={device} />\n          </Grid>\n        </GridColumn>\n        <Grid item xs={6}>\n          <DeviceLogCard device={device} />\n        </Grid>\n      </Grid>\n      <Box className=\"alignRightFloatPadded\">\n        <DeleteDeviceDialogOpener device={device} />\n      </Box>\n    </Container>\n  );\n}\nDeviceDetailsPageContents.defaultProps = {\n  device: getSampleSender()\n};\n\nDeviceDetailsPageContents.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo)\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Page from \"../general/Page\";\nimport DeviceDetailsPageContents from \"./DeviceDetailsPageContents\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport { getSampleSender } from \"../api/SampleData\";\n\nexport default function DeviceDetailsPage(props) {\n  const {\n    location: {\n      state: { device }\n    }\n  } = props;\n\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"My Devices\", \"/Devices\"],\n    [\"Device Details\", `/Devices/Details/${device.serialNumber}`, { device }]\n  ];\n\n  return (\n    <Page title=\"Device Details\" breadcrumbs={breadcrumbs}>\n      <DeviceDetailsPageContents device={device} />\n    </Page>\n  );\n}\n\nDeviceDetailsPage.defaultProps = {\n  location: { state: { device: getSampleSender() } }\n};\n\nDeviceDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      device: PropTypes.instanceOf(DeviceInfo)\n    })\n  })\n};\n","import React from \"react\";\nimport StreamsTableWrapper from \"./StreamsTableWrapper\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport StreamDetailsButton from \"./StreamDetailsButton\";\nimport * as streamDataSource from \"../api/StreamApi\";\n\nexport default class DetailedStreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.detailedColumns = [\n      {\n        title: \"ID\",\n        field: \"id\"\n      },\n      {\n        title: \"Date\",\n        field: \"date\"\n      },\n      {\n        title: \"Sender\",\n        field: \"sender.name\"\n      },\n      {\n        title: \"Receiver\",\n        field: \"receiver.name\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        }\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <StreamDetailsButton streamInfo={rowData} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n  }\n\n  render() {\n    return (\n      <StreamsTableWrapper\n        dataSource={streamDataSource}\n        columns={this.detailedColumns}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport DetailedStreamsTableWrapper from \"./DetailedStreamsTableWrapper\";\n\nexport default function StreamListPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"]\n  ];\n  return (\n    <Page title=\"Active Streams\" breadcrumbs={breadcrumbs} hasStreamButton>\n      <DetailedStreamsTableWrapper />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\n\nexport default class SelectTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleListItemClick = this.handleListItemClick.bind(this);\n  }\n\n  handleListItemClick(index) {\n    const { setIndex } = this.props;\n    setIndex(index);\n  }\n\n  render() {\n    const { selectedIndex, items } = this.props;\n    return (\n      <List>\n        {items.map((item, index) => {\n          return (\n            <ListItem\n              button\n              key={item}\n              selected={selectedIndex === index}\n              onClick={() => this.handleListItemClick(index)}\n            >\n              <ListItemText primary={item} />\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n}\n\nSelectTable.propTypes = {\n  selectedIndex: PropTypes.number.isRequired,\n  setIndex: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectTable from \"./SelectTable\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function SelectDeviceTable(props) {\n  const { selectedIndex, setIndex, deviceList } = props;\n\n  const deviceNames = deviceList.map((device) => device.name);\n  return (\n    <SelectTable\n      selectedIndex={selectedIndex}\n      setIndex={setIndex}\n      items={deviceNames}\n    />\n  );\n}\n\nSelectDeviceTable.propTypes = {\n  selectedIndex: PropTypes.number.isRequired,\n  setIndex: PropTypes.func.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectTable from \"./SelectTable\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function SelectChannelTable(props) {\n  const { selectedIndex, setIndex, deviceList, deviceIndex } = props;\n\n  const channelNames = deviceList[deviceIndex].channels.map(\n    (channel) => channel.name\n  );\n  return (\n    <SelectTable\n      selectedIndex={selectedIndex}\n      setIndex={setIndex}\n      items={channelNames}\n    />\n  );\n}\n\nSelectChannelTable.propTypes = {\n  selectedIndex: PropTypes.number.isRequired,\n  setIndex: PropTypes.func.isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function SimpleTableRow(props) {\n  const { name, value, alignment } = props;\n\n  return (\n    <>\n      <TableRow>\n        <TableCell>{name}</TableCell>\n        <TableCell align={alignment}>{value}</TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nSimpleTableRow.defaultProps = {\n  alignment: \"left\"\n};\n\nSimpleTableRow.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.node.isRequired,\n  alignment: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TableBody, Table, TableContainer } from \"@material-ui/core\";\nimport SimpleTableRow from \"./SimpleTableRow\";\n\nexport default function SimpleTable(props) {\n  const { properties, alignment } = props;\n\n  const propertiesArr = Object.keys(properties).map((propertyName) => {\n    return [propertyName, properties[propertyName]];\n  });\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          {propertiesArr.map((propertyPair) => (\n            <SimpleTableRow\n              name={propertyPair[0]}\n              value={propertyPair[1]}\n              alignment={alignment}\n              key={`component_${propertyPair[0]}`}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nSimpleTable.defaultProps = {\n  alignment: \"left\"\n};\nSimpleTable.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.node).isRequired,\n  alignment: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DashboardCard from \"./dashboard/DashboardCard\";\nimport SimpleTable from \"./simpleTable/SimpleTable\";\nimport ButtonInfo from \"./dashboard/ButtonInfo\";\n\nexport default function StreamDeviceCard(props) {\n  const { title, button, device, channel } = props;\n  const properties = {\n    Name: device.name,\n    \"Serial Number\": device.serialNumber,\n    Channel: channel\n  };\n\n  return (\n    <DashboardCard title={title} button={button}>\n      <Grid item xs={12}>\n        <SimpleTable properties={properties} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nStreamDeviceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  button: PropTypes.instanceOf(ButtonInfo),\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  channel: PropTypes.number.isRequired\n};\n\nStreamDeviceCard.defaultProps = {\n  button: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\n\nexport default function StepperNextButton(props) {\n  const { disabled, isLast, handleNext, handleClose } = props;\n\n  const buttonText = isLast ? \"Confirm\" : \"Next\";\n\n  const handleClick = isLast ? handleClose : handleNext;\n\n  return (\n    <Button size=\"small\" onClick={handleClick} disabled={disabled}>\n      {buttonText}\n      <KeyboardArrowRight />\n    </Button>\n  );\n}\n\nStepperNextButton.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { Close, KeyboardArrowLeft } from \"@material-ui/icons\";\n\nexport default function StepperBackButton(props) {\n  const { isFirst, handleBack, handleClose } = props;\n\n  let handleClick = handleBack;\n  let icon = <KeyboardArrowLeft />;\n  let buttonText = \"Back\";\n\n  if (isFirst) {\n    handleClick = handleClose;\n    buttonText = \"Cancel\";\n    icon = <Close />;\n  }\n\n  return (\n    <Button size=\"small\" onClick={handleClick}>\n      {icon}\n      {buttonText}\n    </Button>\n  );\n}\n\nStepperBackButton.propTypes = {\n  isFirst: PropTypes.bool.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SwipeableViews from \"react-swipeable-views\";\nimport { DialogTitle, MobileStepper } from \"@material-ui/core\";\nimport SelectDeviceTable from \"../SelectDeviceDialog/SelectDeviceTable\";\nimport SelectChannelTable from \"../SelectDeviceDialog/SelectChannelTable\";\nimport StreamDeviceCard from \"../../general/StreamDeviceCard\";\n\nimport StepperNextButton from \"./StepperNextButton\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport StepperBackButton from \"./StepperBackButton\";\nimport \"./swipeable.css\";\n\nexport default class SelectDeviceSwipeableSteps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeStep: 0\n    };\n\n    this.steps = [`Select a Device`, `Select a Channel`, `Confirm Device`];\n    this.handleNext = this.handleNext.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n    this.getNextButton = this.getNextButton.bind(this);\n    this.getBackButton = this.getBackButton.bind(this);\n  }\n\n  handleNext() {\n    const { activeStep: previousStep } = this.state;\n    this.setState({\n      activeStep: previousStep + 1\n    });\n  }\n\n  handleBack() {\n    const { activeStep: previousStep } = this.state;\n    this.setState({\n      activeStep: previousStep - 1\n    });\n  }\n\n  getNextButton() {\n    const { handleClose } = this.props;\n    const { activeStep } = this.state;\n    const maxSteps = this.steps.length;\n\n    return (\n      <StepperNextButton\n        disabled={this.disableNext()}\n        isLast={activeStep === maxSteps - 1}\n        handleClose={handleClose}\n        handleNext={this.handleNext}\n      />\n    );\n  }\n\n  getBackButton() {\n    const { handleClose } = this.props;\n    const { activeStep } = this.state;\n\n    return (\n      <StepperBackButton\n        isFirst={activeStep === 0}\n        handleClose={handleClose}\n        handleBack={this.handleBack}\n      />\n    );\n  }\n\n  disableNext() {\n    const { activeStep } = this.state;\n    const { deviceIndex, channelIndex } = this.props;\n    switch (activeStep) {\n      case 0:\n        return deviceIndex === -1;\n      case 1:\n        return channelIndex === -1;\n      default:\n        return false;\n    }\n  }\n\n  render() {\n    const {\n      deviceList,\n      deviceIndex,\n      setDeviceIndex,\n      channelIndex,\n      setChannelIndex\n    } = this.props;\n    const { activeStep } = this.state;\n    const maxSteps = this.steps.length;\n\n    return (\n      <>\n        <DialogTitle>{this.steps[activeStep]}</DialogTitle>\n        <SwipeableViews\n          className=\"halfScreenVertically\"\n          axis=\"x\"\n          index={activeStep}\n          enableMouseEvents\n        >\n          <SelectDeviceTable\n            selectedIndex={deviceIndex}\n            setIndex={setDeviceIndex}\n            deviceList={deviceList}\n          />\n          {deviceIndex === -1 ? (\n            <></>\n          ) : (\n            <SelectChannelTable\n              selectedIndex={channelIndex}\n              setIndex={setChannelIndex}\n              deviceIndex={deviceIndex}\n              deviceList={deviceList}\n            />\n          )}\n          {deviceIndex === -1 || channelIndex === -1 ? (\n            <></>\n          ) : (\n            <StreamDeviceCard\n              title=\"Preview\"\n              device={deviceList[deviceIndex]}\n              channel={deviceList[deviceIndex].channels[channelIndex].port}\n            />\n          )}\n        </SwipeableViews>\n        <MobileStepper\n          steps={maxSteps}\n          position=\"static\"\n          variant=\"text\"\n          activeStep={activeStep}\n          nextButton={this.getNextButton()}\n          backButton={this.getBackButton()}\n        />\n      </>\n    );\n  }\n}\n\nSelectDeviceSwipeableSteps.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  setDeviceIndex: PropTypes.func.isRequired,\n  channelIndex: PropTypes.number.isRequired,\n  setChannelIndex: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport SelectDeviceSwipeableSteps from \"../SwipeableSteps/SelectDeviceSwipeableSteps\";\n\nexport default class SelectDeviceDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.openDialog = this.openDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.setState({ open: true });\n  }\n\n  closeDialog() {\n    return this.setState({ open: false });\n  }\n\n  render() {\n    const { open } = this.state;\n    const {\n      deviceList,\n      deviceIndex,\n      setDeviceIndex,\n      channelIndex,\n      setChannelIndex\n    } = this.props;\n\n    return (\n      <Dialog\n        open={open}\n        fullWidth\n        maxWidth=\"sm\"\n        onClose={this.closeDialog}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n        id=\"dialog\"\n      >\n        <SelectDeviceSwipeableSteps\n          handleClose={this.closeDialog}\n          deviceList={deviceList}\n          deviceIndex={deviceIndex}\n          setDeviceIndex={setDeviceIndex}\n          channelIndex={channelIndex}\n          setChannelIndex={setChannelIndex}\n        />\n      </Dialog>\n    );\n  }\n}\n\nSelectDeviceDialog.propTypes = {\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  setDeviceIndex: PropTypes.func.isRequired,\n  channelIndex: PropTypes.number.isRequired,\n  setChannelIndex: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ButtonInfo from \"../../general/dashboard/ButtonInfo\";\nimport StreamDeviceCard from \"../../general/StreamDeviceCard\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function SelectedDeviceCard(props) {\n  const { title, openDialog, device, channelId } = props;\n  const button = new ButtonInfo(\"\", device, \"Edit\", openDialog);\n\n  return (\n    <StreamDeviceCard\n      title={title}\n      button={button}\n      device={device}\n      channel={channelId}\n    />\n  );\n}\n\nSelectedDeviceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  openDialog: PropTypes.func.isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  channelId: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\n\nexport default function UnselectedDeviceCard(props) {\n  const { title, onClick } = props;\n\n  return (\n    <DashboardCard title={title}>\n      <Grid item xs={4}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n          {`Select ${title}`}\n        </Button>\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nUnselectedDeviceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SelectedDeviceCard from \"./SelectedDeviceCard\";\nimport UnselectedDeviceCard from \"./UnselectedDeviceCard\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function CreateStreamCardToggler(props) {\n  const { title, openDialog, deviceIndex, deviceList, channelIndex } = props;\n  if (deviceIndex !== -1 && channelIndex !== -1) {\n    return (\n      <SelectedDeviceCard\n        title={title}\n        openDialog={openDialog}\n        device={deviceList[deviceIndex]}\n        channelId={deviceList[deviceIndex].channels[channelIndex].port}\n      />\n    );\n  }\n  return <UnselectedDeviceCard title={title} onClick={openDialog} />;\n}\n\nCreateStreamCardToggler.propTypes = {\n  title: PropTypes.string.isRequired,\n  openDialog: PropTypes.func.isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  channelIndex: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport SelectDeviceDialog from \"./SelectDeviceDialog/SelectDeviceDialog\";\nimport CreateStreamCardToggler from \"./cards/CreateStreamCardToggler\";\n\nexport default class CreateStreamDeviceCardWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const {\n      title,\n      deviceList,\n      deviceIndex,\n      setDeviceIndex,\n      channelIndex,\n      setChannelIndex\n    } = this.props;\n\n    return (\n      <>\n        <CreateStreamCardToggler\n          title={title}\n          openDialog={this.openDialog}\n          deviceIndex={deviceIndex}\n          deviceList={deviceList}\n          channelIndex={channelIndex}\n        />\n        <SelectDeviceDialog\n          ref={this.dialogElement}\n          deviceList={deviceList}\n          deviceIndex={deviceIndex}\n          setDeviceIndex={setDeviceIndex}\n          channelIndex={channelIndex}\n          setChannelIndex={setChannelIndex}\n        />\n      </>\n    );\n  }\n}\n\nCreateStreamDeviceCardWrapper.propTypes = {\n  title: PropTypes.string.isRequired,\n  deviceList: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  deviceIndex: PropTypes.number.isRequired,\n  setDeviceIndex: PropTypes.func.isRequired,\n  channelIndex: PropTypes.number.isRequired,\n  setChannelIndex: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { Forward } from \"@material-ui/icons\";\n\nimport CreateStreamDeviceCardWrapper from \"./CreateStreamDeviceCardWrapper\";\nimport { getSenders, getReceivers } from \"../api/DeviceApi\";\nimport { createStream } from \"../api/StreamApi\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class CreateStreamPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      senders: [],\n      receivers: [],\n      senderDeviceIndex: -1,\n      senderChannelIndex: -1,\n      receiverDeviceIndex: -1,\n      receiverChannelIndex: -1\n    };\n\n    this.createStream = this.createStream.bind(this);\n    this.setSenders = this.setSenders.bind(this);\n    this.setReceivers = this.setReceivers.bind(this);\n    this.setSenderDeviceIndex = this.setSenderDeviceIndex.bind(this);\n    this.setReceiverDeviceIndex = this.setReceiverDeviceIndex.bind(this);\n    this.setSenderChannelIndex = this.setSenderChannelIndex.bind(this);\n    this.setReceiverChannelIndex = this.setReceiverChannelIndex.bind(this);\n  }\n\n  componentDidMount() {\n    getSenders().then(this.setSenders);\n    getReceivers().then(this.setReceivers);\n  }\n\n  setSenders(value) {\n    this.setState({\n      senders: value\n    });\n  }\n\n  setReceivers(value) {\n    this.setState({\n      receivers: value\n    });\n  }\n\n  setSenderDeviceIndex(value) {\n    this.setState({\n      senderDeviceIndex: value,\n      senderChannelIndex: -1\n    });\n  }\n\n  setReceiverDeviceIndex(value) {\n    this.setState({\n      receiverDeviceIndex: value,\n      receiverChannelIndex: -1\n    });\n  }\n\n  setSenderChannelIndex(value) {\n    this.setState({\n      senderChannelIndex: value\n    });\n  }\n\n  setReceiverChannelIndex(value) {\n    this.setState({\n      receiverChannelIndex: value\n    });\n  }\n\n  createStream() {\n    const {\n      senders,\n      receivers,\n      senderDeviceIndex,\n      senderChannelIndex,\n      receiverDeviceIndex,\n      receiverChannelIndex\n    } = this.state;\n\n    const receiver = receivers[receiverDeviceIndex];\n    const sender = senders[senderDeviceIndex];\n\n    if (receiver && sender) {\n      const recieverChannel = receiver.channels[receiverChannelIndex];\n      const senderChannel = sender.channels[senderChannelIndex];\n      if (recieverChannel && senderChannel)\n        createStream(recieverChannel.id, senderChannel.id)\n          .then(() => {\n            snackbar(\"success\", `Successfully created stream!`);\n          })\n          .catch(() => {\n            snackbar(\"error\", `Failed to create stream`);\n          });\n    }\n  }\n\n  render() {\n    const {\n      senders,\n      receivers,\n      senderDeviceIndex,\n      senderChannelIndex,\n      receiverDeviceIndex,\n      receiverChannelIndex\n    } = this.state;\n\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"stretch\"\n        direction=\"row\"\n        spacing={3}\n      >\n        <Grid item xs={5} style={{ margin: \"auto\" }}>\n          <CreateStreamDeviceCardWrapper\n            title=\"Sender\"\n            deviceList={senders}\n            deviceIndex={senderDeviceIndex}\n            setDeviceIndex={this.setSenderDeviceIndex}\n            channelIndex={senderChannelIndex}\n            setChannelIndex={this.setSenderChannelIndex}\n          />\n        </Grid>\n        <Grid item xs={2} style={{ margin: \"auto\", textAlign: \"center\" }}>\n          <Forward style={{ fontSize: 100 }} />\n        </Grid>\n        <Grid item xs={5} style={{ margin: \"auto\" }}>\n          <CreateStreamDeviceCardWrapper\n            title=\"Receiver\"\n            deviceList={receivers}\n            deviceIndex={receiverDeviceIndex}\n            setDeviceIndex={this.setReceiverDeviceIndex}\n            channelIndex={receiverChannelIndex}\n            setChannelIndex={this.setReceiverChannelIndex}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.createStream}\n          >\n            Create Stream\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport CreateStreamPageContents from \"./CreateStreamPageContents\";\n\nexport default function CreateStreamPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [\"New Stream\", \"/Streams/New\"]\n  ];\n  return (\n    <Page title=\"Create a Stream\" breadcrumbs={breadcrumbs}>\n      <CreateStreamPageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LogsTable from \"./LogsTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class LogsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.columns = [\n      {\n        title: \"ID\",\n        field: \"id\",\n        cellStyle: { width: \"5%\" }\n      },\n      {\n        title: \"Date\",\n        field: \"dateTime\",\n        defaultSort: \"desc\",\n        cellStyle: { width: \"15%\" }\n      },\n      {\n        title: \"Level\",\n        field: \"level\",\n        cellStyle: { width: \"10%\" }\n      },\n      {\n        title: \"Message\",\n        field: \"message\",\n        sorting: false\n      }\n    ];\n    this.logsDataSource = props.logsDataSource;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.logsDataSource\n      .getAllLogs()\n      .then(this.handleLogsChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch logs: ${error.message}`);\n      });\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} columns={this.columns} />;\n  }\n}\n\nLogsTableWrapper.propTypes = {\n  logsDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\n\nimport LogsTableWrapper from \"./LogsTableWrapper\";\nimport Page from \"../general/Page\";\nimport * as logsDataSource from \"../api/LogApi\";\n\nexport default function LogListPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Logs\", \"/Logs\"]\n  ];\n\n  return (\n    <Page title=\"Logs\" breadcrumbs={breadcrumbs}>\n      <LogsTableWrapper logsDataSource={logsDataSource} />\n    </Page>\n  );\n}\n","import axios from \"axios\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nexport async function createUser(credentials) {\n  return axios.post(\n    process.env.REACT_APP_SIGNUP,\n    {\n      username: credentials.username,\n      password: credentials.password,\n      userRole: \"USER\"\n    },\n    getAuthorizationHeader()\n  );\n}\n","import React from \"react\";\nimport FormConsole from \"../../general/userForm/FormConsole\";\nimport { createUser } from \"../../api/UserManagementApi\";\nimport { snackbar } from \"../../general/SnackbarMessage\";\n\nfunction handleSubmit(username, password) {\n  createUser({ username, password })\n    .then(() => {\n      snackbar(\"success\", `User ${username} successfully created!`);\n    })\n    .catch((error) => {\n      snackbar(\"error\", `Failed to create user: ${error.message}`);\n    });\n}\n\nexport default class CreateUserPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = handleSubmit;\n  }\n\n  render() {\n    return (\n      <>\n        <FormConsole\n          handleSubmit={this.handleSubmit}\n          buttonName=\"Create\"\n          isValidate\n          passwordError={{ upperbound: 5, lowerbound: 0 }}\n          passwordInputProps={{ maxLength: 20, minLength: 5 }}\n          passwordHelperText=\"Password must be between 5 to 20 characters\"\n        />\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nimport Page from \"../../general/Page\";\nimport CreateUserPageContents from \"./CreateUserPageContents\";\n\nexport default function CreateUserPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Admin\"],\n    [\"Create a User\", \"/Admin/New\"]\n  ];\n\n  return (\n    <Page title=\"Create a User\" breadcrumbs={breadcrumbs}>\n      <CreateUserPageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StreamDeviceCard from \"../general/StreamDeviceCard\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport ButtonInfo from \"../general/dashboard/ButtonInfo\";\n\nexport default function StreamDetailsDeviceCard(props) {\n  const { cardTitle, device, channel } = props;\n  const button = new ButtonInfo(\n    `/Devices/Details/${device.serialNumber}`,\n    { device },\n    \"View Device\"\n  );\n\n  return (\n    <StreamDeviceCard\n      title={cardTitle}\n      button={button}\n      device={device}\n      channel={channel}\n    />\n  );\n}\n\nStreamDetailsDeviceCard.propTypes = {\n  cardTitle: PropTypes.string.isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  channel: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../general/dialog/Dialog\";\nimport { deleteStream } from \"../api/StreamApi\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class DeleteStreamDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  confirmDelete() {\n    const { deleteId, history } = this.props;\n    this.dialogElement.current.closeDialog();\n    deleteStream(deleteId)\n      .then(() => {\n        history.push(\"/Streams\");\n        snackbar(\"success\", `Stream successfully deleted!`);\n      })\n      .catch(() => {\n        snackbar(\"error\", `Failed to delete stream`);\n      });\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId } = this.props;\n    const title = \"Confirm Delete\";\n    const message = `Are you sure you want to end stream ${deleteId}?`;\n\n    const actionButton = {\n      name: \"Confirm\",\n      onClick: this.confirmDelete\n    };\n\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        {message}\n      </Dialog>\n    );\n  }\n}\n\nDeleteStreamDialog.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Tooltip } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withRouter } from \"react-router-dom\";\n\nimport DeleteStreamDialog from \"./DeleteStreamDialog\";\n\nclass DeleteStreamDialogOpener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId, history } = this.props;\n    return (\n      <>\n        <Tooltip title=\"Delete Stream\" aria-label=\"delete stream\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<DeleteIcon />}\n            onClick={this.openDialog}\n          >\n            Delete\n          </Button>\n        </Tooltip>\n        <DeleteStreamDialog\n          ref={this.dialogElement}\n          deleteId={deleteId}\n          history={history}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(DeleteStreamDialogOpener);\n\nDeleteStreamDialogOpener.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport SimpleTable from \"../general/simpleTable/SimpleTable\";\nimport { getStreamStatistics } from \"../api/StreamApi\";\nimport { snackbar } from \"../general/SnackbarMessage\";\nimport ButtonInfo from \"../general/dashboard/ButtonInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default class StreamStatisticsCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stats: null\n    };\n    this.stream = props.stream;\n    this.handleStatsChange = this.handleStatsChange.bind(this);\n    this.getProperties = this.getProperties.bind(this);\n    this.getButton = this.getButton.bind(this);\n  }\n\n  componentDidMount() {\n    getStreamStatistics(this.stream.id)\n      .then(this.handleStatsChange)\n      .catch((error) => {\n        snackbar(\n          \"error\",\n          `Failed to fetch stream statistics: ${error.message}`\n        );\n      });\n  }\n\n  handleStatsChange(stats) {\n    this.setState({\n      stats\n    });\n  }\n\n  getProperties() {\n    const { stats } = this.state;\n    if (!stats) return {};\n    return {\n      Time: stats.time,\n      \"Round-Trip-Time\": stats.link.rtt,\n      \"Packets Retransmitted\": stats.send.packetsRetransmitted,\n      \"Packets Dropped\": stats.send.packetsDropped\n    };\n  }\n\n  getButton() {\n    const { stats } = this.state;\n    const { stream } = this.props;\n    if (!stats) return null;\n    return new ButtonInfo(\n      `/Streams/Details/${stream.id}/Statistics`,\n      { statistics: stats, stream },\n      \"More Statistics\"\n    );\n  }\n\n  render() {\n    return (\n      <DashboardCard title=\"Statistics\" button={this.getButton()}>\n        <Grid item xs={12}>\n          <SimpleTable properties={this.getProperties()} />\n        </Grid>\n      </DashboardCard>\n    );\n  }\n}\n\nStreamStatisticsCard.propTypes = {\n  stream: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LogsTable from \"../loglist/LogsTable\";\nimport { snackbar } from \"../general/SnackbarMessage\";\n\nexport default class StreamLogTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.columns = [\n      {\n        title: \"Date\",\n        field: \"dateTime\",\n        defaultSort: \"desc\"\n      },\n      {\n        title: \"Level\",\n        field: \"level\"\n      },\n      {\n        title: \"Message\",\n        field: \"message\",\n        sorting: false\n      }\n    ];\n    this.dataSource = props.dataSource;\n    this.handleStreamLogsChange = this.handleStreamLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { streamId } = this.props;\n    this.dataSource\n      .getStreamLogs(streamId)\n      .then(this.handleStreamLogsChange)\n      .catch((error) => {\n        snackbar(\"error\", `Failed to fetch stream logs: ${error.message}`);\n      });\n  }\n\n  handleStreamLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} columns={this.columns} />;\n  }\n}\n\nStreamLogTableWrapper.propTypes = {\n  streamId: PropTypes.number.isRequired,\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport StreamLogTableWrapper from \"../StreamLogTableWrapper\";\nimport * as streamLogsDataSource from \"../../api/LogApi\";\n\nexport default function StreamLogCard(props) {\n  const { streamId } = props;\n\n  return (\n    <DashboardCard title=\"Logs\">\n      <Grid item xs={12}>\n        <StreamLogTableWrapper\n          dataSource={streamLogsDataSource}\n          streamId={streamId}\n        />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nStreamLogCard.propTypes = {\n  streamId: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Container, Grid } from \"@material-ui/core\";\n\nimport StreamInfo from \"../model/StreamInfo\";\nimport StreamDetailsDeviceCard from \"./StreamDetailsDeviceCard\";\nimport DeleteStreamDialogOpener from \"./DeleteStreamDialogOpener\";\nimport StreamStatisticsCard from \"./StreamStatisticsCard\";\nimport StreamLogCard from \"./cards/StreamLogCard\";\n\nexport default function StreamDetailsPageContents(props) {\n  const { stream } = props;\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <StreamDetailsDeviceCard\n            cardTitle=\"Sender Details\"\n            device={stream.sender}\n            channel={stream.outputChannel}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <StreamDetailsDeviceCard\n            cardTitle=\"Receiver Details\"\n            device={stream.receiver}\n            channel={stream.inputChannel}\n          />\n        </Grid>\n        <Grid item xs={7}>\n          <StreamLogCard streamId={stream.id} />\n        </Grid>\n        <Grid item xs={5}>\n          <StreamStatisticsCard stream={stream} />\n        </Grid>\n      </Grid>\n      <Box className=\"alignRightFloatPadded\">\n        <DeleteStreamDialogOpener deleteId={stream.id} />\n      </Box>\n    </Container>\n  );\n}\n\nStreamDetailsPageContents.propTypes = {\n  stream: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StreamInfo from \"../model/StreamInfo\";\nimport StreamDetailsPageContents from \"./StreamDetailsPageContents\";\nimport Page from \"../general/Page\";\n\nexport default function StreamDetailsPage(props) {\n  const {\n    location: {\n      state: { stream }\n    }\n  } = props;\n\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [`Stream Details`, `/Streams/Details/${stream.id}`, { stream }]\n  ];\n\n  return (\n    <Page title=\"Stream Details\" breadcrumbs={breadcrumbs}>\n      <StreamDetailsPageContents stream={stream} />\n    </Page>\n  );\n}\n\nStreamDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      stream: PropTypes.instanceOf(StreamInfo)\n    })\n  }).isRequired\n};\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport DashboardButton from \"./dashboard/DashboardButton\";\nimport DashboardCard from \"./dashboard/DashboardCard\";\nimport Page from \"./Page\";\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\n\nexport default function PathNotFoundPage() {\n  return (\n    <Page title=\"Error 404: Path not found\" breadcrumbs={[]}>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={6}>\n          <DashboardCard title=\"Sorry, that page doesn't exist!\">\n            {isAuthenticated() ? (\n              <DashboardButton href=\"/Home\">Go Home</DashboardButton>\n            ) : (\n              <DashboardButton href=\"/Login\">Go to Login</DashboardButton>\n            )}\n          </DashboardCard>\n        </Grid>\n      </Grid>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport StreamStatisticsInfo from \"../../model/StreamStatistics/StreamStatisticsInfo\";\nimport SimpleTable from \"../../general/simpleTable/SimpleTable\";\n\nexport default function StatisticsOverviewCard(props) {\n  const { stats } = props;\n\n  const properties = {\n    \"Stream ID\": stats.id,\n    Time: stats.time,\n    Flow: stats.window.flow,\n    Congestion: stats.window.congestion,\n    Flight: stats.window.flight,\n    Latency: stats.link.rtt,\n    Bandwidth: stats.link.bandwidth,\n    \"Maximum Bandwidth\": stats.link.maxBandwidth\n  };\n\n  return (\n    <DashboardCard title=\"Overview\">\n      <Grid item xs={12}>\n        <SimpleTable properties={properties} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nStatisticsOverviewCard.propTypes = {\n  stats: PropTypes.instanceOf(StreamStatisticsInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport StreamStatisticsInfo from \"../../model/StreamStatistics/StreamStatisticsInfo\";\nimport SimpleTable from \"../../general/simpleTable/SimpleTable\";\n\nexport default function StatisticsSendingCard(props) {\n  const { stats } = props;\n\n  const properties = {\n    Packets: stats.send.packets,\n    \"Packets Lost\": stats.send.packetsLost,\n    \"Packets Dropped\": stats.send.packetsDropped,\n    \"Packets Retransmitted\": stats.send.packetsRetransmitted,\n    Bytes: stats.send.bytes,\n    \"Bytes Dropped\": stats.send.bytesDropped,\n    \"Bitrate (Mbps)\": stats.send.mbitRate\n  };\n\n  return (\n    <>\n      <DashboardCard title=\"Sending Statistics\">\n        <Grid item xs={12}>\n          <SimpleTable properties={properties} />\n        </Grid>\n      </DashboardCard>\n    </>\n  );\n}\n\nStatisticsSendingCard.propTypes = {\n  stats: PropTypes.instanceOf(StreamStatisticsInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport StreamStatisticsInfo from \"../../model/StreamStatistics/StreamStatisticsInfo\";\nimport SimpleTable from \"../../general/simpleTable/SimpleTable\";\n\nexport default function StatisticsReceivingCard(props) {\n  const { stats } = props;\n\n  const properties = {\n    Packets: stats.receive.packets,\n    \"Packets Lost\": stats.receive.packetsLost,\n    \"Packets Dropped\": stats.receive.packetsDropped,\n    \"Packets Retransmitted\": stats.receive.packetsRetransmitted,\n    \"Packets Belated\": stats.receive.packetsBelated,\n    Bytes: stats.receive.bytes,\n    \"Bytes Lost\": stats.receive.bytesLost,\n    \"Bytes Dropped\": stats.receive.bytesDropped,\n    \"Bitrate (Mbps)\": stats.receive.mbitRate\n  };\n\n  return (\n    <DashboardCard title=\"Receiving Statistics\">\n      <Grid item xs={12}>\n        <SimpleTable properties={properties} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nStatisticsReceivingCard.propTypes = {\n  stats: PropTypes.instanceOf(StreamStatisticsInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport StreamStatisticsInfo from \"../../model/StreamStatistics/StreamStatisticsInfo\";\nimport StatisticsOverviewCard from \"./StatisticsOverviewCard\";\nimport StatisticsSendingCard from \"./StatisticsSendingCard\";\nimport StatisticsReceivingCard from \"./StatisticsReceivingCard\";\n\nexport default function StreamStatisticsPageContents(props) {\n  const { statistics } = props;\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={4}>\n        <StatisticsOverviewCard stats={statistics} />\n      </Grid>\n      <Grid item xs={4}>\n        <StatisticsSendingCard stats={statistics} />\n      </Grid>\n      <Grid item xs={4}>\n        <StatisticsReceivingCard stats={statistics} />\n      </Grid>\n    </Grid>\n  );\n}\n\nStreamStatisticsPageContents.propTypes = {\n  statistics: PropTypes.instanceOf(StreamStatisticsInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StreamStatisticsInfo from \"../../model/StreamStatistics/StreamStatisticsInfo\";\nimport Page from \"../../general/Page\";\nimport StreamStatisticsPageContents from \"./StreamStatisticsPageContents\";\nimport StreamInfo from \"../../model/StreamInfo\";\n\nexport default function StreamStatisticsPage(props) {\n  const {\n    location: {\n      state: { statistics, stream }\n    }\n  } = props;\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [\"Stream Details\", `/Streams/Details/${stream.id}`, { stream }],\n    [\n      \"Statistics\",\n      `/Streams/Details/${stream.id}/Statistics`,\n      { statistics, stream }\n    ]\n  ];\n\n  return (\n    <Page title=\"Stream Statistics\" breadcrumbs={breadcrumbs}>\n      <StreamStatisticsPageContents statistics={statistics} />\n    </Page>\n  );\n}\n\nStreamStatisticsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      statistics: PropTypes.instanceOf(StreamStatisticsInfo),\n      stream: PropTypes.instanceOf(StreamInfo).isRequired\n    })\n  }).isRequired\n};\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport ProtectedRoute from \"./ProtectedRoute\";\n\nimport LoginPage from \"../login/LoginPage\";\nimport HomePage from \"../homepage/HomePage\";\nimport DeviceListPage from \"../devicelist/DeviceListPage\";\nimport DeviceDetailsPage from \"../deviceDetailsPage/DeviceDetailsPage\";\nimport StreamListPage from \"../streamlist/StreamListPage\";\nimport CreateStreamPage from \"../createStream/CreateStreamPage\";\nimport LogListPage from \"../loglist/LogListPage\";\nimport CreateUserPage from \"../admin/createUser/CreateUserPage\";\nimport StreamDetailsPage from \"../streamDetails/StreamDetailsPage\";\nimport PathNotFoundPage from \"../general/PathNotFoundPage\";\nimport StreamStatisticsPage from \"../streamDetails/DetailedStreamStatistics/StreamStatisticsPage\";\nimport SnackbarMessage from \"../general/SnackbarMessage\";\n\nexport default function AppRouter() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <ProtectedRoute path=\"/Login\" render={() => <LoginPage />} />\n        <ProtectedRoute\n          path=\"/Home\"\n          authenticationRequired\n          render={() => {\n            return <HomePage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Devices/Details/:serialNumber\"\n          authenticationRequired\n          render={(location) => {\n            return <DeviceDetailsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Devices\"\n          authenticationRequired\n          render={(location) => {\n            return <DeviceListPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/New\"\n          authenticationRequired\n          render={() => {\n            return <CreateStreamPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/Details/:streamId/Statistics\"\n          authenticationRequired\n          render={(location) => {\n            return <StreamStatisticsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/Details/:streamId\"\n          authenticationRequired\n          render={(location) => {\n            return <StreamDetailsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams\"\n          authenticationRequired\n          render={() => {\n            return <StreamListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Logs\"\n          authenticationRequired\n          render={() => {\n            return <LogListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Admin/New\"\n          authenticationRequired\n          render={() => {\n            return <CreateUserPage />;\n          }}\n        />\n        <Route path=\"/\">\n          <PathNotFoundPage />\n        </Route>\n      </Switch>\n      <SnackbarMessage />\n    </BrowserRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppRouter from \"./app/AppRouter\";\n\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n"],"sourceRoot":""}