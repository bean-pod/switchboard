{"version":3,"sources":["api/AuthenticationUtil.js","app/ProtectedRoute.jsx","general/DynamicBreadcrumb.jsx","general/Buttons/StreamButton.jsx","general/TitleButtons.jsx","general/Title.jsx","api/AuthenticationApi.js","general/HeaderBar.jsx","general/Page.jsx","login/LoginFailedDialog.jsx","login/LoginConsole.jsx","login/LoginPageContents.jsx","login/LoginPage.jsx","general/dashboard/GridColumn.jsx","general/dashboard/ButtonInfo.js","general/dashboard/SmallCardButton.jsx","general/dashboard/DashboardCard.jsx","general/dashboard/DashboardButton.jsx","general/StatusIndicator.jsx","model/StreamInfo.js","streamlist/StreamDetailsButton.jsx","streamlist/StreamsTable.jsx","model/DeviceInfo.js","model/OutputChannelInfo.js","model/InputChannelInfo.js","model/LogInfo.js","api/SampleData.js","streamlist/StreamsTableWrapper.jsx","model/StreamStatistics/StreamStatisticsInfo.js","model/StreamStatistics/StreamStatsSendInfo.js","model/StreamStatistics/StreamStatsReceiveInfo.js","model/StreamStatistics/StreamStatsLinkInfo.js","model/StreamStatistics/StreamStatsWindowInfo.js","model/ConvertDataFormat.js","api/StreamApi.js","homepage/ActiveStreamCard.jsx","homepage/ActivityLogCard.jsx","homepage/DevicesCard.jsx","homepage/AdminPanelCard.jsx","homepage/HomePageContents.jsx","homepage/HomePage.jsx","api/DeviceApi.js","devicelist/StyledInput.jsx","devicelist/DeviceTableTitle.jsx","devicelist/ChannelDetailsTableHead.jsx","devicelist/ChannelDetailsTableRow.jsx","devicelist/ChannelDetailsTable.jsx","general/Buttons/DeleteDeviceButton.jsx","devicelist/ActionMenu.jsx","devicelist/DevicesTable.jsx","devicelist/DeviceListPageContents.jsx","devicelist/DeviceListPage.jsx","deviceDetailsPage/EditableName.jsx","deviceDetailsPage/StaticName.jsx","deviceDetailsPage/DeviceName.jsx","deviceDetailsPage/DeviceInfoTable/DeviceInfoRow.jsx","deviceDetailsPage/DeviceInfoTable/DeviceInfoTable.jsx","deviceDetailsPage/DeviceDetailsInfoTable.jsx","deviceDetailsPage/cards/DeviceInfoCard.jsx","loglist/LogsTable.jsx","api/LogApi.js","deviceDetailsPage/DeviceLogTableWrapper.jsx","deviceDetailsPage/cards/DeviceLogCard.jsx","deviceDetailsPage/cards/DeviceChannelCard.jsx","general/dialog/DialogBody.jsx","general/dialog/DialogButtons.jsx","general/dialog/Dialog.jsx","deviceDetailsPage/DeleteDeviceDialog/DeleteDeviceDialog.jsx","deviceDetailsPage/DeleteDeviceDialog/DeleteDeviceDialogOpener.jsx","deviceDetailsPage/configuration/UploadConfigDialog.jsx","deviceDetailsPage/configuration/UploadConfigDialogOpenButton.jsx","deviceDetailsPage/configuration/DownloadConfigButton.jsx","deviceDetailsPage/cards/DeviceConfigActionsCard.jsx","deviceDetailsPage/DeviceDetailsPageContents.jsx","deviceDetailsPage/DeviceDetailsPage.jsx","streamlist/StreamListPage.jsx","createStream/SearchBar.jsx","createStream/SelectDeviceTableRow.jsx","createStream/SelectDevicesTable.jsx","createStream/StreamingTable.jsx","createStream/CreateStreamPage.jsx","loglist/LogsTableWrapper.jsx","loglist/LogListPage.jsx","general/userForm/FormFailedDialog.jsx","api/UserManagementApi.js","general/userForm/FormConsole.jsx","admin/createUser/CreateUserFormConsole.jsx","admin/createUser/CreateUserPageContents.jsx","admin/createUser/CreateUserPage.jsx","general/simpleTable/SimpleTableRow.jsx","general/simpleTable/SimpleTable.jsx","streamDetails/StreamDeviceDetailsCard.jsx","streamDetails/DeleteStreamDialog.jsx","streamDetails/DeleteStreamDialogOpener.jsx","streamDetails/StreamDetailsPageContents.jsx","streamDetails/StreamDetailsPage.jsx","general/PathNotFoundPage.jsx","app/AppRouter.jsx","index.jsx"],"names":["parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","component","charCodeAt","toString","slice","join","JSON","parse","saveToken","tokenPayload","expiryDate","Date","exp","Cookies","set","expires","SameSite","getAuthorizationHeader","get","headers","Authorization","isAuthenticated","isAdmin","role","ProtectedRoute","props","bind","location","this","authenticationRequired","render","authenticated","to","pathname","path","exact","React","Component","defaultProps","DynamicBreadcrumb","breadcrumbs","Box","padding","Breadcrumbs","aria-label","id","crumb","i","Link","color","href","Typography","StreamButton","type","StyledButton","withStyles","root","background","borderRadius","border","height","margin","label","textTransform","Button","className","SwapHoriz","TitleButtons","activeClassName","Title","title","deviceList","unknownErrorMessage","incorrectCredentialsMessage","credentials","a","authorizationHeader","auth","username","password","axios","process","then","response","AuthenticationUtil","authorization","catch","error","message","status","Promise","reject","Error","HeaderBar","classes","makeStyles","theme","menuButton","marginRight","spacing","handleLogout","history","remove","push","AppBar","position","Toolbar","IconButton","edge","Home","disabled","onClick","AccountCircle","withRouter","Page","children","Container","useStyles","LoginFailedDialog","open","setOpen","closeDialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","paper","marginTop","display","flexDirection","alignItems","form","width","submit","LoginConsole","handleSubmit","useState","setUsername","setPassword","maxWidth","noValidate","onSubmit","event","preventDefault","TextField","variant","required","fullWidth","name","autoComplete","autoFocus","onChange","target","value","LoginPageContents","state","dialogOpen","dialogMessage","setDialogOpen","setDialogMessage","logIn","setState","LoginPage","useHistory","GridColumn","Grid","item","xs","container","ButtonInfo","referenceObject","buttonText","SmallCardButton","button","size","DashboardCard","Paper","elevation","gutterBottom","justify","direction","DashboardButton","minWidth","undefined","StatusIndicator","getStatusStyle","StreamInfo","sender","receiver","outputChannel","inputChannel","date","time","StreamDetailsButton","streamInfo","stream","Description","StreamsTable","columnInfo","field","rowData","filtering","sorting","align","export","options","toolbar","headerStyle","backgroundColor","fontWeight","draggable","icons","SortArrow","ArrowDownward","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","streams","TableContainer","columns","getColumnInfo","data","getOptions","getIcons","concat","Intl","DateTimeFormat","resolvedOptions","timeZone","DeviceInfo","serial","lastCommunication","publicIpAddress","privateIpAddress","displayName","channels","deviceType","extras","serialNumber","publicIp","privateIp","OutputChannelInfo","port","encoder","InputChannelInfo","decoder","LogInfo","dateTime","level","sampleInputChannels","InChannelInfo","sampleOutputChannels","OutChannelInfo","getSampleSender","getAllLogs","callback","dates","StreamsTableWrapper","dataSource","handleStreamsChange","getAllStreams","sampleSenders","sampleReceivers","StreamStatisticsInfo","window","link","send","receive","StreamStatsSendInfo","sending","packets","packetsLost","packetsDropped","packetsRetransmitted","bytes","bytesDropped","mbitRate","StreamStatsReceiveInfo","receiving","packetsBelated","bytesLost","StreamStatsLinkInfo","rtt","bandwidth","maxBandwidth","StreamStatsWindowInfo","flow","congestion","flight","convertDeviceToDataObject","databaseDevice","device","inputs","outputs","convertStatsToDataObject","databaseStats","recv","getStream","streamId","channel","all","deleteStream","delete","createStream","selectedReceiverID","selectedSenderID","post","inputChannelId","outputChannelId","getStreamStatistics","ActiveStreamCard","StreamApi","style","ActivityLogCard","DevicesCard","AdminPanelCard","HomePageContents","HomePage","getStatus","lastCommunicationString","lastCommunicationDate","now","getTime","getSenders","senders","output","SampleData","getReceivers","receivers","input","deleteDevice","deviceId","updatedName","put","resolve","letterSpacing","lineHeight","fontSize","borderColor","boxShadow","InputBase","DeviceTableTitle","handleChange","index","Select","StyledInput","MenuItem","ChannelDetailsTableHead","TableRow","TableCell","ChannelDetailsTableRow","ChannelDetailsTable","Table","TableHead","TableBody","renderDeleteButton","openDeleteDialog","renderDeleteMenuItem","DeleteDeviceButton","deleteId","cancelDelete","aria-labelledby","aria-describedby","DeviceApi","endsWith","go","ActionMenu","anchorElement","setAnchorElement","handleClick","handleClose","currentTarget","element","aria-controls","aria-haspopup","MoreVert","Menu","anchorEl","keepMounted","Boolean","anchorOrigin","horizontal","vertical","transformOrigin","DevicesTable","devices","maxHeight","components","lookup","Online","Pending","Offline","detailPanel","icon","ExpandMore","openIcon","ExpandLess","tooltip","search","exportButton","Filter","FilterList","Search","ResetSearch","Clear","Export","SaveAlt","DeviceListPageContents","selected","handleSendersChange","handleReceiversChange","getDevices","getTitle","DeviceListPage","EditableName","confirmEditing","deviceName","setName","cancelEditing","defaultValue","Cancel","Save","StaticName","startEditing","Edit","DeviceName","editing","startEdit","newName","oldName","forceUpdate","DeviceInfoRow","getPropertyDisplayName","createInnerTable","createTableCellContents","DeviceInfoTable","properties","property","DeviceDetailsInfoTable","DeviceInfoCard","bodyHeight","showTitle","maxBodyHeight","minBodyHeight","LogsTable","logs","cellStyle","getLogs","endpoint","log","getDeviceLogs","deviceSerialNumber","DeviceLogTableWrapper","handleLogsChange","LogApi","DeviceLogCard","DeviceChannelCard","DialogBody","DialogButtons","button1","button2","Dialog","openDialog","actionButton","isError","DeleteDeviceDialog","dialogElement","createRef","afterDelete","confirmDelete","current","ref","DeleteDeviceDialogOpener","startIcon","UploadConfigDialog","file","afterUpload","handleUpload","files","uploadConfiguration","Input","disableUnderline","UploadConfigDialogOpenButton","CloudUpload","DownloadConfigButton","handleDownload","configuration","GetApp","DeviceConfigActionsCard","DeviceDetailsPageContents","DeviceDetailsPage","StreamListPage","streamDataSource","SearchBar","right","marginLeft","breakpoints","up","searchIcon","pointerEvents","justifyContent","inputRoot","placeholder","InputProps","startAdornment","InputAdornment","SelectDeviceTableRow","deviceDetails","ListItem","dense","ListItemText","primary","Collapse","in","timeout","unmountOnExit","List","disablePadding","divider","secondary","SelectDevicesTable","overflow","StreamingTable","onSenderSelected","onReceiverSelected","selectedSender","selectedReceiver","alignContent","CreateStreamPage","LogsTableWrapper","logsDataSource","LogListPage","FormFailedDialog","errorMessage","userRole","FormConsole","passwordErrorCondition","setPasswordError","passwordOnChange","passwordError","length","upperbound","lowerbound","buttonName","isValidate","passwordInputProps","passwordHelperText","inputProps","helperText","CreateUserFormConsole","maxLength","minLength","CreateUserPageContents","createUser","CreateUserPage","SimpleTableRow","alignment","SimpleTable","propertiesArr","Object","keys","propertyName","propertyPair","StreamDeviceDetailsCard","cardTitle","Name","Channel","DeleteStreamDialog","DeleteStreamDialogOpener","Tooltip","StreamDetailsPageContents","StreamDetailsPage","PathNotFoundPage","AppRouter","sampleSender","sampleReceiver","ReactDOM","document","getElementById"],"mappings":"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YwT,EAAZ,MAG9B,OAFaxT,KAAK0T,MAAQD,EAAsBE,UAC7B,IAEV,SAEF,UAGF,SAASC,GAAWpE,GACzBnL,IACG9D,IAAI+D,qDAA+BhE,KACnCiE,MAAK,SAACsP,GACLrE,EACEqE,EAAQvG,KAAKlO,KAAI,SAAC6L,GAChB,IAAImD,EAAW,GACXnD,EAAO6I,SACT1F,EAAWnD,EAAO6I,OAAO1U,KAAI,SAAC0U,GAC5B,OAAO,IAAIpF,GACToF,EAAO5R,GACP4R,EAAO1B,QAAQ1J,KACfoL,EAAO1B,QAAQzD,KACf,UAIN,IAAMX,EACwB,MAA5B/C,EAAO+C,kBACH,QACA/C,EAAO+C,kBACb,OAAO,IAAIF,GACT7C,EAAOsD,aACPP,EACA/C,EAAO2G,OAAO3D,gBACdhD,EAAO2G,OAAO1D,iBACdjD,EAAO2G,OAAOzD,YACdoF,GAAUtI,EAAO+C,mBACjBI,EACA,UACA,CAAC,6CAKRzJ,OAAM,YftCJ,SAAoB6K,GAuGzBA,EAtGsB,CACpB,IAAI1B,GACF,eACA,KACA,gBACA,UACA,WACA,SACAsB,GACA,UACAd,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,QACAsB,GACA,UACAd,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,UACAsB,GACA,UACAd,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,UACAsB,GACA,UACAd,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,SACAsB,GACA,UACAd,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,QACAsB,GACA,UACAd,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,UACAsB,GACA,UACAd,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,UACAsB,GACA,UACAd,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,SACAsB,GACA,UACAd,Me5DAyF,CAAsBvE,MAIrB,SAASwE,GAAaxE,GAC3BnL,IACG9D,IAAI+D,qDAA+BhE,KACnCiE,MAAK,SAAC0P,GACLzE,EACEyE,EAAU3G,KAAKlO,KAAI,SAAC8L,GAClB,IAAIkD,EAAW,GACXlD,EAASgJ,QACX9F,EAAWlD,EAASgJ,MAAM9U,KAAI,SAAC8U,GAC7B,OAAO,IAAIrF,GACTqF,EAAMhS,GACNgS,EAAM9B,QAAQ1J,KACdwL,EAAM9B,QAAQzD,KACd,UAIN,IAAMX,EAC0B,MAA9B9C,EAAS8C,kBACL,QACA9C,EAAS8C,kBACf,OAAO,IAAIF,GACT5C,EAASqD,aACTP,EACA9C,EAAS0G,OAAO3D,gBAChB/C,EAAS0G,OAAO1D,iBAChBhD,EAAS0G,OAAOzD,YAChBoF,GAAUrI,EAAS8C,mBACnBI,EACA,UACA,CAAC,6CAKRzJ,OAAM,YfyCJ,SAAsB6K,GA0M3BA,EAzMwB,CACtB,IAAI1B,GACF,eACA,KACA,gBACA,UACA,aACA,SACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,QACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,SACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,QACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,SACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,SACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,QACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACAoB,GACA,UAC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","file":"static/js/main.61f401ed.chunk.js","sourcesContent":["import Cookies from \"js-cookie\";\n\nfunction parseJwt(token) {\n  const base64Url = token.split(\".\")[1];\n  const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  const jsonPayload = decodeURIComponent(\n    atob(base64)\n      .split(\"\")\n      .map((c) => {\n        const component = `00${c.charCodeAt(0).toString(16)}`;\n        return `%${component.slice(-2)}`;\n      })\n      .join(\"\")\n  );\n\n  return JSON.parse(jsonPayload);\n}\n\nexport function saveToken(token) {\n  const tokenPayload = parseJwt(token.split(\" \")[1]);\n  const expiryDate = new Date(tokenPayload.exp * 1000);\n  Cookies.set(\"authToken\", token, { expires: expiryDate, SameSite: \"Strict\" });\n}\n\nexport function getAuthorizationHeader() {\n  const token = Cookies.get(\"authToken\");\n  return {\n    headers: { Authorization: `${token}` }\n  };\n}\n\nexport function isAuthenticated() {\n  return !!Cookies.get(\"authToken\");\n}\n\nexport function isAdmin() {\n  const token = Cookies.get(\"authToken\");\n  const tokenPayload = parseJwt(token.split(\" \")[1]);\n  return tokenPayload.role === \"ADMIN\" || tokenPayload.role === \"SUPERUSER\";\n}\n\nexport default {\n  saveToken,\n  getAuthorizationHeader\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\n\nexport default class ProtectedRoute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.component = this.component.bind(this);\n  }\n\n  component(location) {\n    const { authenticationRequired, render } = this.props;\n    const authenticated = isAuthenticated();\n\n    if (authenticationRequired) {\n      if (authenticated) {\n        return render(location);\n      }\n\n      return <Redirect to={{ pathname: \"/Login\" }} />;\n    }\n\n    if (authenticated) {\n      return <Redirect to={{ pathname: \"/Home\" }} />;\n    }\n\n    return render(location);\n  }\n\n  render() {\n    const { path } = this.props;\n    return (\n      <Route\n        exact\n        path={path}\n        render={({ location }) => this.component(location)}\n      />\n    );\n  }\n}\n\nProtectedRoute.propTypes = {\n  path: PropTypes.string.isRequired,\n  authenticationRequired: PropTypes.bool,\n  render: PropTypes.func.isRequired\n};\n\nProtectedRoute.defaultProps = {\n  authenticationRequired: false\n};\n","import React from \"react\";\nimport { Box, Breadcrumbs, Link, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default function DynamicBreadcrumb(props) {\n  const { breadcrumbs } = props;\n  return (\n    <Box padding=\"2em 0em 0em 1em\">\n      <Breadcrumbs aria-label=\"breadcrumb\" id=\"breadcrumbParent\">\n        {breadcrumbs.map((crumb, i) => {\n          return (\n            <Link\n              color=\"inherit\"\n              href={crumb[1]}\n              id={`breadcrumb${i}`}\n              key={`breadcrumb ${crumb[0]}`}\n            >\n              <Typography color=\"textPrimary\">{crumb[0]}</Typography>\n            </Link>\n          );\n        })}\n      </Breadcrumbs>\n    </Box>\n  );\n}\nDynamicBreadcrumb.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired\n};\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { SwapHoriz } from \"@material-ui/icons/\";\n\nexport default function StreamButton(props) {\n  const { type } = props;\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      padding: \"0 5px\",\n      margin: \"1em\"\n    },\n    label: {\n      textTransform: \"\"\n    }\n  })(Button);\n\n  return (\n    <StyledButton type={type}>\n      <div className=\"buttonText\">\n        <SwapHoriz />\n        Stream\n      </div>\n    </StyledButton>\n  );\n}\n\nStreamButton.propTypes = {\n  type: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport StreamButton from \"./Buttons/StreamButton\";\n\nexport default function TitleButtons() {\n  return (\n    <div className=\"alignRightFloat\">\n      <NavLink\n        to=\"/Streams/New\"\n        activeClassName=\"hideLinkStyle\"\n        className=\"hideLinkStyle\"\n        exact\n      >\n        <StreamButton type=\"submit\" />\n      </NavLink>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TitleButtons from \"./TitleButtons\";\n\nexport default function Title(props) {\n  const { title, deviceList } = props;\n  return (\n    <Box className=\"flexContents headerAreaUnderline\">\n      <div className=\"title\">{title}</div>\n      {deviceList ? <TitleButtons /> : <></>}\n    </Box>\n  );\n}\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  deviceList: PropTypes.bool.isRequired\n};\n","import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport * as AuthenticationUtil from \"./AuthenticationUtil\";\n\nexport const unknownErrorMessage =\n  \"An unknown error occurred. Please try again later.\";\nexport const incorrectCredentialsMessage =\n  \"Incorrect username and/or password. Please enter the correct credentials and try again.\";\n\nexport async function logIn(credentials) {\n  const authorizationHeader = {\n    auth: {\n      username: credentials.username,\n      password: credentials.password\n    }\n  };\n\n  return axios\n    .get(process.env.REACT_APP_TOKEN, authorizationHeader)\n    .then((response) => {\n      AuthenticationUtil.saveToken(response.headers.authorization);\n    })\n    .catch((error) => {\n      let message = unknownErrorMessage;\n      if (error.response && error.response.status === \"403\") {\n        message = incorrectCredentialsMessage;\n      }\n      return Promise.reject(new Error(message));\n    });\n}\n\nexport function logOut() {\n  Cookies.remove(\"authToken\");\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport { AppBar, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\nimport { AccountCircle, Home } from \"@material-ui/icons/\";\n\nimport { logOut } from \"../api/AuthenticationApi\";\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\n\nclass HeaderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      menuButton: {\n        marginRight: theme.spacing(2)\n      }\n    }));\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout() {\n    const { history } = this.props;\n    logOut();\n    history.push(\"/Login\");\n  }\n\n  render() {\n    return (\n      <div className=\"headerBar\">\n        <AppBar position=\"static\">\n          <Toolbar className=\"darkGrey\">\n            <div className=\"headerTitle\">\n              <NavLink to=\"/Home\" className=\"headerTitle\">\n                <IconButton\n                  edge=\"start\"\n                  className={this.classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"menu\"\n                >\n                  <Home />\n                </IconButton>\n              </NavLink>\n              Switchboard\n            </div>\n            <IconButton\n              id=\"acctBtn\"\n              color=\"inherit\"\n              disabled={!isAuthenticated()}\n              onClick={this.handleLogout}\n            >\n              <AccountCircle />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\nexport default withRouter(HeaderBar);\n\nHeaderBar.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Container } from \"@material-ui/core\";\nimport DynamicBreadcrumb from \"./DynamicBreadcrumb\";\nimport Title from \"./Title\";\nimport HeaderBar from \"./HeaderBar\";\n\nexport default function Page(props) {\n  const { breadcrumbs, title, deviceList, children } = props;\n  return (\n    <>\n      <HeaderBar />\n      <Container>\n        <DynamicBreadcrumb breadcrumbs={breadcrumbs} />\n        <Box className=\"areaUnderBreadcrumbs\">\n          <Title title={title} deviceList={deviceList} />\n          {children}\n        </Box>\n      </Container>\n    </>\n  );\n}\n\nPage.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n    .isRequired,\n  title: PropTypes.string.isRequired,\n  deviceList: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\nPage.defaultProps = {\n  deviceList: false\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    color: \"#ef5350\"\n  }\n}));\n\nexport default function LoginFailedDialog(props) {\n  const classes = useStyles();\n  const { open, setOpen, message } = props;\n\n  const closeDialog = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Dialog open={open} onClose={closeDialog}>\n        <DialogTitle id=\"login-failed-dialog-title\" className={classes.title}>\n          Login Failed\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"login-failed-dialog-description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nLoginFailedDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired\n};\n","import React, { useState } from \"react\";\nimport { Button, Container, makeStyles, TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function LoginConsole(props) {\n  const { handleSubmit } = props;\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit(username, password);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nLoginConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport LoginFailedDialog from \"./LoginFailedDialog\";\nimport LoginConsole from \"./LoginConsole\";\nimport { logIn } from \"../api/AuthenticationApi\";\n\nexport default class LoginPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogOpen: false,\n      dialogMessage: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setDialogOpen = this.setDialogOpen.bind(this);\n    this.setDialogMessage = this.setDialogMessage.bind(this);\n  }\n\n  handleSubmit(username, password) {\n    const { history } = this.props;\n    logIn({ username, password })\n      .then(() => {\n        history.push(\"/Home\");\n      })\n      .catch((error) => {\n        this.setState({\n          dialogOpen: true,\n          dialogMessage: error.message\n        });\n      });\n  }\n\n  setDialogOpen(open) {\n    this.setState({\n      dialogOpen: open\n    });\n  }\n\n  setDialogMessage(message) {\n    this.setState({\n      dialogMessage: message\n    });\n  }\n\n  render() {\n    const { dialogOpen, dialogMessage } = this.state;\n    return (\n      <>\n        <LoginConsole handleSubmit={this.handleSubmit} />\n        <LoginFailedDialog\n          open={dialogOpen}\n          setOpen={this.setDialogOpen}\n          message={dialogMessage}\n        />\n      </>\n    );\n  }\n}\n\nLoginPageContents.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Page from \"../general/Page\";\nimport LoginPageContents from \"./LoginPageContents\";\n\nexport default function LoginPage() {\n  const history = useHistory();\n\n  return (\n    <Page title=\"Login\" breadcrumbs={[]}>\n      <LoginPageContents history={history} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function GridColumn(props) {\n  const { width, spacing, children } = props;\n  return (\n    <Grid item xs={width}>\n      <Grid container spacing={spacing}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\nGridColumn.propTypes = {\n  width: PropTypes.number.isRequired,\n  spacing: PropTypes.number,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nGridColumn.defaultProps = {\n  spacing: 3\n};\n","export default class ButtonInfo {\n  constructor(pathname, referenceObject, buttonText, onClick) {\n    this.pathname = pathname;\n    this.referenceObject = referenceObject;\n    this.buttonText = buttonText;\n    this.onClick = onClick;\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport ButtonInfo from \"./ButtonInfo\";\n\nexport default function SmallCardButton(props) {\n  const {\n    button: { pathname, referenceObject, buttonText, onClick }\n  } = props;\n\n  if (onClick) {\n    return (\n      <Button variant=\"contained\" size=\"small\" onClick={onClick}>\n        {buttonText}\n      </Button>\n    );\n  }\n\n  return (\n    <NavLink\n      activeClassName=\"hideLinkStyle\"\n      className=\"hideLinkStyle\"\n      to={{\n        pathname,\n        state: referenceObject\n      }}\n    >\n      <Button variant=\"contained\" size=\"small\">\n        {buttonText}\n      </Button>\n    </NavLink>\n  );\n}\n\nSmallCardButton.propTypes = {\n  button: PropTypes.instanceOf(ButtonInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Typography, Paper, Grid, Box } from \"@material-ui/core\";\nimport SmallCardButton from \"./SmallCardButton\";\nimport ButtonInfo from \"./ButtonInfo\";\n\nexport default function DashboardCard(props) {\n  const { title, children, button } = props;\n  return (\n    <Paper className=\"dashboardCard\" elevation={2}>\n      <Typography variant=\"h5\" gutterBottom>\n        {title}\n      </Typography>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        {children}\n        {button ? (\n          <Grid item xs={12}>\n            <Box className=\"alignRightFloatPadded\">\n              <SmallCardButton button={button} />\n            </Box>\n          </Grid>\n        ) : null}\n      </Grid>\n    </Paper>\n  );\n}\n\nDashboardCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]),\n  button: PropTypes.instanceOf(ButtonInfo)\n};\n\nDashboardCard.defaultProps = {\n  children: \"\",\n  button: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Link, Button, withStyles } from \"@material-ui/core\";\n\nexport default function DashboardButton(props) {\n  const { href, children } = props;\n\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      minWidth: 100,\n      maxWidth: 200,\n      padding: \"0 5px\",\n      textTransform: \"none\"\n    }\n  })(Button);\n  return (\n    <Link color=\"inherit\" href={href}>\n      <StyledButton>{children}</StyledButton>\n    </Link>\n  );\n}\n\nDashboardButton.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class StatusIndicator extends React.Component {\n  getStatusStyle() {\n    const { status } = this.props;\n    switch (status) {\n      case \"Online\":\n        return \"green statusIndicatorBody statusTextOnline \";\n      case \"Pending\":\n        return \"yellow statusIndicatorBody statusTextOnline\";\n      case \"Error\":\n        return \"red statusIndicatorBody statusTextOnline\";\n      default:\n        return \"lightGrey statusIndicatorBody statusTextOffline\";\n    }\n  }\n\n  render() {\n    const { status } = this.props;\n    return <div className={this.getStatusStyle()}>{status}</div>;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.oneOf([\"Online\", \"Offline\", \"Error\", \"Pending\"]).isRequired\n};\n","export default class StreamInfo {\n  // to be used once backend has date, status, type, and time fields\n  // constructor(id, date, sender, receiver, status, type, time, extras) {\n  //     this.id = id;\n  //     this.date = new Date(date).toString().split(\" \").slice(0, 5).join(\" \");\n  //     this.sender = sender;\n  //     this.receiver = receiver;\n  //     this.status = status;\n  //     this.type = type;\n  //     this.time = time;\n  //     this.extras = extras;\n  // }\n\n  // temporary with static fields until backend is up to snuff\n  constructor(id, sender, receiver, outputChannel, inputChannel) {\n    this.id = id;\n    this.date = new Date(\"2020-10-31T08:15:30\")\n      .toString()\n      .split(\" \")\n      .slice(0, 5)\n      .join(\" \");\n    this.sender = sender;\n    this.receiver = receiver;\n    this.outputChannel = outputChannel;\n    this.inputChannel = inputChannel;\n    this.status = \"Online\";\n    this.type = \"Type 1\";\n    this.time = \"00:34:44\";\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Description } from \"@material-ui/icons\";\nimport { NavLink } from \"react-router-dom\";\n\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default function StreamDetailsButton(props) {\n  const { streamInfo } = props;\n\n  return (\n    <>\n      <NavLink\n        to={{\n          pathname: `/Streams/Details/${streamInfo.id}`,\n          state: { stream: streamInfo }\n        }}\n      >\n        <IconButton>\n          <Description />\n        </IconButton>\n      </NavLink>\n    </>\n  );\n}\n\nStreamDetailsButton.propTypes = {\n  streamInfo: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  ArrowDownward,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\n\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport StreamDetailsButton from \"./StreamDetailsButton\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default class StreamsTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.columnInfo = [\n      {\n        title: \"ID\",\n        field: \"id\"\n      },\n      {\n        title: \"Date\",\n        field: \"date\"\n      },\n      {\n        title: \"Sender\",\n        field: \"sender.name\"\n      },\n      {\n        title: \"Receiver\",\n        field: \"receiver.name\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        }\n      },\n      {\n        title: \"Type\",\n        field: \"type\"\n      },\n      {\n        title: \"Time Elapsed\",\n        field: \"time\"\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <StreamDetailsButton streamInfo={rowData} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n    this.options = {\n      toolbar: false,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: false,\n      draggable: false\n    };\n    this.icons = {\n      SortArrow: ArrowDownward,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  getColumnInfo() {\n    return this.columnInfo;\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  getIcons() {\n    return this.icons;\n  }\n\n  render() {\n    const { streams } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer>\n            <MaterialTable\n              columns={this.getColumnInfo()}\n              data={streams}\n              options={this.getOptions()}\n              icons={this.getIcons()}\n            />\n          </TableContainer>\n          <div className=\"textAlignRightPadded\">\n            {\"Time Zone: \".concat(\n              Intl.DateTimeFormat().resolvedOptions().timeZone\n            )}\n          </div>\n        </Box>\n      </>\n    );\n  }\n}\n\nStreamsTable.propTypes = {\n  streams: PropTypes.arrayOf(PropTypes.instanceOf(StreamInfo)).isRequired\n};\n","export default class DeviceInfo {\n  constructor(\n    serial,\n    lastCommunication,\n    publicIpAddress,\n    privateIpAddress,\n    displayName,\n    status,\n    channels,\n    deviceType,\n    extras\n  ) {\n    this.serialNumber = serial;\n    this.lastCommunication = lastCommunication;\n    this.publicIp = publicIpAddress;\n    this.privateIp = privateIpAddress;\n    this.name = displayName;\n    this.status = status;\n    this.channels = channels;\n    this.deviceType = deviceType;\n    this.extras = extras;\n  }\n}\n","export default class OutputChannelInfo {\n  constructor(id, name, port, encoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.encoder = encoder;\n  }\n}\n","export default class InputChannelInfo {\n  constructor(id, name, port, decoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.decoder = decoder;\n  }\n}\n","export default class LogInfo {\n  constructor(id, dateTime, level, message) {\n    this.id = id;\n    this.dateTime = new Date(dateTime)\n      .toString()\n      .split(\" \")\n      .slice(0, 5)\n      .join(\" \");\n    this.level = level;\n    this.message = message;\n  }\n}\n","import DeviceInfo from \"../model/DeviceInfo\";\nimport OutChannelInfo from \"../model/OutputChannelInfo\";\nimport InChannelInfo from \"../model/InputChannelInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport LogInfo from \"../model/LogInfo\";\n\nconst extras = [\"Additional Device details go here\"];\nconst sampleInputChannels = [\n  new InChannelInfo(1, \"Input ch 1\", 500, null),\n  new InChannelInfo(2, \"Input ch 2\", 456, null),\n  new InChannelInfo(3, \"Input ch 3\", 800, null)\n];\nconst sampleOutputChannels = [\n  new OutChannelInfo(1, \"Output ch 1\", 500, null),\n  new OutChannelInfo(2, \"Output ch 2\", 456, null),\n  new OutChannelInfo(3, \"Output ch 3\", 800, null)\n];\n\nexport function getSenders(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:30:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 3\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:40:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 4\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:50:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 5\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:60:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 6\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:70:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 7\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:80:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 8\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:90:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 9\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n\n  callback(sampleSenders);\n}\n\nexport function getSampleSender() {\n  return new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n}\n\nexport function getReceivers(callback) {\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:03:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 3\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:04:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 4\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:05:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 5\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:06:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 6\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:07:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 7\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:08:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 8\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:09:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 9\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:11:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 11\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:21:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 12\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:31:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 13\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:41:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 14\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:51:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 15\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:61:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 16\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:71:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 17\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:81:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 18\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:91:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 19\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  callback(sampleReceivers);\n}\n\nexport function getAllStreams() {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  return [\n    new StreamInfo(1, sampleSenders[0], sampleReceivers[0], 1, 2),\n    new StreamInfo(2, sampleSenders[1], sampleReceivers[1], 3, 4),\n    new StreamInfo(3, sampleSenders[1], sampleReceivers[0], 5, 6)\n  ];\n}\n\nexport function getSampleStream() {\n  const sampleSender = new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n\n  const sampleReceiver = new DeviceInfo(\n    \"1:22:333:989\",\n    null,\n    \"145:396\",\n    \"Receiver 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"decoder\",\n    extras\n  );\n\n  return new StreamInfo(\n    1,\n    sampleSender,\n    sampleReceiver,\n    sampleSender.channels[0].port,\n    sampleReceiver.channels[1].port\n  );\n}\n\nexport function getAllLogs(callback) {\n  const dates = [\n    new Date(\"2020-10-31T15:53:23\"),\n    new Date(\"2020-11-13T12:36:30\"),\n    new Date(\"2020-11-13T08:24:30\")\n  ];\n\n  const sampleLogs = [\n    new LogInfo(1, dates[0], \"Info\", \"Log 1 info\"),\n    new LogInfo(2, dates[1], \"Info\", \"Log 2 info\"),\n    new LogInfo(3, dates[2], \"Info\", \"Log 3 info\")\n  ];\n\n  callback(sampleLogs);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StreamsTable from \"./StreamsTable\";\nimport { getAllStreams } from \"../api/SampleData\";\n\nexport default class StreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: []\n    };\n    this.dataSource = props.dataSource;\n    this.handleStreamsChange = this.handleStreamsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource\n      .getAllStreams()\n      .then(this.handleStreamsChange)\n      .catch(() => {\n        this.handleStreamsChange(getAllStreams());\n      });\n  }\n\n  handleStreamsChange(streams) {\n    this.setState({\n      streams\n    });\n  }\n\n  render() {\n    const { streams } = this.state;\n    return <StreamsTable streams={streams} />;\n  }\n}\n\nStreamsTableWrapper.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","export default class StreamStatisticsInfo {\n  constructor(id, time, window, link, send, receive) {\n    this.id = id;\n    this.time = time;\n    this.window = window;\n    this.link = link;\n    this.send = send;\n    this.receive = receive;\n  }\n}\n","export default class StreamStatsSendInfo {\n  constructor(sending) {\n    this.packets = sending.packets;\n    this.packetsLost = sending.packetsLost;\n    this.packetsDropped = sending.packetsDropped;\n    this.packetsRetransmitted = sending.packetsRetransmitted;\n    this.bytes = sending.bytes;\n    this.bytesDropped = sending.bytesDropped;\n    this.mbitRate = sending.mbitRate;\n  }\n}\n","export default class StreamStatsReceiveInfo {\n  constructor(receiving) {\n    this.packets = receiving.packets;\n    this.packetsLost = receiving.packetsLost;\n    this.packetsDropped = receiving.packetsDropped;\n    this.packetsRetransmitted = receiving.packetsRetransmitted;\n    this.packetsBelated = receiving.packetsBelated;\n    this.bytes = receiving.bytes;\n    this.bytesLost = receiving.bytesLost;\n    this.bytesDropped = receiving.bytesDropped;\n    this.mbitRate = receiving.mbitRate;\n  }\n}\n","export default class StreamStatsLinkInfo {\n  constructor(link) {\n    this.rtt = link.rtt;\n    this.bandwidth = link.bandwidth;\n    this.maxBandwidth = link.maxBandwidth;\n  }\n}\n","export default class StreamStatsWindowInfo {\n  constructor(window) {\n    this.flow = window.flow;\n    this.congestion = window.congestion;\n    this.flight = window.flight;\n  }\n}\n","import DeviceInfo from \"./DeviceInfo\";\nimport StreamStatisticsInfo from \"./StreamStatistics/StreamStatisticsInfo\";\nimport StreamStatsSendInfo from \"./StreamStatistics/StreamStatsSendInfo\";\nimport StreamStatsReceiveInfo from \"./StreamStatistics/StreamStatsReceiveInfo\";\nimport StreamStatsLinkInfo from \"./StreamStatistics/StreamStatsLinkInfo\";\nimport StreamStatsWindowInfo from \"./StreamStatistics/StreamStatsWindowInfo\";\n\nexport function convertDeviceToDataObject(databaseDevice) {\n  return new DeviceInfo(\n    databaseDevice.serialNumber,\n    databaseDevice.lastCommunication,\n    databaseDevice.device.publicIpAddress,\n    databaseDevice.device.privateIpAddress,\n    databaseDevice.device.displayName,\n    databaseDevice.device.status,\n    databaseDevice.inputs || databaseDevice.outputs,\n    databaseDevice.inputs ? \"receiver\" : \"sender\"\n  );\n}\n\nexport function convertStatsToDataObject(databaseStats) {\n  return new StreamStatisticsInfo(\n    databaseStats.id,\n    databaseStats.time,\n    new StreamStatsWindowInfo(databaseStats.window),\n    new StreamStatsLinkInfo(databaseStats.link),\n    new StreamStatsSendInfo(databaseStats.send),\n    new StreamStatsReceiveInfo(databaseStats.recv)\n  );\n}\n\nexport function convertToServiceObject(deviceInfo) {\n  const serviceObject = {\n    serialNumber: deviceInfo.serialNumber,\n    lastCommunication: deviceInfo.lastCommunication,\n    device: {\n      serialNumber: deviceInfo.serialNumber,\n      publicIpAddress: deviceInfo.publicIp,\n      privateIpAddress: deviceInfo.privateIp,\n      displayName: deviceInfo.name,\n      status: deviceInfo.status\n    }\n  };\n  if (deviceInfo.deviceType === \"sender\") {\n    serviceObject.outputs = deviceInfo.channels;\n  } else {\n    serviceObject.inputs = deviceInfo.channels;\n  }\n  return serviceObject;\n}\n","import axios from \"axios\";\nimport {\n  convertDeviceToDataObject,\n  convertStatsToDataObject\n} from \"../model/ConvertDataFormat\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nexport async function getStream(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAM}/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      const stream = response.data;\n      return new StreamInfo(\n        stream.id,\n        convertDeviceToDataObject(stream.outputChannel.encoder),\n        convertDeviceToDataObject(stream.inputChannel.decoder),\n        stream.outputChannel.channel.port,\n        stream.inputChannel.channel.port\n      );\n    });\n}\n\nexport async function getAllStreams() {\n  return axios\n    .get(process.env.REACT_APP_STREAM, getAuthorizationHeader())\n    .then((streams) => {\n      return Promise.all(\n        streams.data.map((streamId) => {\n          return getStream(streamId);\n        })\n      );\n    });\n}\n\nexport async function deleteStream(streamId) {\n  return axios.delete(\n    `${process.env.REACT_APP_STREAM}/${streamId}`,\n    getAuthorizationHeader()\n  );\n}\n\nexport async function createStream(selectedReceiverID, selectedSenderID) {\n  return axios.post(\n    process.env.REACT_APP_STREAM,\n    {\n      inputChannelId: selectedReceiverID,\n      outputChannelId: selectedSenderID\n    },\n    getAuthorizationHeader()\n  );\n}\n\nexport async function getStreamStatistics(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAM}/statistics/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      const stats = response.data;\n      return convertStatsToDataObject(stats);\n    });\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\nimport StreamsTableWrapper from \"../streamlist/StreamsTableWrapper\";\n\nimport * as StreamApi from \"../api/StreamApi\";\n\nexport default function ActiveStreamCard() {\n  const dataSource = StreamApi;\n\n  return (\n    <DashboardCard title=\"Active Streams\" style={{ height: \"100%\" }}>\n      <Grid item xs={12}>\n        <StreamsTableWrapper dataSource={dataSource} />\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Streams\">See more</DashBoardButton>\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Streams/New\">Start Stream</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function ActivityLogCard() {\n  return (\n    <DashboardCard title=\"Activity Logs\">\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Logs\">View All</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function DevicesCard() {\n  return (\n    <DashboardCard title=\"Devices\">\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Devices\">View Senders</DashBoardButton>\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Devices\">View Receivers</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function AdminPanelCard() {\n  return (\n    <DashboardCard title=\"Admin Panel\">\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Admin\">View Users</DashBoardButton>\n      </Grid>\n      <Grid item xs={4}>\n        <DashBoardButton href=\"/Admin/New\">Create a User</DashBoardButton>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport GridColumn from \"../general/dashboard/GridColumn\";\nimport ActiveStreamCard from \"./ActiveStreamCard\";\nimport ActivityLogCard from \"./ActivityLogCard\";\nimport DevicesCard from \"./DevicesCard\";\nimport AdminPanelCard from \"./AdminPanelCard\";\n\nimport { isAdmin } from \"../api/AuthenticationUtil\";\n\nexport default function HomePageContents() {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"stretch\"\n      direction=\"row\"\n      spacing={3}\n    >\n      <Grid item xs={6}>\n        <Grid style={{ height: \"100%\" }}>\n          <ActiveStreamCard />\n        </Grid>\n      </Grid>\n      <GridColumn width={6}>\n        <Grid item xs={12}>\n          <DevicesCard />\n        </Grid>\n        <Grid item xs={12}>\n          <ActivityLogCard />\n        </Grid>\n        {isAdmin() ? (\n          <Grid item xs={12}>\n            <AdminPanelCard />\n          </Grid>\n        ) : (\n          <div />\n        )}\n      </GridColumn>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport HomePageContents from \"./HomePageContents\";\n\nexport default function HomePage() {\n  return (\n    <Page title=\"Dashboard\" breadcrumbs={[[\"Home\", \"\"]]}>\n      <HomePageContents />\n    </Page>\n  );\n}\n","import axios from \"axios\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport * as SampleData from \"./SampleData\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nfunction getStatus(lastCommunicationString) {\n  if (!lastCommunicationString) {\n    return \"Pending\";\n  }\n\n  const lastCommunicationDate = new Date(`${lastCommunicationString}Z`);\n  const diff = Date.now() - lastCommunicationDate.getTime();\n  const tenMinutes = 10 * 60 * 1000;\n  if (diff < tenMinutes) {\n    return \"Online\";\n  }\n  return \"Offline\";\n}\n\nexport function getSenders(callback) {\n  axios\n    .get(process.env.REACT_APP_ENCODER, getAuthorizationHeader())\n    .then((senders) => {\n      callback(\n        senders.data.map((sender) => {\n          let channels = [];\n          if (sender.output) {\n            channels = sender.output.map((output) => {\n              return new OutputChannelInfo(\n                output.id,\n                output.channel.name,\n                output.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            sender.lastCommunication == null\n              ? \"Never\"\n              : sender.lastCommunication;\n          return new DeviceInfo(\n            sender.serialNumber,\n            lastCommunication,\n            sender.device.publicIpAddress,\n            sender.device.privateIpAddress,\n            sender.device.displayName,\n            getStatus(sender.lastCommunication),\n            channels,\n            \"encoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getSenders(callback);\n    });\n}\n\nexport function getReceivers(callback) {\n  axios\n    .get(process.env.REACT_APP_DECODER, getAuthorizationHeader())\n    .then((receivers) => {\n      callback(\n        receivers.data.map((receiver) => {\n          let channels = [];\n          if (receiver.input) {\n            channels = receiver.input.map((input) => {\n              return new InputChannelInfo(\n                input.id,\n                input.channel.name,\n                input.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            receiver.lastCommunication == null\n              ? \"Never\"\n              : receiver.lastCommunication;\n          return new DeviceInfo(\n            receiver.serialNumber,\n            lastCommunication,\n            receiver.device.publicIpAddress,\n            receiver.device.privateIpAddress,\n            receiver.device.displayName,\n            getStatus(receiver.lastCommunication),\n            channels,\n            \"decoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getReceivers(callback);\n    });\n}\n\nexport function deleteDevice(deviceId) {\n  return axios\n    .delete(\n      `${process.env.REACT_APP_DEVICE}/${deviceId}`,\n      getAuthorizationHeader()\n    )\n    .catch(() => {});\n}\n\nexport async function updateDeviceName(deviceId, updatedName) {\n  return axios.put(\n    process.env.REACT_APP_DEVICE,\n    {\n      serialNumber: deviceId,\n      displayName: updatedName\n    },\n    getAuthorizationHeader()\n  );\n}\n\n// https://programmingwithmosh.com/javascript/react-file-upload-proper-server-side-nodejs-easy/\nexport async function uploadConfiguration() {\n  // deviceId, configFile) {\n  // const data = new FormData()\n  // data.append('file', configFile)\n  // return axios.put(\n  //   `${process.env.REACT_APP_DEVICE}`,\n  //   {\n  //     serialNumber: deviceId,\n  //     configuration: configFile\n  //   },\n  //   getAuthorizationHeader()\n  // );\n  return Promise.resolve(true);\n}\n","import { InputBase, withStyles } from \"@material-ui/core\";\n\nexport default withStyles({\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    fontWeight: 500,\n    letterSpacing: \"0.0075em\",\n    lineHeight: \"1.6\",\n    fontSize: \"1.25rem\",\n    padding: \"10px 26px 10px 12px\",\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  }\n})(InputBase);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MenuItem, Select } from \"@material-ui/core\";\nimport StyledInput from \"./StyledInput\";\n\nexport default class DeviceTableTitle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { handleChange } = this.props;\n    handleChange(event.target.value);\n  }\n\n  render() {\n    const { index } = this.props;\n    return (\n      <Select\n        id=\"device-table-title-select\"\n        value={index}\n        onChange={this.handleChange}\n        input={<StyledInput />}\n      >\n        <MenuItem value={0}>All Devices</MenuItem>\n        <MenuItem value={1}>Senders</MenuItem>\n        <MenuItem value={2}>Receivers</MenuItem>\n      </Select>\n    );\n  }\n}\n\nDeviceTableTitle.propTypes = {\n  index: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function ChannelDetailsTableHead() {\n  return (\n    <TableRow>\n      <TableCell className=\"lightGrey\">ID</TableCell>\n      <TableCell className=\"lightGrey\">Name</TableCell>\n      <TableCell className=\"lightGrey\">Port</TableCell>\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\n\nexport default function ChannelDetailsTableRow(props) {\n  const {\n    channel: { id, name, port }\n  } = props;\n  return (\n    <TableRow>\n      <TableCell>{id}</TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{port}</TableCell>\n    </TableRow>\n  );\n}\nChannelDetailsTableRow.propTypes = {\n  channel: PropTypes.oneOfType([\n    PropTypes.instanceOf(InputChannelInfo),\n    PropTypes.instanceOf(OutputChannelInfo)\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Table, TableBody, TableHead } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport ChannelDetailsTableHead from \"./ChannelDetailsTableHead\";\nimport ChannelDetailsTableRow from \"./ChannelDetailsTableRow\";\n\nexport default function ChannelDetailsTable(props) {\n  const { channels } = props;\n  return (\n    <Table className=\"flexContents\">\n      <TableHead>\n        <ChannelDetailsTableHead />\n      </TableHead>\n      <TableBody>\n        {channels.map((channel) => {\n          return (\n            <ChannelDetailsTableRow channel={channel} key={channel.name} />\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\nChannelDetailsTable.propTypes = {\n  channels: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.instanceOf(InputChannelInfo),\n      PropTypes.instanceOf(OutputChannelInfo)\n    ])\n  ).isRequired\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PropTypes from \"prop-types\";\nimport { MenuItem } from \"@material-ui/core\";\nimport * as DeviceApi from \"../../api/DeviceApi\";\n\nfunction renderDeleteButton(openDeleteDialog) {\n  return (\n    <Button\n      id=\"deleteBtn\"\n      variant=\"outlined\"\n      color=\"secondary\"\n      onClick={openDeleteDialog}\n    >\n      Delete\n    </Button>\n  );\n}\n\nfunction renderDeleteMenuItem(openDeleteDialog) {\n  return (\n    <MenuItem onClick={openDeleteDialog}>\n      <span className=\"warningText\">Delete</span>\n    </MenuItem>\n  );\n}\n\nexport default function DeleteDeviceButton(props) {\n  const { button, deleteId } = props;\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n\n  const openDeleteDialog = () => {\n    return setOpen(true);\n  };\n  const cancelDelete = () => {\n    return setOpen(false);\n  };\n  const confirmDelete = () => {\n    DeviceApi.deleteDevice(deleteId).then(() => {\n      if (history.location.pathname.endsWith(\"Devices\")) {\n        history.go(0);\n      } else {\n        history.push(\"/Devices\");\n      }\n    });\n    return setOpen(false);\n  };\n\n  return (\n    <>\n      {button\n        ? renderDeleteButton(openDeleteDialog)\n        : renderDeleteMenuItem(openDeleteDialog)}\n      <Dialog\n        open={open}\n        onClose={cancelDelete}\n        aria-labelledby=\"delete-stream-dialog-title\"\n        aria-describedby=\"delete-stream-dialog-description\"\n        id=\"delete-stream-dialog\"\n      >\n        <DialogTitle id=\"delete-stream-dialog-title\">\n          Confirm Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"delete-stream-dialog-description\">\n            Are you sure you want to delete this device?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button id=\"cancelDeleteBtn\" onClick={cancelDelete} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            id=\"confirmDeleteBtn\"\n            onClick={confirmDelete}\n            color=\"secondary\"\n            autoFocus\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nDeleteDeviceButton.propTypes = {\n  button: PropTypes.bool.isRequired,\n  deleteId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { MoreVert } from \"@material-ui/icons/\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeleteDeviceButton from \"../general/Buttons/DeleteDeviceButton\";\n\nexport default class ActionMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorElement: null\n    };\n\n    this.setAnchorElement = this.setAnchorElement.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick(event) {\n    this.setAnchorElement(event.currentTarget);\n  }\n\n  handleClose() {\n    this.setAnchorElement(null);\n  }\n\n  setAnchorElement(element) {\n    this.setState({\n      anchorElement: element\n    });\n  }\n\n  render() {\n    const { anchorElement } = this.state;\n    const { device } = this.props;\n    return (\n      <>\n        <IconButton\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n          size=\"small\"\n        >\n          <MoreVert />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorElement}\n          keepMounted\n          open={Boolean(anchorElement)}\n          onClose={this.handleClose}\n          anchorOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n          transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        >\n          <MenuItem onClick={this.handleClose}>\n            <NavLink\n              to={{\n                pathname: `/Devices/Details/${device.serialNumber}`,\n                state: { device }\n              }}\n              className=\"hideLinkStyle\"\n            >\n              View Details\n            </NavLink>\n          </MenuItem>\n          <MenuItem onClick={this.handleClose}>\n            Start stream with this as receiver\n          </MenuItem>\n          <DeleteDeviceButton button={false} deleteId={device.serialNumber} />\n        </Menu>\n      </>\n    );\n  }\n}\n\nActionMenu.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  FilterList,\n  Search,\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable, { MTableToolbar } from \"material-table\";\n\nimport ChannelDetailsTable from \"./ChannelDetailsTable\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport ActionMenu from \"./ActionMenu\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nfunction getComponents() {\n  return {\n    /*  eslint-disable react/jsx-props-no-spreading */\n    Toolbar: function Components(props) {\n      return (\n        <div className=\"lightestGrey\">\n          <MTableToolbar {...props} />\n        </div>\n      );\n    }\n  };\n}\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"Name\",\n      field: \"name\"\n    },\n    {\n      title: \"Serial Number\",\n      field: \"serialNumber\"\n    },\n    {\n      title: \"Status\",\n      field: \"status\",\n      render: function Status(rowData) {\n        return <StatusIndicator status={rowData.status} />;\n      },\n      lookup: {\n        Online: \"Online\",\n        Pending: \"Pending\",\n        Error: \"Error\",\n        Offline: \"Offline\"\n      }\n    },\n    {\n      title: \"Private IP Address\",\n      field: \"privateIp\"\n    },\n    {\n      title: \"Public IP Address\",\n      field: \"publicIp\"\n    },\n    {\n      title: \"Actions\",\n      field: \"action\",\n      filtering: false,\n      sorting: false,\n      render: function Actions(rowData) {\n        return <ActionMenu device={rowData} />;\n      },\n      align: \"center\",\n      export: false\n    }\n  ];\n}\n\nfunction getDetailPanel() {\n  return [\n    {\n      icon: ExpandMore,\n      openIcon: ExpandLess,\n      tooltip: \"Show Device Details\",\n      render: function DetailPanel(rowData) {\n        return (\n          <div className=\"lightestGrey\" style={{ padding: \"1.5em\" }}>\n            <Typography variant=\"h6\">Channels</Typography>\n            <ChannelDetailsTable channels={rowData.channels} />\n          </div>\n        );\n      }\n    }\n  ];\n}\n\nfunction getOptions() {\n  return {\n    toolbar: true,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: true,\n    draggable: false\n  };\n}\n\nfunction getIcons() {\n  return {\n    Filter: FilterList,\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function DevicesTable(props) {\n  const { title, devices } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer style={{ maxHeight: 570 }}>\n          <MaterialTable\n            title={title}\n            components={getComponents()}\n            columns={getColumnInfo()}\n            data={devices}\n            detailPanel={getDetailPanel()}\n            options={getOptions()}\n            icons={getIcons()}\n          />\n        </TableContainer>\n      </Box>\n    </>\n  );\n}\n\nDevicesTable.propTypes = {\n  title: PropTypes.node.isRequired,\n  devices: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\n\nimport { getSenders, getReceivers } from \"../api/DeviceApi\";\nimport DeviceTableTitle from \"./DeviceTableTitle\";\nimport DevicesTable from \"./DevicesTable\";\n\nexport default class DeviceListPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 0,\n      senders: [],\n      receivers: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n  }\n\n  componentDidMount() {\n    getSenders(this.handleSendersChange);\n    getReceivers(this.handleReceiversChange);\n  }\n\n  handleChange(value) {\n    this.setState({\n      selected: value\n    });\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  getDevices() {\n    const { receivers, senders, selected } = this.state;\n    switch (selected) {\n      case 1:\n        return senders;\n      case 2:\n        return receivers;\n      default:\n        return senders.concat(receivers);\n    }\n  }\n\n  getTitle() {\n    const { selected } = this.state;\n    return (\n      <DeviceTableTitle index={selected} handleChange={this.handleChange} />\n    );\n  }\n\n  render() {\n    return <DevicesTable devices={this.getDevices()} title={this.getTitle()} />;\n  }\n}\n","import React from \"react\";\n\nimport Page from \"../general/Page\";\nimport DeviceListPageContents from \"./DeviceListPageContents\";\n\nexport default function DeviceListPage() {\n  const breadcrumb = [\n    [\"Home\", \"/Home\"],\n    [\"My Devices\", \"/Devices\"]\n  ];\n  return (\n    <Page title=\"My Devices\" breadcrumbs={breadcrumb} deviceList>\n      <DeviceListPageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\nimport { Cancel, Save } from \"@material-ui/icons\";\n\nexport default function EditableName(props) {\n  const { confirmEditing, deviceName, setName, cancelEditing } = props;\n  return (\n    <form className=\"deviceNameEditForm\" onSubmit={confirmEditing}>\n      <Box className=\"flexContents\">\n        <TextField\n          id=\"deviceName\"\n          name=\"deviceName\"\n          required\n          defaultValue={deviceName}\n          onChange={(event) => setName(event.target.value)}\n        />\n        <div className=\"alignRightFloat\">\n          <IconButton id=\"cancelEditBtn\" size=\"small\" onClick={cancelEditing}>\n            <Cancel />\n          </IconButton>\n\n          <IconButton id=\"confirmEditBtn\" type=\"submit\" color=\"primary\">\n            <Save />\n          </IconButton>\n        </div>\n      </Box>\n    </form>\n  );\n}\n\nEditableName.propTypes = {\n  confirmEditing: PropTypes.func.isRequired,\n  deviceName: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired,\n  cancelEditing: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Edit } from \"@material-ui/icons\";\n\nexport default function StaticName(props) {\n  const { deviceName, startEditing } = props;\n  return (\n    <>\n      {deviceName}\n      <div className=\"alignRightFloat\">\n        <IconButton\n          id=\"editBtn\"\n          size=\"small\"\n          color=\"action\"\n          onClick={startEditing}\n        >\n          <Edit />\n        </IconButton>\n      </div>\n    </>\n  );\n}\n\nStaticName.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  startEditing: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as DeviceApi from \"../api/DeviceApi\";\nimport EditableName from \"./EditableName\";\nimport StaticName from \"./StaticName\";\n\nexport default class DeviceName extends React.Component {\n  constructor(props) {\n    super(props);\n    this.deviceName = props.deviceName;\n    this.deviceId = props.deviceId;\n    this.state = {\n      editing: false,\n      name: this.deviceName\n    };\n\n    this.startEdit = this.startEdit.bind(this);\n    this.cancelEditing = this.cancelEditing.bind(this);\n    this.confirmEditing = this.confirmEditing.bind(this);\n    this.setName = this.setName.bind(this);\n  }\n\n  setName(updatedName) {\n    this.setState({ name: updatedName });\n  }\n\n  startEdit() {\n    this.setState({ editing: true });\n  }\n\n  cancelEditing() {\n    this.setState({ name: this.deviceName });\n    this.setState({ editing: false });\n  }\n\n  confirmEditing(event) {\n    // api call\n    event.preventDefault();\n    const { name: newName } = this.state;\n    const oldName = this.deviceName;\n    this.deviceName = newName;\n    this.setState({ editing: false });\n\n    DeviceApi.updateDeviceName(this.deviceId, newName).catch(() => {\n      // If update was unsuccessful, return to the old name\n      this.deviceName = oldName;\n      this.forceUpdate();\n    });\n  }\n\n  render() {\n    const { editing } = this.state;\n    return (\n      <>\n        {editing ? (\n          <EditableName\n            confirmEditing={this.confirmEditing}\n            deviceName={this.deviceName}\n            setName={this.setName}\n            cancelEditing={this.cancelEditing}\n          />\n        ) : (\n          <StaticName\n            deviceName={this.deviceName}\n            startEditing={this.startEdit}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nDeviceName.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  deviceId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\n\nimport { TableContainer, TableCell, TableRow } from \"@material-ui/core\";\nimport ChannelDetailsTable from \"../../devicelist/ChannelDetailsTable\";\nimport InputChannelInfo from \"../../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../../model/OutputChannelInfo\";\nimport StatusIndicator from \"../../general/StatusIndicator\";\nimport DeviceName from \"../DeviceName\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class DeviceInfoRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getPropertyDisplayName = this.getPropertyDisplayName.bind(this);\n    this.createInnerTable = this.createInnerTable.bind(this);\n    this.createTableCellContents = this.createTableCellContents.bind(this);\n  }\n\n  getPropertyDisplayName() {\n    const { name } = this.props;\n    switch (name) {\n      case \"serialNumber\":\n        return \"Serial Number\";\n      case \"lastCommunication\":\n        return \"Last Communication\";\n      case \"privateIp\":\n        return \"Private IP Address\";\n      case \"publicIp\":\n        return \"Public IP Address\";\n      case \"name\":\n        return \"Name\";\n      case \"status\":\n        return \"Status\";\n      case \"channels\":\n        return \"Channels\";\n      default:\n        return \"Additional Info\";\n    }\n  }\n\n  createInnerTable() {\n    const { value } = this.props;\n    return (\n      <TableContainer>\n        <ChannelDetailsTable channels={value} />\n      </TableContainer>\n    );\n  }\n\n  createTableCellContents() {\n    const {\n      name,\n      value,\n      device: { serialNumber }\n    } = this.props;\n    switch (name) {\n      case \"channels\":\n        return this.createInnerTable();\n      case \"status\":\n        return <StatusIndicator status={value} />;\n      case \"name\":\n        return <DeviceName deviceName={value} deviceId={serialNumber} />;\n      default:\n        return value;\n    }\n  }\n\n  render() {\n    return (\n      <TableRow>\n        <TableCell>{this.getPropertyDisplayName()}</TableCell>\n        <TableCell align=\"center\">{this.createTableCellContents()}</TableCell>\n      </TableRow>\n    );\n  }\n}\n\nDeviceInfoRow.propTypes = {\n  name: Proptypes.string.isRequired,\n  value: Proptypes.oneOfType([\n    Proptypes.string,\n    Proptypes.arrayOf(\n      Proptypes.oneOfType([InputChannelInfo, OutputChannelInfo])\n    )\n  ]).isRequired,\n  device: Proptypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { TableContainer, Table, TableBody } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfoRow from \"./DeviceInfoRow\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function DeviceInfoTable(props) {\n  const { device, properties } = props;\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          {properties.map((property) => (\n            <DeviceInfoRow\n              name={property}\n              value={device[property]}\n              device={device}\n              key={`device_${property}`}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nDeviceInfoTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  properties: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceInfoTable from \"./DeviceInfoTable/DeviceInfoTable\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function DeviceDetailsInfoTable(props) {\n  const { device } = props;\n  const properties = [\n    \"name\",\n    \"serialNumber\",\n    \"status\",\n    \"publicIp\",\n    \"privateIp\"\n  ];\n  return <DeviceInfoTable device={device} properties={properties} />;\n}\n\nDeviceDetailsInfoTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport DeviceDetailsInfoTable from \"../DeviceDetailsInfoTable\";\n\nexport default function DeviceInfoCard(props) {\n  const { device } = props;\n\n  return (\n    <DashboardCard title=\"Device Info\">\n      <Grid item xs={12}>\n        <DeviceDetailsInfoTable device={device} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceInfoCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Search,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\nimport LogInfo from \"../model/LogInfo\";\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"ID\",\n      field: \"id\",\n      cellStyle: { width: \"10%\" }\n    },\n    {\n      title: \"Date\",\n      field: \"dateTime\",\n      cellStyle: { width: \"15%\" }\n    },\n    {\n      title: \"Level\",\n      field: \"level\",\n      cellStyle: { width: \"10%\" }\n    },\n    {\n      title: \"Message\",\n      field: \"message\",\n      sorting: false\n    }\n  ];\n}\n\nfunction getOptions(bodyHeight) {\n  return {\n    toolbar: true,\n    showTitle: false,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: false,\n    draggable: false,\n    maxBodyHeight: bodyHeight,\n    minBodyHeight: bodyHeight\n  };\n}\n\nfunction getIcons() {\n  return {\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function LogsTable(props) {\n  const { logs, bodyHeight, title } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer>\n          <MaterialTable\n            title={title}\n            columns={getColumnInfo()}\n            data={logs}\n            options={getOptions(bodyHeight)}\n            icons={getIcons()}\n          />\n        </TableContainer>\n        <div className=\"textAlignRightPadded\">\n          {\"Time Zone: \".concat(\n            Intl.DateTimeFormat().resolvedOptions().timeZone\n          )}\n        </div>\n      </Box>\n    </>\n  );\n}\n\nLogsTable.propTypes = {\n  logs: PropTypes.arrayOf(PropTypes.instanceOf(LogInfo)).isRequired,\n  bodyHeight: PropTypes.string,\n  title: PropTypes.string\n};\n\nLogsTable.defaultProps = {\n  bodyHeight: \"auto\",\n  title: \"Logs\"\n};\n","import axios from \"axios\";\nimport LogInfo from \"../model/LogInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\nimport * as SampleData from \"./SampleData\";\n\nasync function getLogs(endpoint) {\n  return axios\n    .get(endpoint, getAuthorizationHeader())\n    .then((response) => {\n      return Promise.resolve(\n        response.data.map((log) => {\n          return new LogInfo(log.id, log.dateTime, log.level, log.message);\n        })\n      );\n    })\n    .catch(() => {\n      return new Promise((resolve) => {\n        SampleData.getAllLogs(resolve);\n      });\n    });\n}\n\nexport async function getAllLogs() {\n  return getLogs(process.env.REACT_APP_LOG);\n}\n\nexport async function getDeviceLogs(deviceSerialNumber) {\n  return getLogs(`${process.env.REACT_APP_LOG}/${deviceSerialNumber}`);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport LogsTable from \"../loglist/LogsTable\";\nimport * as LogApi from \"../api/LogApi\";\n\nexport default class DeviceLogTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.device = props.device;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    LogApi.getDeviceLogs(this.device.serialNumber).then((logs) =>\n      this.handleLogsChange(logs)\n    );\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable title={`${this.device.name} Logs`} logs={logs} />;\n  }\n}\n\nDeviceLogTableWrapper.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport DeviceLogTableWrapper from \"../DeviceLogTableWrapper\";\n\nexport default function DeviceLogCard(props) {\n  const { device } = props;\n\n  return (\n    <DashboardCard title=\"Logs\">\n      <Grid item xs={12}>\n        <DeviceLogTableWrapper device={device} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceLogCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport ChannelDetailsTable from \"../../devicelist/ChannelDetailsTable\";\n\nexport default function DeviceChannelCard(props) {\n  const {\n    device: { channels }\n  } = props;\n\n  return (\n    <DashboardCard title=\"Channels\">\n      <Grid item xs={12}>\n        <ChannelDetailsTable channels={channels} />\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceChannelCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogContentText from \"@material-ui/core/DialogContentText\";\n\nexport default function DialogBody(props) {\n  const { children } = props;\n  return (\n    <MuiDialogContent>\n      <MuiDialogContentText id=\"dialog-description\">\n        {children}\n      </MuiDialogContentText>\n    </MuiDialogContent>\n  );\n}\nDialogBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\n\nexport default function DialogButtons(props) {\n  const { button1, button2 } = props;\n\n  return (\n    <MuiDialogActions>\n      <Button onClick={button1.onClick} color=\"primary\">\n        {button1.name}\n      </Button>\n      {button2 ? (\n        <Button onClick={button2.onClick} color=\"secondary\" autoFocus>\n          {button2.name}\n        </Button>\n      ) : undefined}\n    </MuiDialogActions>\n  );\n}\n\nDialogButtons.propTypes = {\n  button1: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired,\n  button2: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  })\n};\n\nDialogButtons.defaultProps = {\n  button2: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MuiDialog from \"@material-ui/core/Dialog/Dialog\";\nimport { DialogTitle } from \"@material-ui/core\";\nimport DialogBody from \"./DialogBody\";\nimport DialogButtons from \"./DialogButtons\";\n\nexport default class Dialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.openDialog = this.openDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.setState({ open: true });\n  }\n\n  closeDialog() {\n    return this.setState({ open: false });\n  }\n\n  render() {\n    const { title, actionButton, children, isError } = this.props;\n    const { open } = this.state;\n\n    const button = {\n      name: actionButton ? \"Cancel\" : \"OK\",\n      onClick: this.closeDialog\n    };\n\n    return (\n      <MuiDialog\n        open={open}\n        onClose={() => this.closeDialog}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n        id=\"dialog\"\n      >\n        <DialogTitle className={isError ? \"warningText\" : undefined}>\n          {title}\n        </DialogTitle>\n        <DialogBody>{children}</DialogBody>\n        {actionButton ? (\n          <DialogButtons button1={button} button2={actionButton} />\n        ) : (\n          <DialogButtons button1={button} />\n        )}\n      </MuiDialog>\n    );\n  }\n}\n\nDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  actionButton: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }),\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  isError: PropTypes.bool\n};\n\nDialog.defaultProps = {\n  isError: false,\n  actionButton: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../../general/dialog/Dialog\";\nimport { deleteDevice } from \"../../api/DeviceApi\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class DeleteDeviceDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.afterDelete = this.afterDelete.bind(this);\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  afterDelete() {\n    const { history } = this.props;\n    this.dialogElement.current.closeDialog();\n    history.push(\"/Devices\");\n  }\n\n  confirmDelete() {\n    const {\n      device: { serialNumber }\n    } = this.props;\n    deleteDevice(serialNumber).then(this.afterDelete);\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { device } = this.props;\n    const title = \"Confirm Delete\";\n    const message = `Are you sure you want to delete ${device.name}?`;\n\n    const actionButton = {\n      name: \"Confirm\",\n      onClick: this.confirmDelete\n    };\n\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        {message}\n      </Dialog>\n    );\n  }\n}\n\nDeleteDeviceDialog.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withRouter } from \"react-router-dom\";\nimport DeleteDeviceDialog from \"./DeleteDeviceDialog\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nclass DeleteDeviceDialogOpener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { device, history } = this.props;\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={<DeleteIcon />}\n          onClick={this.openDialog}\n        >\n          Delete\n        </Button>\n        <DeleteDeviceDialog\n          ref={this.dialogElement}\n          device={device}\n          history={history}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(DeleteDeviceDialogOpener);\n\nDeleteDeviceDialogOpener.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"@material-ui/core\";\n\nimport Dialog from \"../../general/dialog/Dialog\";\n\nimport { uploadConfiguration } from \"../../api/DeviceApi\";\n\nexport default class UploadConfigDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null\n    };\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.afterUpload = this.afterUpload.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      file: event.target.files[0]\n    });\n  }\n\n  handleUpload() {\n    const { deviceId } = this.props;\n    const { file } = this.state;\n    uploadConfiguration(deviceId, file).then(() => {\n      this.afterUpload();\n    });\n  }\n\n  afterUpload() {\n    this.dialogElement.current.closeDialog();\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const title = \"Upload a file\";\n    const actionButton = {\n      name: \"Upload\",\n      onClick: this.handleUpload\n    };\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        <Input\n          type=\"file\"\n          name=\"file\"\n          disableUnderline\n          onChange={this.handleChange}\n        />\n      </Dialog>\n    );\n  }\n}\n\nUploadConfigDialog.propTypes = {\n  deviceId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { CloudUpload } from \"@material-ui/icons\";\n\nimport UploadConfigDialog from \"./UploadConfigDialog\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class UploadConfigDialogOpenButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const {\n      device: { serialNumber }\n    } = this.props;\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<CloudUpload />}\n          onClick={this.openDialog}\n        >\n          Upload New\n        </Button>\n\n        <UploadConfigDialog ref={this.dialogElement} deviceId={serialNumber} />\n      </>\n    );\n  }\n}\n\nUploadConfigDialogOpenButton.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport { GetApp } from \"@material-ui/icons\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default class DownloadConfigButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.handleDownload = this.handleDownload.bind(this);\n  }\n\n  handleDownload() {\n    const { device } = this.props;\n    return device.configuration;\n  }\n\n  render() {\n    return (\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={this.handleDownload}\n        startIcon={<GetApp />}\n      >\n        Download\n      </Button>\n    );\n  }\n}\n\nDownloadConfigButton.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../../general/dashboard/DashboardCard\";\nimport UploadConfigDialogOpenButton from \"../configuration/UploadConfigDialogOpenButton\";\nimport DownloadConfigButton from \"../configuration/DownloadConfigButton\";\n\nimport DeviceInfo from \"../../model/DeviceInfo\";\n\nexport default function DeviceConfigActionsCard(props) {\n  const { device } = props;\n  return (\n    <DashboardCard title=\"Configuration\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <UploadConfigDialogOpenButton device={device} />\n        </Grid>\n        <Grid item xs={4}>\n          <DownloadConfigButton device={device} />\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nDeviceConfigActionsCard.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, Box, Container } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeviceInfoCard from \"./cards/DeviceInfoCard\";\nimport DeviceLogCard from \"./cards/DeviceLogCard\";\nimport DeviceChannelCard from \"./cards/DeviceChannelCard\";\n\nimport { getSampleSender } from \"../api/SampleData\";\nimport GridColumn from \"../general/dashboard/GridColumn\";\nimport DeleteDeviceDialogOpener from \"./DeleteDeviceDialog/DeleteDeviceDialogOpener\";\nimport DeviceConfigActionsCard from \"./cards/DeviceConfigActionsCard\";\n\nexport default function DeviceDetailsPageContents(props) {\n  const { device } = props;\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <GridColumn width={6}>\n          <Grid item xs={12}>\n            <DeviceInfoCard device={device} />\n          </Grid>\n          <Grid item xs={12}>\n            <DeviceChannelCard device={device} />\n          </Grid>\n          <Grid item xs={12}>\n            <DeviceConfigActionsCard device={device} />\n          </Grid>\n        </GridColumn>\n        <Grid item xs={6}>\n          <DeviceLogCard device={device} />\n        </Grid>\n      </Grid>\n      <Box className=\"alignRightFloatPadded\">\n        <DeleteDeviceDialogOpener device={device} />\n      </Box>\n    </Container>\n  );\n}\nDeviceDetailsPageContents.defaultProps = {\n  device: getSampleSender()\n};\n\nDeviceDetailsPageContents.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo)\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Page from \"../general/Page\";\nimport DeviceDetailsPageContents from \"./DeviceDetailsPageContents\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport { getSampleSender } from \"../api/SampleData\";\n\nexport default function DeviceDetailsPage(props) {\n  const {\n    location: {\n      state: { device }\n    }\n  } = props;\n\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"My Devices\", \"/Devices\"],\n    [\"Device Details\", `/Devices/Details/${device.serialNumber}`]\n  ];\n\n  return (\n    <Page title=\"Device Details\" breadcrumbs={breadcrumbs}>\n      <DeviceDetailsPageContents device={device} />\n    </Page>\n  );\n}\n\nDeviceDetailsPage.defaultProps = {\n  location: { state: { device: getSampleSender() } }\n};\n\nDeviceDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      device: PropTypes.instanceOf(DeviceInfo)\n    })\n  })\n};\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport StreamsTableWrapper from \"./StreamsTableWrapper\";\nimport * as streamDataSource from \"../api/StreamApi\";\n\nexport default function StreamListPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"]\n  ];\n  return (\n    <Page title=\"Active Streams\" breadcrumbs={breadcrumbs}>\n      <StreamsTableWrapper dataSource={streamDataSource} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { InputAdornment, makeStyles, TextField } from \"@material-ui/core\";\n\nimport { Search } from \"@material-ui/icons/\";\n\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      search: {\n        position: \"relative\",\n        right: 0,\n        marginLeft: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n          marginLeft: theme.spacing(1),\n          width: \"auto\"\n        }\n      },\n      searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        alignItems: \"left\",\n        justifyContent: \"center\"\n      },\n      inputRoot: {\n        color: \"inherit\"\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"searchField\">\n          <TextField\n            placeholder=\"Search\"\n            InputProps={{\n              \"aria-label\": \"search\",\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {\" \"}\n                  <Search />\n                </InputAdornment>\n              )\n            }}\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n  MenuItem,\n  Select\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class SelectDeviceTableRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState((state) => ({ open: !state.open }));\n  }\n\n  render() {\n    const {\n      deviceDetails: { channels, name },\n      onChange\n    } = this.props;\n    const { open } = this.state;\n    return (\n      <>\n        <ListItem button dense onClick={this.onClick}>\n          <ListItemText primary={name} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding style={{ width: \"96%\" }}>\n            <ListItem divider>\n              <ListItemText secondary=\"Select Channel\" />\n              <Select defaultValue=\"\" onChange={onChange}>\n                {channels.map((channel) => {\n                  return (\n                    <MenuItem value={channel.id} key={`${name}_${channel.id}`}>\n                      {channel.port}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </ListItem>\n          </List>\n        </Collapse>\n      </>\n    );\n  }\n}\nSelectDeviceTableRow.propTypes = {\n  deviceDetails: PropTypes.instanceOf(DeviceInfo).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { List } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport SearchBar from \"./SearchBar\";\nimport SelectDeviceTableRow from \"./SelectDeviceTableRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function SelectDevicesTable(props) {\n  const { dataSource, name, onChange } = props;\n  return (\n    <>\n      <div className=\"subtitle\">{name}</div>\n      <SearchBar />\n      <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n        <List>\n          {dataSource.map((device) => {\n            return (\n              <SelectDeviceTableRow\n                deviceDetails={device}\n                key={device.serialNumber}\n                onChange={onChange}\n              />\n            );\n          })}\n        </List>\n      </div>\n    </>\n  );\n}\n\nSelectDevicesTable.propTypes = {\n  name: PropTypes.string.isRequired,\n  dataSource: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport SelectDevicesTable from \"./SelectDevicesTable\";\nimport StreamButton from \"../general/Buttons/StreamButton\";\n\nimport * as DeviceApi from \"../api/DeviceApi\";\nimport { createStream } from \"../api/StreamApi\";\n\nexport default class StreamingTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      selectedSenderID: \"\",\n      selectedReceiverID: \"\"\n    };\n\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n\n    this.onSenderSelected = this.onSenderSelected.bind(this);\n    this.onReceiverSelected = this.onReceiverSelected.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    DeviceApi.getSenders(this.handleSendersChange);\n    DeviceApi.getReceivers(this.handleReceiversChange);\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { selectedReceiverID, selectedSenderID } = this.state;\n    if (selectedReceiverID !== \"\" && selectedSenderID !== \"\") {\n      createStream(selectedReceiverID, selectedSenderID);\n    }\n  }\n\n  onSenderSelected(selectedSender) {\n    this.setState({\n      selectedSenderID: selectedSender.target.value\n    });\n  }\n\n  onReceiverSelected(selectedReceiver) {\n    this.setState({\n      selectedReceiverID: selectedReceiver.target.value\n    });\n  }\n\n  render() {\n    const { receivers, senders } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} id=\"createStreamForm\">\n          <Grid\n            container\n            spacing={2}\n            alignContent=\"center\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"SenderTable\">\n                <SelectDevicesTable\n                  name=\"Sender Devices\"\n                  dataSource={senders}\n                  onChange={this.onSenderSelected}\n                />\n              </div>\n            </Grid>\n            <Grid\n              container\n              item\n              xs={2}\n              id=\"TableStartStreamingBtn\"\n              justify=\"center\"\n              alignContent=\"center\"\n              alignItems=\"center\"\n              display=\"flex\"\n            >\n              <StreamButton id=\"StreamingStreamBtn\" type=\"submit\" />\n            </Grid>\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"ReceiverTable\">\n                <SelectDevicesTable\n                  name=\"Receiver Devices\"\n                  dataSource={receivers}\n                  onChange={this.onReceiverSelected}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </form>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport StreamingTable from \"./StreamingTable\";\n\nexport default function CreateStreamPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [\"New Stream\", \"/Streams/New\"]\n  ];\n  return (\n    <Page title=\"Create a Stream\" breadcrumbs={breadcrumbs}>\n      <StreamingTable />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LogsTable from \"./LogsTable\";\n\nexport default class LogsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.logsDataSource = props.logsDataSource;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.logsDataSource.getAllLogs().then(this.handleLogsChange);\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} />;\n  }\n}\n\nLogsTableWrapper.propTypes = {\n  logsDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\n\nimport LogsTableWrapper from \"./LogsTableWrapper\";\nimport Page from \"../general/Page\";\nimport * as logsDataSource from \"../api/LogApi\";\n\nexport default function LogListPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Logs\", \"/Logs\"]\n  ];\n\n  return (\n    <Page title=\"Logs\" breadcrumbs={breadcrumbs}>\n      <LogsTableWrapper logsDataSource={logsDataSource} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Dialog from \"../dialog/Dialog\";\n\nexport default class FormFailedDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { title, errorMessage } = this.props;\n\n    return (\n      <Dialog ref={this.dialogElement} title={title} isError>\n        {errorMessage}\n      </Dialog>\n    );\n  }\n}\n\nFormFailedDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string.isRequired\n};\n","import axios from \"axios\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nexport async function createUser(credentials) {\n  return axios.post(\n    process.env.REACT_APP_SIGNUP,\n    {\n      username: credentials.username,\n      password: credentials.password,\n      userRole: \"USER\"\n    },\n    getAuthorizationHeader()\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, TextField, Grid } from \"@material-ui/core\";\nimport DashboardCard from \"../dashboard/DashboardCard\";\n\nexport default class FormConsole extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      passwordErrorCondition: false\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.setUsername = this.setUsername.bind(this);\n    this.setPassword = this.setPassword.bind(this);\n    this.setPasswordError = this.setPasswordError.bind(this);\n    this.passwordOnChange = this.passwordOnChange.bind(this);\n  }\n\n  onSubmit(event) {\n    const { handleSubmit } = this.props;\n    const { username, password } = this.state;\n    event.preventDefault();\n    handleSubmit(username, password);\n  }\n\n  setUsername(username) {\n    this.setState({\n      username\n    });\n  }\n\n  setPassword(password) {\n    this.setState({\n      password\n    });\n  }\n\n  setPasswordError(password) {\n    const { passwordError } = this.props;\n    if (passwordError) {\n      if (\n        password.length < passwordError.upperbound &&\n        password.length > passwordError.lowerbound\n      ) {\n        this.setState({ passwordErrorCondition: true });\n      } else {\n        this.setState({ passwordErrorCondition: false });\n      }\n    }\n  }\n\n  passwordOnChange(password) {\n    this.setPassword(password);\n    this.setPasswordError(password);\n  }\n\n  render() {\n    const {\n      buttonName,\n      isValidate,\n      passwordInputProps,\n      passwordHelperText\n    } = this.props;\n    const { passwordErrorCondition } = this.state;\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"stretch\"\n        direction=\"row\"\n        spacing={3}\n      >\n        <Grid item xs={6}>\n          <DashboardCard title=\"\">\n            <div>\n              <form noValidate={!isValidate} onSubmit={this.onSubmit}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  autoFocus\n                  onChange={(event) => this.setUsername(event.target.value)}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  error={passwordErrorCondition}\n                  inputProps={passwordInputProps}\n                  helperText={passwordHelperText}\n                  autoComplete=\"current-password\"\n                  // prettier-ignore\n                  onChange={(event) => this.passwordOnChange(event.target.value)}\n                />\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  {buttonName}\n                </Button>\n              </form>\n            </div>\n          </DashboardCard>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nFormConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  buttonName: PropTypes.string.isRequired,\n  isValidate: PropTypes.bool,\n  passwordError: PropTypes.shape({\n    upperbound: PropTypes.number.isRequired,\n    lowerbound: PropTypes.number.isRequired\n  }),\n  passwordInputProps: PropTypes.shape({\n    maxLength: PropTypes.number.isRequired,\n    minLength: PropTypes.number.isRequired\n  }),\n  passwordHelperText: PropTypes.string\n};\n\nFormConsole.defaultProps = {\n  isValidate: false,\n  passwordError: undefined,\n  passwordInputProps: undefined,\n  passwordHelperText: undefined\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport FormConsole from \"../../general/userForm/FormConsole\";\n\nexport default function CreateUserFormConsole(props) {\n  const { handleSubmit } = props;\n\n  return (\n    <>\n      <FormConsole\n        handleSubmit={handleSubmit}\n        buttonName=\"Create\"\n        isValidate\n        passwordError={{ upperbound: 5, lowerbound: 0 }}\n        passwordInputProps={{ maxLength: 20, minLength: 5 }}\n        passwordHelperText=\"Password must be between 5 to 20 characters\"\n      />\n    </>\n  );\n}\n\nCreateUserFormConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport FormFailedDialog from \"../../general/userForm/FormFailedDialog\";\nimport { createUser } from \"../../api/UserManagementApi\";\nimport CreateUserFormConsole from \"./CreateUserFormConsole\";\n\nexport default class CreateUserPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogMessage: \"\"\n    };\n    this.dialogElement = React.createRef();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n    this.setDialogMessage = this.setDialogMessage.bind(this);\n  }\n\n  handleSubmit(username, password) {\n    const { history } = this.props;\n    createUser({ username, password })\n      .then(() => {\n        history.push(\"/Home\");\n      })\n      .catch((error) => {\n        this.openDialog();\n        this.setDialogMessage(error.message);\n      });\n  }\n\n  setDialogMessage(message) {\n    this.setState({\n      dialogMessage: message\n    });\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { dialogMessage } = this.state;\n    return (\n      <>\n        <CreateUserFormConsole handleSubmit={this.handleSubmit} />\n        <FormFailedDialog\n          ref={this.dialogElement}\n          title=\"Failed to create user\"\n          errorMessage={dialogMessage}\n        />\n      </>\n    );\n  }\n}\n\nCreateUserPageContents.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Page from \"../../general/Page\";\nimport CreateUserPageContents from \"./CreateUserPageContents\";\n\nexport default function CreateUserPage() {\n  const history = useHistory();\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Admin\", \"/Admin\"],\n    [\"Create a User\", \"/Admin/New\"]\n  ];\n\n  return (\n    <Page title=\"Create a User\" breadcrumbs={breadcrumbs}>\n      <CreateUserPageContents history={history} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function SimpleTableRow(props) {\n  const { name, value, alignment } = props;\n\n  return (\n    <>\n      <TableRow>\n        <TableCell>{name}</TableCell>\n        <TableCell align={alignment}>{value}</TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nSimpleTableRow.defaultProps = {\n  alignment: \"left\"\n};\n\nSimpleTableRow.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.node.isRequired,\n  alignment: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TableBody, Table, TableContainer } from \"@material-ui/core\";\nimport SimpleTableRow from \"./SimpleTableRow\";\n\nexport default function SimpleTable(props) {\n  const { properties, alignment } = props;\n\n  const propertiesArr = Object.keys(properties).map((propertyName) => {\n    return [propertyName, properties[propertyName]];\n  });\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          {propertiesArr.map((propertyPair) => (\n            <SimpleTableRow\n              name={propertyPair[0]}\n              value={propertyPair[1]}\n              alignment={alignment}\n              key={`component_${propertyPair[0]}`}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nSimpleTable.defaultProps = {\n  alignment: \"left\"\n};\nSimpleTable.propTypes = {\n  properties: PropTypes.arrayOf(PropTypes.node).isRequired,\n  alignment: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport SimpleTable from \"../general/simpleTable/SimpleTable\";\nimport ButtonInfo from \"../general/dashboard/ButtonInfo\";\n\nexport default function StreamDeviceDetailsCard(props) {\n  const { cardTitle, device, channel } = props;\n  const button = new ButtonInfo(\n    `/Devices/Details/${device.serialNumber}`,\n    { device },\n    \"View Device\"\n  );\n  const properties = {\n    Name: device.name,\n    \"Serial Number\": device.serialNumber,\n    Channel: channel\n  };\n\n  return (\n    <DashboardCard title={cardTitle} button={button}>\n      <Grid container>\n        <Grid item xs={12}>\n          <SimpleTable properties={properties} />\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n\nStreamDeviceDetailsCard.propTypes = {\n  cardTitle: PropTypes.string.isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  channel: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../general/dialog/Dialog\";\nimport { deleteStream } from \"../api/StreamApi\";\n\nexport default class DeleteStreamDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.afterDelete = this.afterDelete.bind(this);\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  afterDelete() {\n    const { history } = this.props;\n    this.dialogElement.current.closeDialog();\n    history.push(\"/Streams\");\n  }\n\n  confirmDelete() {\n    const { deleteId } = this.props;\n    deleteStream(deleteId).then(this.afterDelete);\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId } = this.props;\n    const title = \"Confirm Delete\";\n    const message = `Are you sure you want to end stream ${deleteId}?`;\n\n    const actionButton = {\n      name: \"Confirm\",\n      onClick: this.confirmDelete\n    };\n\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        {message}\n      </Dialog>\n    );\n  }\n}\n\nDeleteStreamDialog.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Tooltip } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withRouter } from \"react-router-dom\";\n\nimport DeleteStreamDialog from \"./DeleteStreamDialog\";\n\nclass DeleteStreamDialogOpener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId, history } = this.props;\n    return (\n      <>\n        <Tooltip title=\"Delete Stream\" aria-label=\"delete stream\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<DeleteIcon />}\n            onClick={this.openDialog}\n          >\n            Delete\n          </Button>\n        </Tooltip>\n        <DeleteStreamDialog\n          ref={this.dialogElement}\n          deleteId={deleteId}\n          history={history}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(DeleteStreamDialogOpener);\n\nDeleteStreamDialogOpener.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Container, Grid } from \"@material-ui/core\";\n\nimport StreamInfo from \"../model/StreamInfo\";\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport StreamDeviceDetailsCard from \"./StreamDeviceDetailsCard\";\nimport DeleteStreamDialogOpener from \"./DeleteStreamDialogOpener\";\n\nexport default function StreamDetailsPageContents(props) {\n  const { stream } = props;\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <StreamDeviceDetailsCard\n            cardTitle=\"Sender Details\"\n            device={stream.sender}\n            channel={stream.outputChannel}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <StreamDeviceDetailsCard\n            cardTitle=\"Receiver Details\"\n            device={stream.receiver}\n            channel={stream.inputChannel}\n          />\n        </Grid>\n        <Grid item xs={7}>\n          <DashboardCard title=\"Logs\" />\n        </Grid>\n        <Grid item xs={5}>\n          <DashboardCard title=\"Statistics\" />\n        </Grid>\n      </Grid>\n      <Box className=\"alignRightFloatPadded\">\n        <DeleteStreamDialogOpener deleteId={stream.id} />\n      </Box>\n    </Container>\n  );\n}\n\nStreamDetailsPageContents.propTypes = {\n  stream: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StreamInfo from \"../model/StreamInfo\";\nimport * as SampleData from \"../api/SampleData\";\nimport StreamDetailsPageContents from \"./StreamDetailsPageContents\";\nimport Page from \"../general/Page\";\n\nexport default function StreamDetailsPage(props) {\n  const {\n    location: {\n      state: { stream }\n    }\n  } = props;\n\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [`Stream Details`, `/Streams/Details/${stream.id}`]\n  ];\n\n  return (\n    <Page title=\"Stream Details\" breadcrumbs={breadcrumbs}>\n      <StreamDetailsPageContents stream={stream} />\n    </Page>\n  );\n}\n\nStreamDetailsPage.defaultProps = {\n  location: { state: { stream: SampleData.getSampleStream() } }\n};\n\nStreamDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      stream: PropTypes.instanceOf(StreamInfo)\n    })\n  })\n};\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport DashboardButton from \"./dashboard/DashboardButton\";\nimport DashboardCard from \"./dashboard/DashboardCard\";\nimport Page from \"./Page\";\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\n\nexport default function PathNotFoundPage() {\n  return (\n    <Page title=\"Error 404: Path not found\" breadcrumbs={[]}>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={6}>\n          <DashboardCard title=\"Sorry, that page doesn't exist!\">\n            {isAuthenticated() ? (\n              <DashboardButton href=\"/Home\">Go Home</DashboardButton>\n            ) : (\n              <DashboardButton href=\"/Login\">Go to Login</DashboardButton>\n            )}\n          </DashboardCard>\n        </Grid>\n      </Grid>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport ProtectedRoute from \"./ProtectedRoute\";\n\nimport LoginPage from \"../login/LoginPage\";\nimport HomePage from \"../homepage/HomePage\";\nimport DeviceListPage from \"../devicelist/DeviceListPage\";\nimport DeviceDetailsPage from \"../deviceDetailsPage/DeviceDetailsPage\";\nimport StreamListPage from \"../streamlist/StreamListPage\";\nimport CreateStreamPage from \"../createStream/CreateStreamPage\";\nimport LogListPage from \"../loglist/LogListPage\";\nimport CreateUserPage from \"../admin/createUser/CreateUserPage\";\nimport StreamDetailsPage from \"../streamDetails/StreamDetailsPage\";\nimport PathNotFoundPage from \"../general/PathNotFoundPage\";\n\nexport default function AppRouter() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <ProtectedRoute path=\"/Login\" render={() => <LoginPage />} />\n        <ProtectedRoute\n          path=\"/Home\"\n          authenticationRequired\n          render={() => {\n            return <HomePage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Devices/Details/:serialNumber\"\n          authenticationRequired\n          render={(location) => {\n            return <DeviceDetailsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Devices\"\n          authenticationRequired\n          render={() => {\n            return <DeviceListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/New\"\n          authenticationRequired\n          render={() => {\n            return <CreateStreamPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/Details/:streamId\"\n          authenticationRequired\n          render={(location) => {\n            return <StreamDetailsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams\"\n          authenticationRequired\n          render={() => {\n            return <StreamListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Logs\"\n          authenticationRequired\n          render={() => {\n            return <LogListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Admin/New\"\n          authenticationRequired\n          render={() => {\n            return <CreateUserPage />;\n          }}\n        />\n        <Route path=\"/\">\n          <PathNotFoundPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppRouter from \"./app/AppRouter\";\n\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n"],"sourceRoot":""}