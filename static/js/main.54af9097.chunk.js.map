{"version":3,"sources":["general/HeaderBar.jsx","general/DynamicBreadcrumb.jsx","general/Buttons/StreamButton.jsx","general/TitleButtons.jsx","general/Title.jsx","general/Page.jsx","general/dashboard/GridColumn.jsx","general/dashboard/DashboardCard.jsx","general/dashboard/DashboardButton.jsx","general/StatusIndicator.jsx","general/dialog/DialogBody.jsx","general/dialog/DialogButtons.jsx","general/dialog/Dialog.jsx","model/DeviceInfo.js","model/ConvertDataFormat.js","model/StreamInfo.js","api/StreamApi.js","streamlist/DeleteStreamDialog.jsx","streamlist/DeleteStreamDialogOpener.jsx","streamlist/StreamsTable.jsx","model/OutputChannelInfo.js","model/InputChannelInfo.js","model/LogInfo.js","api/SampleData.js","streamlist/StreamsTableWrapper.jsx","homepage/ActiveStreamCard.jsx","homepage/ActivityLogCard.jsx","homepage/DevicesCard.jsx","homepage/AdminPanelCard.jsx","homepage/HomePageContents.jsx","devicelist/TabPanel.jsx","devicelist/ChannelDetailsTableHead.jsx","devicelist/ChannelDetailsTableRow.jsx","devicelist/ChannelDetailsTable.jsx","api/DeviceApi.js","general/Buttons/DeleteDeviceButton.jsx","devicelist/ActionMenu.jsx","devicelist/DevicesTable.jsx","general/VerticalTabs.jsx","devicelist/DeviceListTabTable.jsx","DefaultMakeStylesTheme.js","devicelist/DeviceListPage.jsx","general/HorizontalTabPanel.jsx","loglist/LogsTable.jsx","api/LogApi.js","deviceDetailsPage/TabPanels/DeviceDetailsActivityPanel.jsx","deviceDetailsPage/TabPanels/DeviceDetailsNotesPanel.jsx","deviceDetailsPage/DeviceDetailsConciseRow.jsx","deviceDetailsPage/DeviceDetailsConciseTable.jsx","deviceDetailsPage/DeviceDetailsTabTable.jsx","deviceDetailsPage/DeviceNameDetail.jsx","deviceDetailsPage/DeviceDetailsPage.jsx","loglist/LogsTableWrapper.jsx","loglist/LogListPage.jsx","login/LoginFailedDialog.jsx","login/LoginConsole.jsx","api/AuthenticationApi.js","login/LoginPageContents.jsx","createStream/SearchBar.jsx","createStream/SelectDeviceTableRow.jsx","createStream/SelectDevicesTable.jsx","createStream/StreamingTable.jsx","createStream/CreateStreamPage.jsx","index.jsx","homepage/HomePage.jsx","login/LoginPage.jsx"],"names":["HeaderBar","props","classes","makeStyles","theme","menuButton","marginRight","spacing","className","AppBar","position","Toolbar","to","IconButton","edge","this","color","aria-label","Home","id","AccountCircle","React","Component","DynamicBreadcrumb","breadcrumbs","Box","padding","Breadcrumbs","map","crumb","i","Link","href","Typography","StreamButton","type","StyledButton","withStyles","root","background","borderRadius","border","height","margin","label","textTransform","Button","SwapHoriz","TitleButtons","activeClassName","exact","Title","title","deviceList","Page","children","Container","defaultProps","GridColumn","width","Grid","item","xs","container","DashboardCard","Paper","elevation","variant","gutterBottom","DashboardButton","minWidth","maxWidth","StatusIndicator","status","getStatusStyle","DialogBody","DialogButtons","button1","button2","onClick","name","autoFocus","Dialog","state","open","openDialog","bind","closeDialog","setState","cancelButton","actionButton","onClose","aria-labelledby","aria-describedby","DialogTitle","DeviceInfo","serial","lastCommunication","publicIpAddress","privateIpAddress","displayName","channels","deviceType","extras","serialNumber","publicIp","privateIp","convertToDataObject","databaseDevice","device","inputs","outputs","StreamInfo","sender","receiver","date","Date","toString","split","slice","join","time","getStream","streamId","a","axios","get","process","then","response","stream","data","outputChannel","encoder","inputChannel","decoder","getAllStreams","streams","Promise","all","deleteStream","delete","DeleteStreamDialog","dialogElement","createRef","confirmDelete","history","current","push","go","deleteId","finally","afterDelete","message","ref","DeleteStreamDialogOpener","Tooltip","Delete","withRouter","StreamsTable","columnInfo","field","render","rowData","filtering","sorting","align","export","detailPanel","icon","ExpandMore","openIcon","ExpandLess","tooltip","options","toolbar","headerStyle","backgroundColor","fontWeight","draggable","icons","SortArrow","ArrowDownward","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","TableContainer","columns","getColumnInfo","getDetailPanel","getOptions","getIcons","concat","Intl","DateTimeFormat","resolvedOptions","timeZone","OutputChannelInfo","port","InputChannelInfo","LogInfo","dateTime","level","sampleInputChannels","InChannelInfo","sampleOutputChannels","OutChannelInfo","getAllLogs","callback","dates","StreamsTableWrapper","dataSource","handleStreamsChange","catch","sampleSenders","sampleReceivers","ActiveStreamCard","StreamApi","style","justify","direction","ActivityLogCard","DevicesCard","AdminPanelCard","HomePageContents","alignItems","TabPanel","value","index","role","hidden","p","component","ChannelDetailsTableHead","TableRow","TableCell","ChannelDetailsTableRow","channel","ChannelDetailsTable","Table","TableHead","TableBody","getStatus","lastCommunicationString","lastCommunicationDate","now","getTime","getSenders","senders","output","SampleData","getReceivers","receivers","input","deleteDevice","deviceId","REACT_APP_DEVICE","updateDeviceName","updatedName","put","renderDeleteButton","openDeleteDialog","renderDeleteMenuItem","MenuItem","DeleteDeviceButton","button","useState","setOpen","useHistory","cancelDelete","DialogContent","DialogContentText","DialogActions","DeviceApi","location","pathname","endsWith","ActionMenu","anchorElement","setAnchorElement","handleClick","handleClose","event","currentTarget","element","aria-controls","aria-haspopup","size","MoreVert","Menu","anchorEl","keepMounted","Boolean","anchorOrigin","horizontal","vertical","transformOrigin","deviceInfo","lookup","Online","Pending","Error","Offline","DevicesTable","devices","maxHeight","components","search","exportButton","Filter","FilterList","Search","ResetSearch","Clear","Export","SaveAlt","VerticalTabs","handleChange","newTab","setValue","tabs","Tabs","onChange","orientation","indicatorColor","Tab","DeviceListTabTable","handleValueChange","handleSendersChange","handleReceiversChange","tabIndex","display","flexGrow","defaultMakeStylesTheme","palette","paper","borderRight","divider","DeviceListPage","useStyles","HorizontalTabPanel","bodyHeight","showTitle","maxBodyHeight","minBodyHeight","LogsTable","logs","cellStyle","getLogs","endpoint","resolve","log","getDeviceLogs","deviceSerialNumber","DeviceDetailsActivityPanel","handleLogsChange","LogApi","DeviceDetailsNotesPanel","DeviceDetailsConciseRow","getPropertyDisplayName","createTableCellContents","createInnerTable","DeviceDetailsConciseTable","getConciseProperties","property","DeviceDetailsTabTable","textColor","tabInfo","pointerEvents","getPanelContents","DeviceNameDetail","deviceName","editing","startEdit","cancelEditing","confirmEditing","setName","preventDefault","paddingLeft","paddingBottom","onSubmit","TextField","required","defaultValue","target","paddingRight","disableElevation","renderEditName","renderStaticName","DeviceDetailsPage","marginTop","LogsTableWrapper","logsDataSource","LogListPage","LoginFailedDialog","flexDirection","form","submit","LoginConsole","handleSubmit","username","setUsername","password","setPassword","noValidate","fullWidth","autoComplete","unknownErrorMessage","incorrectCredentialsMessage","post","error","reject","LoginPageContents","dialogOpen","dialogMessage","setDialogOpen","setDialogMessage","AuthenticationApi","SearchBar","right","marginLeft","breakpoints","up","searchIcon","justifyContent","inputRoot","placeholder","InputProps","startAdornment","InputAdornment","SelectDeviceTableRow","deviceDetails","ListItem","dense","ListItemText","primary","Collapse","in","timeout","unmountOnExit","List","disablePadding","secondary","Select","SelectDevicesTable","overflow","StreamingTable","selectedSenderID","selectedReceiverID","onSenderSelected","onReceiverSelected","inputChannelId","outputChannelId","selectedSender","selectedReceiver","alignContent","CreateStreamPage","ReactDOM","StrictMode","path","login","document","getElementById"],"mappings":"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KACA,gBACA,UACA,WACA,UACAiH,GACA,UACAzG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,UACAiH,GACA,UACAzG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,SACAiH,GACA,UACAzG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,QACAiH,GACA,UACAzG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,UACAiH,GACA,UACAzG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,UACAiH,GACA,UACAzG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,SACAiH,GACA,UACAzG,MW7DAsJ,CAAsB1C,MAIrB,SAAS2C,GAAa3C,GAC3BtF,KACGC,IAAIC,sDACJC,MAAK,SAAC+H,GACL5C,EACE4C,EAAU5H,KAAKvG,KAAI,SAACsF,GAClB,IAAIb,EAAW,GACXa,EAAS8I,QACX3J,EAAWa,EAAS8I,MAAMpO,KAAI,SAACoO,GAC7B,OAAO,IAAItD,GACTsD,EAAM7O,GACN6O,EAAMhB,QAAQhK,KACdgL,EAAMhB,QAAQvC,KACd,UAIN,IAAMxG,EAC0B,MAA9BiB,EAASjB,kBACL,QACAiB,EAASjB,kBACf,OAAO,IAAIF,GACTmB,EAASV,aACTP,EACAiB,EAASL,OAAOX,gBAChBgB,EAASL,OAAOV,iBAChBe,EAASL,OAAOT,YAChBiJ,GAAUnI,EAASjB,mBACnBI,EACA,UACA,CAAC,6CAKRmH,OAAM,YX0CJ,SAAsBL,GA0M3BA,EAzMwB,CACtB,IAAIpH,GACF,eACA,KACA,gBACA,UACA,aACA,SACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,QACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,SACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,QACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,SACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,SACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,QACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,SACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,QACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACA+G,GACA,UACAvG,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,SACA+G,GACA,UACAvG,MW/OAsJ,CAAwB1C,MAIvB,SAAS8C,GAAaC,GAC3B,OAAOrI,KACJgB,OADI,UACMd,4ZAAYoI,iBADlB,YACsCD,IAC1C1C,OAAM,eAGJ,SAAe4C,GAAtB,qC,gDAAO,WAAgCF,EAAUG,GAA1C,UAAAzI,EAAA,+EACEC,KACJyI,IAAIvI,4ZAAYoI,iBAAkB,CACjC3J,aAAc0J,EACd9J,YAAaiK,IAEd7C,OAAM,gBANJ,4C,sBC9FP,SAAS+C,GAAmBC,GAC1B,OACE,cAAC1N,EAAA,EAAD,CACE3B,GAAG,YACHgD,QAAQ,WACRnD,MAAM,YACN+D,QAASyL,EAJX,oBAWJ,SAASC,GAAqBD,GAC5B,OACE,cAACE,GAAA,EAAD,C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","file":"static/js/main.54af9097.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\nimport { AccountCircle, Home } from \"@material-ui/icons/\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default class HeaderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      menuButton: {\n        marginRight: theme.spacing(2)\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"headerBar\">\n        <AppBar position=\"static\">\n          <Toolbar className=\"darkGrey\">\n            <div className=\"headerTitle\">\n              <NavLink to=\"/\" className=\"headerTitle\">\n                <IconButton\n                  edge=\"start\"\n                  className={this.classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"menu\"\n                >\n                  <Home />\n                </IconButton>\n              </NavLink>\n              Switchboard\n            </div>\n            <IconButton id=\"acctBtn\" color=\"inherit\">\n              <AccountCircle />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Box, Breadcrumbs, Link, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default function DynamicBreadcrumb(props) {\n  const { breadcrumbs } = props;\n  return (\n    <Box padding=\"2em 0em 0em 1em\">\n      <Breadcrumbs aria-label=\"breadcrumb\" id=\"breadcrumbParent\">\n        {breadcrumbs.map((crumb, i) => {\n          return (\n            <Link\n              color=\"inherit\"\n              href={crumb[1]}\n              id={`breadcrumb${i}`}\n              key={`breadcrumb ${crumb[0]}`}\n            >\n              <Typography color=\"textPrimary\">{crumb[0]}</Typography>\n            </Link>\n          );\n        })}\n      </Breadcrumbs>\n    </Box>\n  );\n}\nDynamicBreadcrumb.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired\n};\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { SwapHoriz } from \"@material-ui/icons/\";\n\nexport default function StreamButton(props) {\n  const { type } = props;\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      padding: \"0 5px\",\n      margin: \"1em\"\n    },\n    label: {\n      textTransform: \"\"\n    }\n  })(Button);\n\n  return (\n    <StyledButton type={type}>\n      <div className=\"buttonText\">\n        <SwapHoriz />\n        Stream\n      </div>\n    </StyledButton>\n  );\n}\n\nStreamButton.propTypes = {\n  type: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport StreamButton from \"./Buttons/StreamButton\";\n\nexport default function TitleButtons() {\n  return (\n    <div className=\"alignRightFloat\">\n      <NavLink\n        to=\"/Streaming\"\n        activeClassName=\"hideLinkStyle\"\n        className=\"hideLinkStyle\"\n        exact\n      >\n        <StreamButton type=\"submit\" />\n      </NavLink>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TitleButtons from \"./TitleButtons\";\n\nexport default function Title(props) {\n  const { title, deviceList } = props;\n  return (\n    <Box className=\"flexContents headerAreaUnderline\">\n      <div className=\"title\">{title}</div>\n      {deviceList ? <TitleButtons /> : <></>}\n    </Box>\n  );\n}\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  deviceList: PropTypes.bool.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"@material-ui/core\";\nimport DynamicBreadcrumb from \"./DynamicBreadcrumb\";\nimport Title from \"./Title\";\nimport HeaderBar from \"./HeaderBar\";\n\nexport default function Page(props) {\n  const { breadcrumbs, title, deviceList, children } = props;\n  return (\n    <>\n      <HeaderBar />\n      <Container>\n        <DynamicBreadcrumb breadcrumbs={breadcrumbs} />\n        <Title title={title} deviceList={deviceList} />\n        {children}\n      </Container>\n    </>\n  );\n}\n\nPage.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n    .isRequired,\n  title: PropTypes.string.isRequired,\n  deviceList: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\nPage.defaultProps = {\n  deviceList: false\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function GridColumn(props) {\n  const { width, spacing, children } = props;\n  return (\n    <Grid item xs={width}>\n      <Grid container spacing={spacing}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\nGridColumn.propTypes = {\n  width: PropTypes.number.isRequired,\n  spacing: PropTypes.number,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nGridColumn.defaultProps = {\n  spacing: 3\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Typography, Paper } from \"@material-ui/core\";\n\nexport default function DashboardCard(props) {\n  const { title, children } = props;\n  return (\n    <>\n      <Paper className=\"dashboardCard\" elevation={2}>\n        <Typography variant=\"h5\" gutterBottom>\n          {title}\n        </Typography>\n        {children}\n      </Paper>\n    </>\n  );\n}\n\nDashboardCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nDashboardCard.defaultProps = {\n  children: \"\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Link, Button, withStyles } from \"@material-ui/core\";\n\nexport default function DashboardButton(props) {\n  const { href, children } = props;\n\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      minWidth: 100,\n      maxWidth: 200,\n      padding: \"0 5px\",\n      textTransform: \"none\"\n    }\n  })(Button);\n  return (\n    <Link color=\"inherit\" href={href}>\n      <StyledButton>{children}</StyledButton>\n    </Link>\n  );\n}\n\nDashboardButton.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class StatusIndicator extends React.Component {\n  getStatusStyle() {\n    const { status } = this.props;\n    switch (status) {\n      case \"Online\":\n        return \"green statusIndicatorBody statusTextOnline \";\n      case \"Pending\":\n        return \"yellow statusIndicatorBody statusTextOnline\";\n      case \"Error\":\n        return \"red statusIndicatorBody statusTextOnline\";\n      default:\n        return \"lightGrey statusIndicatorBody statusTextOffline\";\n    }\n  }\n\n  render() {\n    const { status } = this.props;\n    return <div className={this.getStatusStyle()}>{status}</div>;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.oneOf([\"Online\", \"Offline\", \"Error\", \"Pending\"]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogContentText from \"@material-ui/core/DialogContentText\";\n\nexport default function DialogBody(props) {\n  const { children } = props;\n  return (\n    <MuiDialogContent>\n      <MuiDialogContentText id=\"dialog-description\">\n        {children}\n      </MuiDialogContentText>\n    </MuiDialogContent>\n  );\n}\nDialogBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\n\nexport default function DialogButtons(props) {\n  const { button1, button2 } = props;\n\n  return (\n    <MuiDialogActions>\n      <Button onClick={button1.onClick} color=\"primary\">\n        {button1.name}\n      </Button>\n      <Button onClick={button2.onClick} color=\"secondary\" autoFocus>\n        {button2.name}\n      </Button>\n    </MuiDialogActions>\n  );\n}\n\nDialogButtons.propTypes = {\n  button1: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired,\n  button2: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MuiDialog from \"@material-ui/core/Dialog/Dialog\";\nimport { DialogTitle } from \"@material-ui/core\";\nimport DialogBody from \"./DialogBody\";\nimport DialogButtons from \"./DialogButtons\";\n\nexport default class Dialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.openDialog = this.openDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.setState({ open: true });\n  }\n\n  closeDialog() {\n    return this.setState({ open: false });\n  }\n\n  render() {\n    const cancelButton = {\n      name: \"Cancel\",\n      onClick: this.closeDialog\n    };\n\n    const { title, actionButton, children } = this.props;\n    const { open } = this.state;\n    return (\n      <MuiDialog\n        open={open}\n        onClose={() => this.closeDialog}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n        id=\"dialog\"\n      >\n        <DialogTitle>{title}</DialogTitle>\n        <DialogBody>{children}</DialogBody>\n        <DialogButtons button1={cancelButton} button2={actionButton} />\n      </MuiDialog>\n    );\n  }\n}\n\nDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  actionButton: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","export default class DeviceInfo {\n  constructor(\n    serial,\n    lastCommunication,\n    publicIpAddress,\n    privateIpAddress,\n    displayName,\n    status,\n    channels,\n    deviceType,\n    extras\n  ) {\n    this.serialNumber = serial;\n    this.lastCommunication = lastCommunication;\n    this.publicIp = publicIpAddress;\n    this.privateIp = privateIpAddress;\n    this.name = displayName;\n    this.status = status;\n    this.channels = channels;\n    this.deviceType = deviceType;\n    this.extras = extras;\n  }\n\n  static getConciseProperties() {\n    return [\n      \"name\",\n      \"serialNumber\",\n      \"status\",\n      \"publicIp\",\n      \"privateIp\",\n      \"channels\"\n    ];\n  }\n}\n","import DeviceInfo from \"./DeviceInfo\";\n\nexport function convertToDataObject(databaseDevice) {\n  return new DeviceInfo(\n    databaseDevice.serialNumber,\n    databaseDevice.lastCommunication,\n    databaseDevice.device.publicIpAddress,\n    databaseDevice.device.privateIpAddress,\n    databaseDevice.device.displayName,\n    databaseDevice.device.status,\n    databaseDevice.inputs || databaseDevice.outputs,\n    databaseDevice.inputs ? \"receiver\" : \"sender\"\n  );\n}\n\nexport function convertToServiceObject(deviceInfo) {\n  const serviceObject = {\n    serialNumber: deviceInfo.serialNumber,\n    lastCommunication: deviceInfo.lastCommunication,\n    device: {\n      serialNumber: deviceInfo.serialNumber,\n      publicIpAddress: deviceInfo.publicIp,\n      privateIpAddress: deviceInfo.privateIp,\n      displayName: deviceInfo.name,\n      status: deviceInfo.status\n    }\n  };\n  if (deviceInfo.deviceType === \"sender\") {\n    serviceObject.outputs = deviceInfo.channels;\n  } else {\n    serviceObject.inputs = deviceInfo.channels;\n  }\n  return serviceObject;\n}\n","export default class StreamInfo {\n  // to be used once backend has date, status, type, and time fields\n  // constructor(id, date, sender, receiver, status, type, time, extras) {\n  //     this.id = id;\n  //     this.date = new Date(date).toString().split(\" \").slice(0, 5).join(\" \");\n  //     this.sender = sender;\n  //     this.receiver = receiver;\n  //     this.status = status;\n  //     this.type = type;\n  //     this.time = time;\n  //     this.extras = extras;\n  // }\n\n  // temporary with static fields until backend is up to snuff\n  constructor(id, sender, receiver, extras) {\n    this.id = id;\n    this.date = new Date(\"2020-10-31T08:15:30\")\n      .toString()\n      .split(\" \")\n      .slice(0, 5)\n      .join(\" \");\n    this.sender = sender;\n    this.receiver = receiver;\n    this.status = \"Online\";\n    this.type = \"Type 1\";\n    this.time = \"00:34:44\";\n    this.extras = extras;\n  }\n}\n","import axios from \"axios\";\nimport { convertToDataObject } from \"../model/ConvertDataFormat\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport async function getStream(streamId) {\n  return axios\n    .get(`${process.env.REACT_APP_STREAM}/${streamId}`)\n    .then((response) => {\n      const stream = response.data;\n      return new StreamInfo(\n        stream.id,\n        convertToDataObject(stream.outputChannel.encoder),\n        convertToDataObject(stream.inputChannel.decoder),\n        [\"Additional stream info goes here.\"]\n      );\n    });\n}\n\nexport async function getAllStreams() {\n  return axios.get(process.env.REACT_APP_STREAM).then((streams) => {\n    return Promise.all(\n      streams.data.map((streamId) => {\n        return getStream(streamId);\n      })\n    );\n  });\n}\n\nexport async function deleteStream(streamId) {\n  return axios.delete(`${process.env.REACT_APP_STREAM}/${streamId}`);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../general/dialog/Dialog\";\nimport { deleteStream } from \"../api/StreamApi\";\n\nexport default class DeleteStreamDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  afterDelete() {\n    const { history } = this.props;\n    this.dialogElement.current.closeDialog();\n    history.push(\"/Streaming\");\n    history.go(0);\n  }\n\n  confirmDelete() {\n    const { deleteId } = this.props;\n    deleteStream(deleteId).finally(this.afterDelete());\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId } = this.props;\n    const title = \"Confirm Delete\";\n    const message = `Are you sure you want to end stream ${deleteId}?`;\n\n    const actionButton = {\n      name: \"Confirm\",\n      onClick: this.confirmDelete\n    };\n\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        {message}\n      </Dialog>\n    );\n  }\n}\n\nDeleteStreamDialog.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport { withRouter } from \"react-router-dom\";\n\nimport DeleteStreamDialog from \"./DeleteStreamDialog\";\n\nclass DeleteStreamDialogOpener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId, history } = this.props;\n    return (\n      <>\n        <Tooltip title=\"Delete Stream\" aria-label=\"delete stream\">\n          <IconButton onClick={this.openDialog}>\n            <Delete />\n          </IconButton>\n        </Tooltip>\n        <DeleteStreamDialog\n          ref={this.dialogElement}\n          deleteId={deleteId}\n          history={history}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(DeleteStreamDialogOpener);\n\nDeleteStreamDialogOpener.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\n\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport DeleteStreamDialogOpener from \"./DeleteStreamDialogOpener\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default class StreamsTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.columnInfo = [\n      {\n        title: \"ID\",\n        field: \"id\"\n      },\n      {\n        title: \"Date\",\n        field: \"date\"\n      },\n      {\n        title: \"Sender\",\n        field: \"sender.name\"\n      },\n      {\n        title: \"Receiver\",\n        field: \"receiver.name\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        }\n      },\n      {\n        title: \"Type\",\n        field: \"type\"\n      },\n      {\n        title: \"Time Elapsed\",\n        field: \"time\"\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <DeleteStreamDialogOpener deleteId={rowData.id} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n    this.detailPanel = [\n      {\n        icon: ExpandMore,\n        openIcon: ExpandLess,\n        tooltip: \"Show Stream Details\",\n        render: function DetailPanel(rowData) {\n          return (\n            <div className=\"lightestGrey\">\n              <Typography variant=\"h6\">{rowData.extras}</Typography>\n            </div>\n          );\n        }\n      }\n    ];\n    this.options = {\n      toolbar: false,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: false,\n      draggable: false\n    };\n    this.icons = {\n      SortArrow: ArrowDownward,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  getColumnInfo() {\n    return this.columnInfo;\n  }\n\n  getDetailPanel() {\n    return this.detailPanel;\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  getIcons() {\n    return this.icons;\n  }\n\n  render() {\n    const { streams } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer>\n            <MaterialTable\n              columns={this.getColumnInfo()}\n              data={streams}\n              detailPanel={this.getDetailPanel()}\n              options={this.getOptions()}\n              icons={this.getIcons()}\n            />\n          </TableContainer>\n          <div className=\"textAlignRightPadded\">\n            {\"Time Zone: \".concat(\n              Intl.DateTimeFormat().resolvedOptions().timeZone\n            )}\n          </div>\n        </Box>\n      </>\n    );\n  }\n}\n\nStreamsTable.propTypes = {\n  streams: PropTypes.arrayOf(PropTypes.instanceOf(StreamInfo)).isRequired\n};\n","export default class OutputChannelInfo {\n  constructor(id, name, port, encoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.encoder = encoder;\n  }\n}\n","export default class InputChannelInfo {\n  constructor(id, name, port, decoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.decoder = decoder;\n  }\n}\n","export default class LogInfo {\n  constructor(id, dateTime, level, message) {\n    this.id = id;\n    this.dateTime = new Date(dateTime)\n      .toString()\n      .split(\" \")\n      .slice(0, 5)\n      .join(\" \");\n    this.level = level;\n    this.message = message;\n  }\n}\n","import DeviceInfo from \"../model/DeviceInfo\";\nimport OutChannelInfo from \"../model/OutputChannelInfo\";\nimport InChannelInfo from \"../model/InputChannelInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport LogInfo from \"../model/LogInfo\";\n\nconst extras = [\"Additional Device details go here\"];\nconst sampleInputChannels = [\n  new InChannelInfo(1, \"Input ch 1\", 500, null),\n  new InChannelInfo(2, \"Input ch 2\", 456, null),\n  new InChannelInfo(3, \"Input ch 3\", 800, null)\n];\nconst sampleOutputChannels = [\n  new OutChannelInfo(1, \"Output ch 1\", 500, null),\n  new OutChannelInfo(2, \"Output ch 2\", 456, null),\n  new OutChannelInfo(3, \"Output ch 3\", 800, null)\n];\n\nexport function getSenders(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:30:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 3\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:40:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 4\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:50:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 5\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:60:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 6\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:70:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 7\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:80:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 8\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:90:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 9\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n\n  callback(sampleSenders);\n}\n\nexport function getSampleSender() {\n  return new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n}\n\nexport function getReceivers(callback) {\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:03:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 3\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:04:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 4\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:05:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 5\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:06:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 6\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:07:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 7\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:08:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 8\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:09:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 9\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:11:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 11\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:21:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 12\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:31:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 13\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:41:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 14\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:51:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 15\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:61:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 16\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:71:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 17\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:81:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 18\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:91:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 19\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  callback(sampleReceivers);\n}\n\nexport function getAllStreams() {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  return [\n    new StreamInfo(1, sampleSenders[0], sampleReceivers[0], [\n      \"Additional Stream Details go here\"\n    ]),\n    new StreamInfo(2, sampleSenders[1], sampleReceivers[1], [\n      \"Additional Stream Details go here\"\n    ]),\n    new StreamInfo(3, sampleSenders[1], sampleReceivers[0], [\n      \"Additional Stream Details go here\"\n    ])\n  ];\n}\n\nexport function getAllLogs(callback) {\n  const dates = [\n    new Date(\"2020-10-31T15:53:23\"),\n    new Date(\"2020-11-13T12:36:30\"),\n    new Date(\"2020-11-13T08:24:30\")\n  ];\n\n  const sampleLogs = [\n    new LogInfo(1, dates[0], \"Info\", \"Log 1 info\"),\n    new LogInfo(2, dates[1], \"Info\", \"Log 2 info\"),\n    new LogInfo(3, dates[2], \"Info\", \"Log 3 info\")\n  ];\n\n  callback(sampleLogs);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StreamsTable from \"./StreamsTable\";\nimport { getAllStreams } from \"../api/SampleData\";\n\nexport default class StreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: []\n    };\n    this.dataSource = props.dataSource;\n    this.handleStreamsChange = this.handleStreamsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource\n      .getAllStreams()\n      .then(this.handleStreamsChange)\n      .catch(() => {\n        this.handleStreamsChange(getAllStreams());\n      });\n  }\n\n  handleStreamsChange(streams) {\n    this.setState({\n      streams\n    });\n  }\n\n  render() {\n    const { streams } = this.state;\n    return <StreamsTable streams={streams} />;\n  }\n}\n\nStreamsTableWrapper.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\nimport StreamsTableWrapper from \"../streamlist/StreamsTableWrapper\";\n\nimport * as StreamApi from \"../api/StreamApi\";\n\nexport default function ActiveStreamCard() {\n  const dataSource = StreamApi;\n\n  return (\n    <DashboardCard title=\"Active Streams\" style={{ height: \"100%\" }}>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={12}>\n          <StreamsTableWrapper dataSource={dataSource} />\n        </Grid>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Streaming\">See more</DashBoardButton>\n        </Grid>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Streaming/New\">Start Stream</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function ActivityLogCard() {\n  return (\n    <DashboardCard title=\"Activity Logs\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Logs\">View All</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function DevicesCard() {\n  return (\n    <DashboardCard title=\"Devices\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Devices\">View Senders</DashBoardButton>\n        </Grid>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Devices\">View Receivers</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function AdminPanelCard() {\n  return (\n    <DashboardCard title=\"Admin Panel\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Admin\">View Users</DashBoardButton>\n        </Grid>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Admin\">Create a User</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport GridColumn from \"../general/dashboard/GridColumn\";\nimport ActiveStreamCard from \"./ActiveStreamCard\";\nimport ActivityLogCard from \"./ActivityLogCard\";\nimport DevicesCard from \"./DevicesCard\";\nimport AdminPanelCard from \"./AdminPanelCard\";\n\nexport default function HomePageContents() {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"stretch\"\n      direction=\"row\"\n      spacing={3}\n    >\n      <Grid item xs={6}>\n        <Grid style={{ height: \"100%\" }}>\n          <ActiveStreamCard />\n        </Grid>\n      </Grid>\n      <GridColumn width={6}>\n        <Grid item xs={12}>\n          <DevicesCard />\n        </Grid>\n        <Grid item xs={12}>\n          <ActivityLogCard />\n        </Grid>\n        <Grid item xs={12}>\n          <AdminPanelCard />\n        </Grid>\n      </GridColumn>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default function TabPanel(props) {\n  const { children, value, index } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n    >\n      {value === index && (\n        <Box p={0}>\n          <Typography component=\"span\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.element.isRequired,\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function ChannelDetailsTableHead() {\n  return (\n    <TableRow>\n      <TableCell className=\"lightGrey\">ID</TableCell>\n      <TableCell className=\"lightGrey\">Name</TableCell>\n      <TableCell className=\"lightGrey\">Port</TableCell>\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\n\nexport default function ChannelDetailsTableRow(props) {\n  const {\n    channel: { id, name, port }\n  } = props;\n  return (\n    <TableRow>\n      <TableCell>{id}</TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{port}</TableCell>\n    </TableRow>\n  );\n}\nChannelDetailsTableRow.propTypes = {\n  channel: PropTypes.oneOfType([\n    PropTypes.instanceOf(InputChannelInfo),\n    PropTypes.instanceOf(OutputChannelInfo)\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Table, TableBody, TableHead } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport ChannelDetailsTableHead from \"./ChannelDetailsTableHead\";\nimport ChannelDetailsTableRow from \"./ChannelDetailsTableRow\";\n\nexport default function ChannelDetailsTable(props) {\n  const { channels } = props;\n  return (\n    <Table className=\"flexContents\">\n      <TableHead>\n        <ChannelDetailsTableHead />\n      </TableHead>\n      <TableBody>\n        {channels.map((channel) => {\n          return (\n            <ChannelDetailsTableRow channel={channel} key={channel.name} />\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\nChannelDetailsTable.propTypes = {\n  channels: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.instanceOf(InputChannelInfo),\n      PropTypes.instanceOf(OutputChannelInfo)\n    ])\n  ).isRequired\n};\n","import axios from \"axios\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport * as SampleData from \"./SampleData\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\n\nfunction getStatus(lastCommunicationString) {\n  if (!lastCommunicationString) {\n    return \"Pending\";\n  }\n\n  const lastCommunicationDate = new Date(`${lastCommunicationString}Z`);\n  const diff = Date.now() - lastCommunicationDate.getTime();\n  const tenMinutes = 10 * 60 * 1000;\n  if (diff < tenMinutes) {\n    return \"Online\";\n  }\n  return \"Offline\";\n}\n\nexport function getSenders(callback) {\n  axios\n    .get(process.env.REACT_APP_ENCODER)\n    .then((senders) => {\n      callback(\n        senders.data.map((sender) => {\n          let channels = [];\n          if (sender.output) {\n            channels = sender.output.map((output) => {\n              return new OutputChannelInfo(\n                output.id,\n                output.channel.name,\n                output.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            sender.lastCommunication == null\n              ? \"Never\"\n              : sender.lastCommunication;\n          return new DeviceInfo(\n            sender.serialNumber,\n            lastCommunication,\n            sender.device.publicIpAddress,\n            sender.device.privateIpAddress,\n            sender.device.displayName,\n            getStatus(sender.lastCommunication),\n            channels,\n            \"encoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getSenders(callback);\n    });\n}\n\nexport function getReceivers(callback) {\n  axios\n    .get(process.env.REACT_APP_DECODER)\n    .then((receivers) => {\n      callback(\n        receivers.data.map((receiver) => {\n          let channels = [];\n          if (receiver.input) {\n            channels = receiver.input.map((input) => {\n              return new InputChannelInfo(\n                input.id,\n                input.channel.name,\n                input.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            receiver.lastCommunication == null\n              ? \"Never\"\n              : receiver.lastCommunication;\n          return new DeviceInfo(\n            receiver.serialNumber,\n            lastCommunication,\n            receiver.device.publicIpAddress,\n            receiver.device.privateIpAddress,\n            receiver.device.displayName,\n            getStatus(receiver.lastCommunication),\n            channels,\n            \"decoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getReceivers(callback);\n    });\n}\n\nexport function deleteDevice(deviceId) {\n  return axios\n    .delete(`${process.env.REACT_APP_DEVICE}/${deviceId}`)\n    .catch(() => {});\n}\n\nexport async function updateDeviceName(deviceId, updatedName) {\n  return axios\n    .put(process.env.REACT_APP_DEVICE, {\n      serialNumber: deviceId,\n      displayName: updatedName\n    })\n    .catch(() => {});\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PropTypes from \"prop-types\";\nimport { MenuItem } from \"@material-ui/core\";\nimport * as DeviceApi from \"../../api/DeviceApi\";\n\nfunction renderDeleteButton(openDeleteDialog) {\n  return (\n    <Button\n      id=\"deleteBtn\"\n      variant=\"outlined\"\n      color=\"secondary\"\n      onClick={openDeleteDialog}\n    >\n      Delete\n    </Button>\n  );\n}\n\nfunction renderDeleteMenuItem(openDeleteDialog) {\n  return (\n    <MenuItem onClick={openDeleteDialog}>\n      <span className=\"warningText\">Delete</span>\n    </MenuItem>\n  );\n}\n\nexport default function DeleteDeviceButton(props) {\n  const { button, deleteId } = props;\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n\n  const openDeleteDialog = () => {\n    return setOpen(true);\n  };\n  const cancelDelete = () => {\n    return setOpen(false);\n  };\n  const confirmDelete = () => {\n    DeviceApi.deleteDevice(deleteId).then(() => {\n      if (history.location.pathname.endsWith(\"Devices\")) {\n        history.go(0);\n      } else {\n        history.push(\"/Devices\");\n      }\n    });\n    return setOpen(false);\n  };\n\n  return (\n    <>\n      {button\n        ? renderDeleteButton(openDeleteDialog)\n        : renderDeleteMenuItem(openDeleteDialog)}\n      <Dialog\n        open={open}\n        onClose={cancelDelete}\n        aria-labelledby=\"delete-stream-dialog-title\"\n        aria-describedby=\"delete-stream-dialog-description\"\n        id=\"delete-stream-dialog\"\n      >\n        <DialogTitle id=\"delete-stream-dialog-title\">\n          Confirm Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"delete-stream-dialog-description\">\n            Are you sure you want to delete this device?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button id=\"cancelDeleteBtn\" onClick={cancelDelete} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            id=\"confirmDeleteBtn\"\n            onClick={confirmDelete}\n            color=\"secondary\"\n            autoFocus\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nDeleteDeviceButton.propTypes = {\n  button: PropTypes.bool.isRequired,\n  deleteId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { MoreVert } from \"@material-ui/icons/\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeleteDeviceButton from \"../general/Buttons/DeleteDeviceButton\";\n\nexport default class ActionMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorElement: null\n    };\n\n    this.setAnchorElement = this.setAnchorElement.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick(event) {\n    this.setAnchorElement(event.currentTarget);\n  }\n\n  handleClose() {\n    this.setAnchorElement(null);\n  }\n\n  setAnchorElement(element) {\n    this.setState({\n      anchorElement: element\n    });\n  }\n\n  render() {\n    const { anchorElement } = this.state;\n    const { device } = this.props;\n    return (\n      <>\n        <IconButton\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n          size=\"small\"\n        >\n          <MoreVert />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorElement}\n          keepMounted\n          open={Boolean(anchorElement)}\n          onClose={this.handleClose}\n          anchorOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n          transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        >\n          <MenuItem onClick={this.handleClose}>\n            <NavLink\n              to={{\n                pathname: `/Devices/Details/${device.name}`,\n                state: { device }\n              }}\n              className=\"hideLinkStyle\"\n            >\n              View Details\n            </NavLink>\n          </MenuItem>\n          <MenuItem onClick={this.handleClose}>\n            Start stream with this as receiver\n          </MenuItem>\n          <DeleteDeviceButton button={false} deleteId={device.serialNumber} />\n        </Menu>\n      </>\n    );\n  }\n}\n\nActionMenu.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  FilterList,\n  Search,\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable, { MTableToolbar } from \"material-table\";\n\nimport ChannelDetailsTable from \"./ChannelDetailsTable\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport ActionMenu from \"./ActionMenu\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nfunction getComponents() {\n  return {\n    /*  eslint-disable react/jsx-props-no-spreading */\n    Toolbar: function Components(props) {\n      return (\n        <div className=\"lightestGrey\">\n          <MTableToolbar {...props} />\n        </div>\n      );\n    }\n  };\n}\n\nfunction buildNavlink(deviceInfo) {\n  return (\n    <NavLink\n      to={{\n        pathname: `/Devices/Details/${deviceInfo.name}`,\n        state: { device: deviceInfo }\n      }}\n    >\n      {deviceInfo.name}\n    </NavLink>\n  );\n}\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"Name\",\n      field: \"name\",\n      render: (rowData) => buildNavlink(rowData)\n    },\n    {\n      title: \"Serial Number\",\n      field: \"serialNumber\"\n    },\n    {\n      title: \"Status\",\n      field: \"status\",\n      render: function Status(rowData) {\n        return <StatusIndicator status={rowData.status} />;\n      },\n      lookup: {\n        Online: \"Online\",\n        Pending: \"Pending\",\n        Error: \"Error\",\n        Offline: \"Offline\"\n      }\n    },\n    {\n      title: \"Private IP Address\",\n      field: \"privateIp\"\n    },\n    {\n      title: \"Public IP Address\",\n      field: \"publicIp\"\n    },\n    {\n      title: \"Actions\",\n      field: \"action\",\n      filtering: false,\n      sorting: false,\n      render: function Actions(rowData) {\n        return <ActionMenu device={rowData} />;\n      },\n      align: \"center\",\n      export: false\n    }\n  ];\n}\n\nfunction getDetailPanel() {\n  return [\n    {\n      icon: ExpandMore,\n      openIcon: ExpandLess,\n      tooltip: \"Show Device Details\",\n      render: function DetailPanel(rowData) {\n        return (\n          <div className=\"lightestGrey\" style={{ padding: \"1.5em\" }}>\n            <Typography variant=\"h6\">Channels</Typography>\n            <ChannelDetailsTable channels={rowData.channels} />\n          </div>\n        );\n      }\n    }\n  ];\n}\n\nfunction getOptions() {\n  return {\n    toolbar: true,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: true,\n    draggable: false\n  };\n}\n\nfunction getIcons() {\n  return {\n    Filter: FilterList,\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function DevicesTable(props) {\n  const { title, devices } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer style={{ maxHeight: 570 }}>\n          <MaterialTable\n            title={title}\n            components={getComponents()}\n            columns={getColumnInfo()}\n            data={devices}\n            detailPanel={getDetailPanel()}\n            options={getOptions()}\n            icons={getIcons()}\n          />\n        </TableContainer>\n      </Box>\n    </>\n  );\n}\n\nDevicesTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  devices: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport { Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default class VerticalTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event, newTab) {\n    const { setValue } = this.props;\n    setValue(newTab);\n  }\n\n  render() {\n    const {\n      value,\n      classes: { tabs }\n    } = this.props;\n\n    return (\n      <>\n        <Tabs\n          value={value}\n          onChange={this.handleChange}\n          aria-label=\"Vertical tabs\"\n          className={`${tabs} lightGrey blackFont flexContents`}\n          orientation=\"vertical\"\n          indicatorColor=\"primary\"\n          variant=\"scrollable\"\n        >\n          <Tab\n            label=\"Senders\"\n            id=\"vertical-tab-0\"\n            aria-controls=\"vertical-tabpanel-0\"\n          />\n          <Tab\n            label=\"Receivers\"\n            id=\"vertical-tab-1\"\n            aria-controls=\"vertical-tabpanel-1\"\n          />\n        </Tabs>\n      </>\n    );\n  }\n}\n\nVerticalTabs.propTypes = {\n  setValue: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TabPanel from \"./TabPanel\";\nimport DevicesTable from \"./DevicesTable\";\nimport VerticalTabs from \"../general/VerticalTabs\";\n\nexport default class DeviceListTabTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      value: 0\n    };\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { dataSource } = this.props;\n    dataSource.getSenders(this.handleSendersChange);\n    dataSource.getReceivers(this.handleReceiversChange);\n  }\n\n  handleValueChange(tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  render() {\n    const { receivers, senders, value } = this.state;\n    const { classes } = this.props;\n    return (\n      <>\n        <Box\n          style={{\n            display: \"flex\",\n            flexGrow: 1\n          }}\n        >\n          <VerticalTabs\n            value={value}\n            setValue={this.handleValueChange}\n            classes={classes}\n          />\n          <TabPanel value={value} index={0} className=\"lightGreyBorder\">\n            <DevicesTable devices={senders} title=\"List of Senders\" />\n          </TabPanel>\n          <TabPanel value={value} index={1} className=\"lightGreyBorder\">\n            <DevicesTable devices={receivers} title=\"List of Receivers\" />\n          </TabPanel>\n        </Box>\n      </>\n    );\n  }\n}\nDeviceListTabTable.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default function defaultMakeStylesTheme() {\n  return makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    },\n    tabs: {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }));\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Page from \"../general/Page\";\nimport DeviceListTabTable from \"./DeviceListTabTable\";\nimport * as useStyles from \"../DefaultMakeStylesTheme\";\n\nexport default function DeviceListPage(props) {\n  const { dataSource } = props;\n  const breadcrumb = [\n    [\"Home\", \"/Home\"],\n    [\"My Devices\", \"/Devices\"]\n  ];\n  return (\n    <Page title=\"My Devices\" breadcrumbs={breadcrumb} deviceList>\n      <DeviceListTabTable classes={useStyles} dataSource={dataSource} />\n    </Page>\n  );\n}\n\nDeviceListPage.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nexport default function HorizontalTabPanel(props) {\n  const { value, index, children } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </div>\n  );\n}\n\nHorizontalTabPanel.propTypes = {\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Search,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\nimport LogInfo from \"../model/LogInfo\";\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"ID\",\n      field: \"id\",\n      cellStyle: { width: \"10%\" }\n    },\n    {\n      title: \"Date\",\n      field: \"dateTime\",\n      cellStyle: { width: \"15%\" }\n    },\n    {\n      title: \"Level\",\n      field: \"level\",\n      cellStyle: { width: \"10%\" }\n    },\n    {\n      title: \"Message\",\n      field: \"message\",\n      sorting: false\n    }\n  ];\n}\n\nfunction getOptions(bodyHeight) {\n  return {\n    toolbar: true,\n    showTitle: false,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: false,\n    draggable: false,\n    maxBodyHeight: bodyHeight,\n    minBodyHeight: bodyHeight\n  };\n}\n\nfunction getIcons() {\n  return {\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function LogsTable(props) {\n  const { logs, bodyHeight, title } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer>\n          <MaterialTable\n            title={title}\n            columns={getColumnInfo()}\n            data={logs}\n            options={getOptions(bodyHeight)}\n            icons={getIcons()}\n          />\n        </TableContainer>\n        <div className=\"textAlignRightPadded\">\n          {\"Time Zone: \".concat(\n            Intl.DateTimeFormat().resolvedOptions().timeZone\n          )}\n        </div>\n      </Box>\n    </>\n  );\n}\n\nLogsTable.propTypes = {\n  logs: PropTypes.arrayOf(PropTypes.instanceOf(LogInfo)).isRequired,\n  bodyHeight: PropTypes.string,\n  title: PropTypes.string\n};\n\nLogsTable.defaultProps = {\n  bodyHeight: \"auto\",\n  title: \"Logs\"\n};\n","import axios from \"axios\";\nimport LogInfo from \"../model/LogInfo\";\nimport * as SampleData from \"./SampleData\";\n\nasync function getLogs(endpoint) {\n  return axios\n    .get(endpoint)\n    .then((response) => {\n      return Promise.resolve(\n        response.data.map((log) => {\n          return new LogInfo(log.id, log.dateTime, log.level, log.message);\n        })\n      );\n    })\n    .catch(() => {\n      return new Promise((resolve) => {\n        SampleData.getAllLogs(resolve);\n      });\n    });\n}\n\nexport async function getAllLogs() {\n  return getLogs(process.env.REACT_APP_LOGS);\n}\n\nexport async function getDeviceLogs(deviceSerialNumber) {\n  return getLogs(`${process.env.REACT_APP_LOGS}/${deviceSerialNumber}`);\n}\n","import { Container, Paper } from \"@material-ui/core\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport LogsTable from \"../../loglist/LogsTable\";\nimport * as LogApi from \"../../api/LogApi\";\n\nexport default class DeviceDetailsActivityPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.device = props.device;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    LogApi.getDeviceLogs(this.device.serialNumber).then(this.handleLogsChange);\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return (\n      <>\n        <Container component={Paper}>\n          <LogsTable\n            title={`${this.device.serialNumber} Logs`}\n            logs={logs}\n            bodyHeight=\"35vh\"\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nDeviceDetailsActivityPanel.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Paper } from \"@material-ui/core\";\n\nexport default function DeviceDetailsNotesPanel(props) {\n  const { extras } = props;\n  return <Container component={Paper}>{extras}</Container>;\n}\n\nDeviceDetailsNotesPanel.propTypes = {\n  extras: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\nimport { TableContainer, TableCell, TableRow } from \"@material-ui/core\";\nimport ChannelDetailsTable from \"../devicelist/ChannelDetailsTable\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport StatusIndicator from \"../general/StatusIndicator\";\n\nexport default class DeviceDetailsConciseRow extends React.Component {\n  static getPropertyDisplayName(name) {\n    switch (name) {\n      case \"serialNumber\":\n        return \"Serial Number\";\n      case \"lastCommunication\":\n        return \"Last Communication\";\n      case \"privateIp\":\n        return \"Private IP Address\";\n      case \"publicIp\":\n        return \"Public IP Address\";\n      case \"name\":\n        return \"Name\";\n      case \"status\":\n        return \"Status\";\n      case \"channels\":\n        return \"Channels\";\n      default:\n        return \"Additional Info\";\n    }\n  }\n\n  static createInnerTable(value) {\n    return (\n      <TableContainer>\n        <ChannelDetailsTable channels={value} />\n      </TableContainer>\n    );\n  }\n\n  static createTableCellContents(name, value) {\n    switch (name) {\n      case \"channels\":\n        return DeviceDetailsConciseRow.createInnerTable(value);\n      case \"status\":\n        return <StatusIndicator status={value} />;\n      default:\n        return value;\n    }\n  }\n\n  render() {\n    const { name, value } = this.props;\n    return (\n      <>\n        <TableRow>\n          <TableCell>\n            {DeviceDetailsConciseRow.getPropertyDisplayName(name)}\n          </TableCell>\n          <TableCell align=\"center\">\n            {DeviceDetailsConciseRow.createTableCellContents(name, value)}\n          </TableCell>\n        </TableRow>\n      </>\n    );\n  }\n}\n\nDeviceDetailsConciseRow.propTypes = {\n  name: Proptypes.string.isRequired,\n  value: Proptypes.arrayOf(\n    Proptypes.oneOfType([InputChannelInfo, OutputChannelInfo])\n  ).isRequired\n};\n","import React from \"react\";\nimport { TableContainer, Table, TableBody, Paper } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceDetailsConciseRow from \"./DeviceDetailsConciseRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function DeviceDetailsConciseTable(props) {\n  const { device } = props;\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableBody>\n            {DeviceInfo.getConciseProperties().map((property) => (\n              <DeviceDetailsConciseRow\n                name={property}\n                value={device[property]}\n                key={`device_${property}`}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nDeviceDetailsConciseTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { Container, Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport HorizontalTabPanel from \"../general/HorizontalTabPanel\";\nimport DeviceDetailsActivityPanel from \"./TabPanels/DeviceDetailsActivityPanel\";\nimport DeviceDetailsNotesPanel from \"./TabPanels/DeviceDetailsNotesPanel\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeviceDetailsConciseTable from \"./DeviceDetailsConciseTable\";\n\nexport default class DeviceDetailsTabTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleValueChange(event, tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  static getPanelContents(tabInfo, device) {\n    switch (tabInfo) {\n      case \"Overview\":\n        return <DeviceDetailsConciseTable device={device} />;\n      case \"Activity Log\":\n        return <DeviceDetailsActivityPanel device={device} />;\n      case \"Notes\":\n        return <DeviceDetailsNotesPanel extras={device.extras} />;\n\n      default:\n        return <div>Whoops not a valid value</div>;\n    }\n  }\n\n  render() {\n    const { value } = this.state;\n    const { device, tabs } = this.props;\n    return (\n      <Container>\n        <Tabs\n          value={value}\n          onChange={this.handleValueChange}\n          className=\"lightGrey blackFont flexContents\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {tabs.map((tabInfo) => {\n            let tab;\n            if (tabInfo === \"Overview\") {\n              tab = (\n                <Tab\n                  label={tabInfo}\n                  key={tabInfo}\n                  style={{ pointerEvents: \"none\" }}\n                />\n              );\n            } else {\n              tab = <Tab label={tabInfo} key={tabInfo} />;\n            }\n            return tab;\n          })}\n        </Tabs>\n        {tabs.map((tabInfo, index) => {\n          return (\n            <HorizontalTabPanel\n              value={value}\n              key={tabInfo}\n              index={index}\n              device={device}\n            >\n              {DeviceDetailsTabTable.getPanelContents(tabInfo, device)}\n            </HorizontalTabPanel>\n          );\n        })}\n      </Container>\n    );\n  }\n}\nDeviceDetailsTabTable.propTypes = {\n  tabs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Button, TextField } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport * as DeviceApi from \"../api/DeviceApi\";\n\nexport default class DeviceNameDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.deviceName = props.deviceName;\n    this.deviceId = props.deviceId;\n    this.state = {\n      editing: false,\n      name: this.deviceName\n    };\n\n    this.startEdit = this.startEdit.bind(this);\n    this.cancelEditing = this.cancelEditing.bind(this);\n    this.confirmEditing = this.confirmEditing.bind(this);\n    this.setName = this.setName.bind(this);\n  }\n\n  setName(updatedName) {\n    this.setState({ name: updatedName });\n  }\n\n  startEdit() {\n    this.setState({ editing: true });\n  }\n\n  cancelEditing() {\n    this.setState({ name: this.deviceName });\n    this.setState({ editing: false });\n  }\n\n  confirmEditing(event) {\n    // api call\n    event.preventDefault();\n    const { name } = this.state;\n    DeviceApi.updateDeviceName(this.deviceId, name).then(() => {\n      // check response OK to update deviceName\n      this.deviceName = name;\n    });\n\n    this.setState({ editing: false });\n  }\n\n  renderStaticName() {\n    const { name } = this.state;\n    return (\n      <>\n        <Box className=\"flexContents\">\n          <div className=\"title\">{name}</div>\n          <Box padding={4} paddingLeft={1} paddingBottom={0}>\n            <Button>\n              <EditIcon id=\"editBtn\" color=\"action\" onClick={this.startEdit} />\n            </Button>\n          </Box>\n        </Box>\n      </>\n    );\n  }\n\n  renderEditName() {\n    return (\n      <>\n        <form className=\"deviceNameEditForm\" onSubmit={this.confirmEditing}>\n          <Box className=\"flexContents\">\n            <TextField\n              id=\"deviceName\"\n              name=\"deviceName\"\n              required\n              defaultValue={this.deviceName}\n              label=\"Device Name\"\n              onChange={(event) => this.setName(event.target.value)}\n            />\n            <Box padding={4} paddingLeft={1} paddingRight={1}>\n              <Button\n                id=\"cancelEditBtn\"\n                onClick={this.cancelEditing}\n                variant=\"contained\"\n                disableElevation\n              >\n                Cancel\n              </Button>\n            </Box>\n            <Box padding={4} paddingLeft={0}>\n              <Button\n                id=\"confirmEditBtn\"\n                type=\"submit\"\n                color=\"primary\"\n                variant=\"contained\"\n                disableElevation\n              >\n                Save\n              </Button>\n            </Box>\n          </Box>\n        </form>\n      </>\n    );\n  }\n\n  render() {\n    const { editing } = this.state;\n    return (\n      <>\n        <div>{editing ? this.renderEditName() : this.renderStaticName()}</div>\n      </>\n    );\n  }\n}\n\nDeviceNameDetail.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  deviceId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Container, Grid } from \"@material-ui/core\";\n\nimport DynamicBreadcrumb from \"../general/DynamicBreadcrumb\";\nimport DeviceDetailsTabTable from \"./DeviceDetailsTabTable\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport { getSampleSender } from \"../api/SampleData\";\nimport DeleteDeviceButton from \"../general/Buttons/DeleteDeviceButton\";\nimport DeviceNameDetail from \"./DeviceNameDetail\";\n\nexport default function DeviceDetailsPage(props) {\n  const {\n    location: {\n      state: { device }\n    }\n  } = props;\n  const tabs = [\"Activity Log\", \"Notes\"];\n\n  return (\n    <Container>\n      <DynamicBreadcrumb\n        breadcrumbs={[\n          [\"Home\", \"/\"],\n          [\"My Devices\", \"/Devices\"],\n          [device.name, device.id]\n        ]}\n      />\n      <Box className=\"areaUnderBreadcrumbs\">\n        <Box className=\"flexContents headerAreaUnderline\">\n          <DeviceNameDetail\n            deviceName={device.name}\n            deviceId={device.serialNumber}\n          />\n          <div className=\"alignRightFloat\">\n            <Box marginRight={2} marginTop={2}>\n              <DeleteDeviceButton button deleteId={device.serialNumber} />\n            </Box>\n          </div>\n        </Box>\n      </Box>\n      <Grid container>\n        <Grid item xs={6}>\n          <DeviceDetailsTabTable tabs={[\"Overview\"]} device={device} />\n        </Grid>\n        <Grid item xs={6}>\n          <DeviceDetailsTabTable tabs={tabs} device={device} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\nDeviceDetailsPage.defaultProps = {\n  location: { state: { device: getSampleSender() } }\n};\n\nDeviceDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      device: PropTypes.instanceOf(DeviceInfo)\n    })\n  })\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LogsTable from \"./LogsTable\";\n\nexport default class LogsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.logsDataSource = props.logsDataSource;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.logsDataSource.getAllLogs().then(this.handleLogsChange);\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} />;\n  }\n}\n\nLogsTableWrapper.propTypes = {\n  logsDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport LogsTableWrapper from \"./LogsTableWrapper\";\nimport Page from \"../general/Page\";\n\nexport default function LogListPage(props) {\n  const { logsDataSource } = props;\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Logs\", \"/Logs\"]\n  ];\n\n  return (\n    <Page title=\"Logs\" breadcrumbs={breadcrumbs}>\n      <LogsTableWrapper logsDataSource={logsDataSource} />\n    </Page>\n  );\n}\n\nLogListPage.propTypes = {\n  logsDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    color: \"#ef5350\"\n  }\n}));\n\nexport default function LoginFailedDialog(props) {\n  const classes = useStyles();\n  const { open, setOpen, message } = props;\n\n  const closeDialog = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Dialog open={open} onClose={closeDialog}>\n        <DialogTitle id=\"login-failed-dialog-title\" className={classes.title}>\n          Login Failed\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"login-failed-dialog-description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nLoginFailedDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired\n};\n","import React, { useState } from \"react\";\nimport { Button, Container, makeStyles, TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function LoginConsole(props) {\n  const { handleSubmit } = props;\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit(username, password);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nLoginConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n","import axios from \"axios\";\n\nexport const unknownErrorMessage =\n  \"An unknown error occurred. Please try again later.\";\nexport const incorrectCredentialsMessage =\n  \"Incorrect username and/or password. Please enter the correct credentials and try again.\";\n\nexport async function logIn() {\n  // TODO: Correct backend URL from environment variables\n  return axios\n    .post(\"backendUrl/login\")\n    .then(() => {\n      // TODO: Happy path login\n    })\n    .catch((error) => {\n      let message = unknownErrorMessage;\n      if (error.response && error.response.status === \"403\") {\n        message = incorrectCredentialsMessage;\n      }\n      return Promise.reject(new Error(message));\n    });\n}\n","import React from \"react\";\n\nimport LoginFailedDialog from \"./LoginFailedDialog\";\nimport LoginConsole from \"./LoginConsole\";\nimport * as AuthenticationApi from \"../api/AuthenticationApi\";\n\nexport default class LoginPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogOpen: false,\n      dialogMessage: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setDialogOpen = this.setDialogOpen.bind(this);\n    this.setDialogMessage = this.setDialogMessage.bind(this);\n  }\n\n  handleSubmit(username, password) {\n    AuthenticationApi.logIn({ username, password }).catch((error) => {\n      this.setState({\n        dialogOpen: true,\n        dialogMessage: error.message\n      });\n    });\n  }\n\n  setDialogOpen(open) {\n    this.setState({\n      dialogOpen: open\n    });\n  }\n\n  setDialogMessage(message) {\n    this.setState({\n      dialogMessage: message\n    });\n  }\n\n  render() {\n    const { dialogOpen, dialogMessage } = this.state;\n    return (\n      <>\n        <LoginConsole handleSubmit={this.handleSubmit} />\n        <LoginFailedDialog\n          open={dialogOpen}\n          setOpen={this.setDialogOpen}\n          message={dialogMessage}\n        />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { InputAdornment, makeStyles, TextField } from \"@material-ui/core\";\n\nimport { Search } from \"@material-ui/icons/\";\n\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      search: {\n        position: \"relative\",\n        right: 0,\n        marginLeft: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n          marginLeft: theme.spacing(1),\n          width: \"auto\"\n        }\n      },\n      searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        alignItems: \"left\",\n        justifyContent: \"center\"\n      },\n      inputRoot: {\n        color: \"inherit\"\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"searchField\">\n          <TextField\n            placeholder=\"Search\"\n            InputProps={{\n              \"aria-label\": \"search\",\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {\" \"}\n                  <Search />\n                </InputAdornment>\n              )\n            }}\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n  MenuItem,\n  Select\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class SelectDeviceTableRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState((state) => ({ open: !state.open }));\n  }\n\n  render() {\n    const {\n      deviceDetails: { channels, name },\n      onChange\n    } = this.props;\n    const { open } = this.state;\n    return (\n      <>\n        <ListItem button dense onClick={this.onClick}>\n          <ListItemText primary={name} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding style={{ width: \"96%\" }}>\n            <ListItem divider>\n              <ListItemText secondary=\"Select Channel\" />\n              <Select defaultValue=\"\" onChange={onChange}>\n                {channels.map((channel) => {\n                  return (\n                    <MenuItem value={channel.id} key={`${name}_${channel.id}`}>\n                      {channel.port}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </ListItem>\n          </List>\n        </Collapse>\n      </>\n    );\n  }\n}\nSelectDeviceTableRow.propTypes = {\n  deviceDetails: PropTypes.instanceOf(DeviceInfo).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { List } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport SearchBar from \"./SearchBar\";\nimport SelectDeviceTableRow from \"./SelectDeviceTableRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function SelectDevicesTable(props) {\n  const { dataSource, name, onChange } = props;\n  return (\n    <>\n      <div className=\"subtitle\">{name}</div>\n      <SearchBar />\n      <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n        <List>\n          {dataSource.map((device) => {\n            return (\n              <SelectDeviceTableRow\n                deviceDetails={device}\n                key={device.serialNumber}\n                onChange={onChange}\n              />\n            );\n          })}\n        </List>\n      </div>\n    </>\n  );\n}\n\nSelectDevicesTable.propTypes = {\n  name: PropTypes.string.isRequired,\n  dataSource: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\nimport PropTypes from \"prop-types\";\nimport SelectDevicesTable from \"./SelectDevicesTable\";\nimport StreamButton from \"../general/Buttons/StreamButton\";\n\nexport default class StreamingTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      selectedSenderID: \"\",\n      selectedReceiverID: \"\"\n    };\n\n    this.dataSource = props.dataSource;\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n\n    this.onSenderSelected = this.onSenderSelected.bind(this);\n    this.onReceiverSelected = this.onReceiverSelected.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource.getSenders(this.handleSendersChange);\n    this.dataSource.getReceivers(this.handleReceiversChange);\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  handleSubmit(event) {\n    const { selectedReceiverID, selectedSenderID } = this.state;\n    if (selectedReceiverID !== \"\" && selectedSenderID !== \"\") {\n      axios.post(process.env.REACT_APP_STREAM, {\n        inputChannelId: selectedReceiverID,\n        outputChannelId: selectedSenderID\n      });\n    }\n    event.preventDefault();\n  }\n\n  onSenderSelected(selectedSender) {\n    this.setState({\n      selectedSenderID: selectedSender.target.value\n    });\n  }\n\n  onReceiverSelected(selectedReceiver) {\n    this.setState({\n      selectedReceiverID: selectedReceiver.target.value\n    });\n  }\n\n  render() {\n    const { receivers, senders } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} id=\"createStreamForm\">\n          <Grid\n            container\n            spacing={2}\n            alignContent=\"center\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"SenderTable\">\n                <SelectDevicesTable\n                  name=\"Sender Devices\"\n                  dataSource={senders}\n                  onChange={this.onSenderSelected}\n                />\n              </div>\n            </Grid>\n            <Grid\n              container\n              item\n              xs={2}\n              id=\"TableStartStreamingBtn\"\n              justify=\"center\"\n              alignContent=\"center\"\n              alignItems=\"center\"\n              display=\"flex\"\n            >\n              <StreamButton id=\"StreamingStreamBtn\" type=\"submit\" />\n            </Grid>\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"ReceiverTable\">\n                <SelectDevicesTable\n                  name=\"Receiver Devices\"\n                  dataSource={receivers}\n                  onChange={this.onReceiverSelected}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </form>\n      </>\n    );\n  }\n}\nStreamingTable.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Page from \"../general/Page\";\nimport StreamingTable from \"./StreamingTable\";\n\nexport default function CreateStreamPage(props) {\n  const { dataSource } = props;\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"My Streams\", \"/Streaming\"],\n    [\"New Stream\", \"/Streaming/New\"]\n  ];\n  return (\n    <Page title=\"Create a Stream\" breadcrumbs={breadcrumbs}>\n      <StreamingTable dataSource={dataSource} />\n    </Page>\n  );\n}\n\nCreateStreamPage.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport HeaderBar from \"./general/HeaderBar\";\nimport HomePage from \"./homepage/HomePage\";\nimport DeviceListPage from \"./devicelist/DeviceListPage\";\nimport DeviceDetailsPage from \"./deviceDetailsPage/DeviceDetailsPage\";\nimport LogListPage from \"./loglist/LogListPage\";\nimport LoginPage from \"./login/LoginPage\";\nimport CreateStreamPage from \"./createStream/CreateStreamPage\";\n\nimport * as DeviceApi from \"./api/DeviceApi\";\nimport * as StreamApi from \"./api/StreamApi\";\nimport * as LogApi from \"./api/LogApi\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <HeaderBar />\n      <Switch>\n        <Route exact path={[\"/\", \"/Home\"]} component={HomePage} />\n        <Route\n          exact\n          path=\"/Devices\"\n          render={() => <DeviceListPage dataSource={DeviceApi} />}\n        />\n        <Route\n          exact\n          path=\"/Streaming/New\"\n          render={() => <CreateStreamPage dataSource={DeviceApi} />}\n        />\n        <Route\n          exact\n          path=\"/Devices/Details/:deviceId\"\n          component={DeviceDetailsPage}\n        />\n        <Route\n          exact\n          path=\"/Logs\"\n          render={() => <LogListPage logsDataSource={LogApi} />}\n        />\n        <Route exact path=\"/Login\" component={LoginPage} />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport HomePageContents from \"./HomePageContents\";\n\nexport default function HomePage() {\n  return (\n    <Page title=\"Dashboard\" breadcrumbs={[[\"Home\", \"\"]]}>\n      <HomePageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport LoginPageContents from \"./LoginPageContents\";\n\nexport default function LoginPage() {\n  return (\n    <Page title=\"Login\" breadcrumbs={[]} login>\n      <LoginPageContents />\n    </Page>\n  );\n}\n"],"sourceRoot":""}