{"version":3,"sources":["api/AuthenticationUtil.js","app/ProtectedRoute.jsx","general/DynamicBreadcrumb.jsx","general/Buttons/StreamButton.jsx","general/TitleButtons.jsx","general/Title.jsx","api/AuthenticationApi.js","general/HeaderBar.jsx","general/Page.jsx","login/LoginFailedDialog.jsx","login/LoginConsole.jsx","login/LoginPageContents.jsx","login/LoginPage.jsx","general/dashboard/GridColumn.jsx","general/dashboard/DashboardCard.jsx","general/dashboard/DashboardButton.jsx","general/StatusIndicator.jsx","model/StreamInfo.js","streamlist/StreamDetailsButton.jsx","streamlist/StreamsTable.jsx","model/DeviceInfo.js","model/OutputChannelInfo.js","model/InputChannelInfo.js","model/LogInfo.js","api/SampleData.js","streamlist/StreamsTableWrapper.jsx","model/ConvertDataFormat.js","api/StreamApi.js","homepage/ActiveStreamCard.jsx","homepage/ActivityLogCard.jsx","homepage/DevicesCard.jsx","homepage/AdminPanelCard.jsx","homepage/HomePageContents.jsx","homepage/HomePage.jsx","devicelist/TabPanel.jsx","devicelist/ChannelDetailsTableHead.jsx","devicelist/ChannelDetailsTableRow.jsx","devicelist/ChannelDetailsTable.jsx","api/DeviceApi.js","general/Buttons/DeleteDeviceButton.jsx","devicelist/ActionMenu.jsx","devicelist/DevicesTable.jsx","general/VerticalTabs.jsx","devicelist/DeviceListTabTable.jsx","DefaultMakeStylesTheme.js","devicelist/DeviceListPage.jsx","general/HorizontalTabPanel.jsx","loglist/LogsTable.jsx","api/LogApi.js","deviceDetailsPage/TabPanels/DeviceDetailsActivityPanel.jsx","deviceDetailsPage/TabPanels/DeviceDetailsNotesPanel.jsx","deviceDetailsPage/EditableName.jsx","deviceDetailsPage/StaticName.jsx","deviceDetailsPage/DeviceName.jsx","deviceDetailsPage/DeviceDetailsConciseRow.jsx","deviceDetailsPage/DeviceDetailsConciseTable.jsx","deviceDetailsPage/DeviceDetailsTabTable.jsx","deviceDetailsPage/DeviceDetailsPageContents.jsx","deviceDetailsPage/DeviceDetailsPage.jsx","streamlist/StreamListPage.jsx","createStream/SearchBar.jsx","createStream/SelectDeviceTableRow.jsx","createStream/SelectDevicesTable.jsx","createStream/StreamingTable.jsx","createStream/CreateStreamPage.jsx","loglist/LogsTableWrapper.jsx","loglist/LogListPage.jsx","streamDetails/StreamDeviceDetails.jsx","general/dialog/DialogBody.jsx","general/dialog/DialogButtons.jsx","general/dialog/Dialog.jsx","streamDetails/DeleteStreamDialog.jsx","streamDetails/DeleteStreamDialogOpener.jsx","streamDetails/StreamDetailsPageContents.jsx","streamDetails/StreamDetailsPage.jsx","general/PathNotFoundPage.jsx","app/AppRouter.jsx","index.jsx"],"names":["parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","component","charCodeAt","toString","slice","join","JSON","parse","saveToken","tokenPayload","expiryDate","Date","exp","Cookies","set","expires","SameSite","getAuthorizationHeader","get","headers","Authorization","isAuthenticated","isAdmin","role","ProtectedRoute","props","bind","location","this","authenticationRequired","render","authenticated","to","pathname","path","exact","React","Component","defaultProps","DynamicBreadcrumb","breadcrumbs","Box","padding","Breadcrumbs","aria-label","id","crumb","i","Link","color","href","Typography","StreamButton","type","StyledButton","withStyles","root","background","borderRadius","border","height","margin","label","textTransform","Button","className","SwapHoriz","TitleButtons","activeClassName","Title","title","deviceList","unknownErrorMessage","incorrectCredentialsMessage","credentials","a","authorizationHeader","auth","username","password","axios","process","then","response","AuthenticationUtil","authorization","catch","error","message","status","Promise","reject","Error","HeaderBar","classes","makeStyles","theme","menuButton","marginRight","spacing","handleLogout","history","remove","push","AppBar","position","Toolbar","IconButton","edge","Home","disabled","onClick","AccountCircle","withRouter","Page","children","Container","useStyles","LoginFailedDialog","open","setOpen","closeDialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","paper","marginTop","display","flexDirection","alignItems","form","width","submit","LoginConsole","handleSubmit","useState","setUsername","setPassword","maxWidth","noValidate","onSubmit","event","preventDefault","TextField","variant","required","fullWidth","name","autoComplete","autoFocus","onChange","target","value","LoginPageContents","state","dialogOpen","dialogMessage","setDialogOpen","setDialogMessage","logIn","setState","LoginPage","useHistory","GridColumn","Grid","item","xs","container","DashboardCard","Paper","elevation","gutterBottom","DashboardButton","minWidth","StatusIndicator","getStatusStyle","StreamInfo","sender","receiver","outputChannel","inputChannel","date","time","StreamDetailsButton","streamInfo","stream","Description","StreamsTable","columnInfo","field","rowData","filtering","sorting","align","export","options","toolbar","headerStyle","backgroundColor","fontWeight","draggable","icons","SortArrow","ArrowDownward","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","streams","TableContainer","columns","getColumnInfo","data","getOptions","getIcons","concat","Intl","DateTimeFormat","resolvedOptions","timeZone","DeviceInfo","serial","lastCommunication","publicIpAddress","privateIpAddress","displayName","channels","deviceType","extras","serialNumber","publicIp","privateIp","OutputChannelInfo","port","encoder","InputChannelInfo","decoder","LogInfo","dateTime","level","sampleInputChannels","InChannelInfo","sampleOutputChannels","OutChannelInfo","getSampleSender","getAllLogs","callback","dates","StreamsTableWrapper","dataSource","handleStreamsChange","getAllStreams","sampleSenders","sampleReceivers","convertToDataObject","databaseDevice","device","inputs","outputs","getStream","streamId","channel","all","deleteStream","delete","createStream","selectedReceiverID","selectedSenderID","post","inputChannelId","outputChannelId","ActiveStreamCard","StreamApi","style","justify","direction","ActivityLogCard","DevicesCard","AdminPanelCard","HomePageContents","HomePage","TabPanel","index","hidden","aria-labelledby","p","ChannelDetailsTableHead","TableRow","TableCell","ChannelDetailsTableRow","ChannelDetailsTable","Table","TableHead","TableBody","getStatus","lastCommunicationString","lastCommunicationDate","now","getTime","getSenders","senders","output","SampleData","getReceivers","receivers","input","deleteDevice","deviceId","updateDeviceName","updatedName","put","renderDeleteButton","openDeleteDialog","renderDeleteMenuItem","MenuItem","DeleteDeviceButton","button","deleteId","cancelDelete","aria-describedby","DeviceApi","endsWith","go","ActionMenu","anchorElement","setAnchorElement","handleClick","handleClose","currentTarget","element","aria-controls","aria-haspopup","size","MoreVert","Menu","anchorEl","keepMounted","Boolean","anchorOrigin","horizontal","vertical","transformOrigin","DevicesTable","devices","maxHeight","components","lookup","Online","Pending","Offline","detailPanel","icon","ExpandMore","openIcon","ExpandLess","tooltip","search","exportButton","Filter","FilterList","Search","ResetSearch","Clear","Export","SaveAlt","VerticalTabs","handleChange","newTab","setValue","tabs","Tabs","orientation","indicatorColor","Tab","DeviceListTabTable","handleValueChange","handleSendersChange","handleReceiversChange","tabIndex","flexGrow","defaultMakeStylesTheme","palette","borderRight","divider","DeviceListPage","HorizontalTabPanel","bodyHeight","showTitle","maxBodyHeight","minBodyHeight","LogsTable","logs","cellStyle","getLogs","endpoint","resolve","log","getDeviceLogs","deviceSerialNumber","DeviceDetailsActivityPanel","handleLogsChange","LogApi","DeviceDetailsNotesPanel","EditableName","confirmEditing","deviceName","setName","cancelEditing","defaultValue","Cancel","Save","StaticName","startEditing","Edit","DeviceName","editing","startEdit","newName","oldName","forceUpdate","DeviceDetailsConciseRow","getPropertyDisplayName","createTableCellContents","createInnerTable","DeviceDetailsConciseTable","getConciseProperties","property","DeviceDetailsTabTable","textColor","tabInfo","pointerEvents","getPanelContents","DeviceDetailsPageContents","DeviceDetailsPage","StreamListPage","streamDataSource","SearchBar","right","marginLeft","breakpoints","up","searchIcon","justifyContent","inputRoot","placeholder","InputProps","startAdornment","InputAdornment","SelectDeviceTableRow","deviceDetails","ListItem","dense","ListItemText","primary","Collapse","in","timeout","unmountOnExit","List","disablePadding","secondary","Select","SelectDevicesTable","overflow","StreamingTable","onSenderSelected","onReceiverSelected","selectedSender","selectedReceiver","alignContent","CreateStreamPage","LogsTableWrapper","logsDataSource","LogListPage","StreamDeviceDetails","DialogBody","DialogButtons","button1","button2","Dialog","openDialog","cancelButton","actionButton","DeleteStreamDialog","dialogElement","createRef","afterDelete","confirmDelete","current","ref","DeleteStreamDialogOpener","Tooltip","startIcon","StreamDetailsPageContents","StreamDetailsPage","PathNotFoundPage","AppRouter","sampleSender","sampleReceiver","ReactDOM","document","getElementById"],"mappings":"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,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,UACAsB,GACA,UACAd,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,UACAsB,GACA,UACAd,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,SACAsB,GACA,UACAd,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,QACAsB,GACA,UACAd,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,UACAsB,GACA,UACAd,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,UACAsB,GACA,UACAd,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,WACA,SACAsB,GACA,UACAd,Mc5DA0E,CAAsBxD,MAIrB,SAASyD,GAAazD,GAC3B1K,IACG9D,IAAI+D,qDAA+BhE,KACnCiE,MAAK,SAACkO,GACL1D,EACE0D,EAAU5F,KAAKzN,KAAI,SAACqL,GAClB,IAAIkD,EAAW,GACXlD,EAASiI,QACX/E,EAAWlD,EAASiI,MAAMtT,KAAI,SAACsT,GAC7B,OAAO,IAAItE,GACTsE,EAAMxQ,GACNwQ,EAAM5C,QAAQpH,KACdgK,EAAM5C,QAAQ5B,KACd,UAIN,IAAMX,EAC0B,MAA9B9C,EAAS8C,kBACL,QACA9C,EAAS8C,kBACf,OAAO,IAAIF,GACT5C,EAASqD,aACTP,EACA9C,EAASgF,OAAOjC,gBAChB/C,EAASgF,OAAOhC,iBAChBhD,EAASgF,OAAO/B,YAChBqE,GAAUtH,EAAS8C,mBACnBI,EACA,UACA,CAAC,6CAKRhJ,OAAM,YdyCJ,SAAsBoK,GA0M3BA,EAzMwB,CACtB,IAAI1B,GACF,eACA,KACA,gBACA,UACA,aACA,SACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,QACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,SACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,QACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,UACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,aACA,SACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,SACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,QACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,SACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,QACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,UACAoB,GACA,UACAZ,IAEF,IAAIR,GACF,eACA,KACA,gBACA,UACA,cACA,SACAoB,GACA,UACAZ,Mc9OA0E,CAAwBxD,MAIvB,SAAS4D,GAAaC,GAC3B,OAAOvO,IACJ4L,OADI,UAEA3L,oDAFA,YAEgCsO,GACnCtS,KAEDqE,OAAM,eAGJ,SAAekO,GAAtB,qC,8CAAO,WAAgCD,EAAUE,GAA1C,SAAA9O,EAAA,+EACEK,IAAM0O,IACXzO,oDACA,CACEwJ,aAAc8E,EACdlF,YAAaoF,GAEfxS,MAPG,4C,sBClGP,SAAS0S,GAAmBC,GAC1B,OACE,cAAC5P,EAAA,EAAD,CACEnB,GAAG,YACHqG,QAAQ,WACRjG,MAAM,YACN8D,QAAS6M,EAJX,oBAWJ,SAASC,GAAqBD,GAC5B,OACE,cAACE,GAAA,EAAD,CAAU/M,QAAS6M,EAAnB,SACE,sBAAM3P,UAAU,cAAhB,sBAKS,SAAS8P,GAAmBtS,GAAQ,IACzCuS,EAAqBvS,EAArBuS,OAAQC,EAAaxS,EAAbwS,SADgC,EAExB7R,IAAMqG,UAAS,GAFS,oBAEzClB,EAFyC,KAEnCC,EAFmC,KAG1CnB,EAAU+D,cAEVwJ,EAAmB,WACvB,OAAOpM,GAAQ,IAEX0M,EAAe,WACnB,OAAO1M,GAAQ,IAajB,OACE,qCACGwM,EACGL,GAAmBC,GACnBC,GAAqBD,GACzB,eAAC,KAAD,CACErM,KAAMA,EACNG,QAASwM,EACTlC,kBAAgB,6BAChBmC,mBAAiB,mCACjBtR,GAAG,uBALL,UAOE,cAAC8E,GAAA,EAAD,CAAa9E,GAAG,6BAAhB,4BAGA,cAAC+E,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAmBhF,GAAG,mCAAtB,4DAIF,eAACiF,GAAA,EAAD,WACE,cAAC9D,EAAA,EAAD,CAAQnB,GAAG,kBAAkBkE,QAASmN,EAAcjR,MAAM,UAA1D,oBAGA,cAACe,EAAA,EAAD,CACEnB,GAAG,mBACHkE,QArCY,WAQpB,OAPAqN,GAAuBH,GAAU/O,MAAK,WAChCmB,EAAQ1E,SAASM,SAASoS,SAAS,WACrChO,EAAQiO,GAAG,GAEXjO,EAAQE,KAAK,eAGViB,GAAQ,IA8BPvE,MAAM,YACNsG,WAAS,EAJX,6B,ICtEWgL,G,kDACnB,WAAY9S,GAAQ,IAAD,8BACjB,cAAMA,IACDmI,MAAQ,CACX4K,cAAe,MAGjB,EAAKC,iBAAmB,EAAKA,iBAAiB/S,KAAtB,gBACxB,EAAKgT,YAAc,EAAKA,YAAYhT,KAAjB,gBACnB,EAAKiT,YAAc,EAAKA,YAAYjT,KAAjB,gBARF,E,wDAWPqH,GACVnH,KAAK6S,iBAAiB1L,EAAM6L,iB,oCAI5BhT,KAAK6S,iBAAiB,Q,uCAGPI,GACfjT,KAAKsI,SAAS,CACZsK,cAAeK,M,+BAIT,IACAL,EAAkB5S,KAAKgI,MAAvB4K,cACApE,EAAWxO,KAAKH,MAAhB2O,OACR,OACE,qCACE,cAACzJ,EAAA,EAAD,CACEmO,gBAAc,cACdC,gBAAc,OACdhO,QAASnF,KAAK8S,YACdM,KAAK,QAJP,SAME,cAACC,GAAA,EAAD,MAEF,eAACC,GAAA,EAAD,CACErS,GAAG,cACHsS,SAAUX,EACVY,aAAW,EACX7N,KAAM8N,QAAQb,GACd9M,QAAS9F,KAAK+S,YACdW,aAAc,CAAEC,WAAY,QAASC,SAAU,OAC/CC,gBAAiB,CAAEF,WAAY,QAASC,SAAU,OAPpD,UASE,cAAC1B,GAAA,EAAD,CAAU/M,QAASnF,KAAK+S,YAAxB,SACE,cAAC,IAAD,CACE3S,GAAI,CACFC,SAAS,oBAAD,OAAsBmO,EAAO3B,cACrC7E,MAAO,CAAEwG,WAEXnM,UAAU,gBALZ,4BAUF,cAAC6P,GAAA,EAAD,CAAU/M,QAASnF,KAAK+S,YAAxB,gDAGA,cAACZ,GAAD,CAAoBC,QAAQ,EAAOC,SAAU7D,EAAO3B,yB,GA9DtBrM,IAAMC,WCwH/B,SAASqT,GAAajU,GAAQ,IACnC6C,EAAmB7C,EAAnB6C,MAAOqR,EAAYlU,EAAZkU,QACf,OACE,mCACE,cAAClT,EAAA,EAAD,UACE,cAAC4K,GAAA,EAAD,CAAgBgE,MAAO,CAAEuE,UAAW,KAApC,SACE,cAAC,KAAD,CACEtR,MAAOA,EACPuR,WA/GH,CAELnP,QAAS,SAAoBjF,GAC3B,OACE,qBAAKwC,UAAU,eAAf,SACE,cAAC,iBAAD,gBAAmBxC,QA2GjB6L,QAnGH,CACL,CACEhJ,MAAO,OACPyH,MAAO,QAET,CACEzH,MAAO,gBACPyH,MAAO,gBAET,CACEzH,MAAO,SACPyH,MAAO,SACPjK,OAAQ,SAAgBkK,GACtB,OAAO,cAAC,GAAD,CAAiBvG,OAAQuG,EAAQvG,UAE1CqQ,OAAQ,CACNC,OAAQ,SACRC,QAAS,UACTpQ,MAAO,QACPqQ,QAAS,YAGb,CACE3R,MAAO,qBACPyH,MAAO,aAET,CACEzH,MAAO,oBACPyH,MAAO,YAET,CACEzH,MAAO,UACPyH,MAAO,SACPE,WAAW,EACXC,SAAS,EACTpK,OAAQ,SAAiBkK,GACvB,OAAO,cAAC,GAAD,CAAYoE,OAAQpE,KAE7BG,MAAO,SACPC,QAAQ,IA6DFoB,KAAMmI,EACNO,YAxDH,CACL,CACEC,KAAMC,KACNC,SAAUC,KACVC,QAAS,sBACTzU,OAAQ,SAAqBkK,GAC3B,OACE,sBAAK/H,UAAU,eAAeoN,MAAO,CAAE3O,QAAS,SAAhD,UACE,cAACS,EAAA,EAAD,CAAY+F,QAAQ,KAApB,sBACA,cAACoJ,GAAD,CAAqBhE,SAAUtC,EAAQsC,iBAgDvCjC,QAvCH,CACLC,SAAS,EACTkK,QAAQ,EACRC,cAAc,EACdlK,YAAa,CACXC,gBAAiB,UACjBC,WAAY,QAEdR,WAAW,EACXS,WAAW,GA+BHC,MA1BH,CACL+J,OAAQC,KACRC,YACAC,YAAaC,KACblK,UAAWC,KACXkK,OAAQC,KACRlK,eACAC,cACAC,SAAUC,KACVC,aAAcC,c,wBCzHG8J,G,kDACnB,WAAYxV,GAAQ,IAAD,8BACjB,cAAMA,IACDyV,aAAe,EAAKA,aAAaxV,KAAlB,gBAFH,E,yDAKNqH,EAAOoO,IAElBC,EADqBxV,KAAKH,MAAlB2V,UACCD,K,+BAGD,IAAD,EAIHvV,KAAKH,MAFPiI,EAFK,EAELA,MACW2N,EAHN,EAGLvR,QAAWuR,KAGb,OACE,mCACE,eAACC,GAAA,EAAD,CACE5N,MAAOA,EACPF,SAAU5H,KAAKsV,aACftU,aAAW,gBACXqB,UAAS,UAAKoT,EAAL,qCACTE,YAAY,WACZC,eAAe,UACftO,QAAQ,aAPV,UASE,cAACuO,GAAA,EAAD,CACE3T,MAAM,UACNjB,GAAG,iBACHiS,gBAAc,wBAEhB,cAAC2C,GAAA,EAAD,CACE3T,MAAM,YACNjB,GAAG,iBACHiS,gBAAc,iC,GApCgB1S,IAAMC,WCI3BqV,G,kDACnB,WAAYjW,GAAQ,IAAD,8BACjB,cAAMA,IACDmI,MAAQ,CACXoJ,QAAS,GACTI,UAAW,GACX1J,MAAO,GAET,EAAKiO,kBAAoB,EAAKA,kBAAkBjW,KAAvB,gBACzB,EAAKkW,oBAAsB,EAAKA,oBAAoBlW,KAAzB,gBAC3B,EAAKmW,sBAAwB,EAAKA,sBAAsBnW,KAA3B,gBATZ,E,gEAYE,IACXmO,EAAejO,KAAKH,MAApBoO,WACRA,EAAWkD,WAAWnR,KAAKgW,qBAC3B/H,EAAWsD,aAAavR,KAAKiW,yB,wCAGbC,GAChBlW,KAAKsI,SAAS,CACZR,MAAOoO,M,0CAIS9E,GAClBpR,KAAKsI,SAAS,CACZ8I,c,4CAIkBI,GACpBxR,KAAKsI,SAAS,CACZkJ,gB,+BAIM,IAAD,EAC+BxR,KAAKgI,MAAnCwJ,EADD,EACCA,UAAWJ,EADZ,EACYA,QAAStJ,EADrB,EACqBA,MACpB5D,EAAYlE,KAAKH,MAAjBqE,QACR,OACE,mCACE,eAACrD,EAAA,EAAD,CACE4O,MAAO,CACLpJ,QAAS,OACT8P,SAAU,GAHd,UAME,cAAC,GAAD,CACErO,MAAOA,EACP0N,SAAUxV,KAAK+V,kBACf7R,QAASA,IAEX,cAAC+L,GAAD,CAAUnI,MAAOA,EAAOoI,MAAO,EAAG7N,UAAU,kBAA5C,SACE,cAACyR,GAAD,CAAcC,QAAS3C,EAAS1O,MAAM,sBAExC,cAACuN,GAAD,CAAUnI,MAAOA,EAAOoI,MAAO,EAAG7N,UAAU,kBAA5C,SACE,cAACyR,GAAD,CAAcC,QAASvC,EAAW9O,MAAM,iC,GAzDJlC,IAAMC,WCNvC,SAAS2V,KACtB,OAAOjS,aAAW,SAACC,GAAD,MAAY,CAC5BxC,KAAM,CACJgJ,gBAAiBxG,EAAMiS,QAAQxU,WAAWsE,OAE5CsP,KAAM,CACJa,YAAY,aAAD,OAAelS,EAAMiS,QAAQE,cCD/B,SAASC,KAKtB,OACE,cAAClR,GAAD,CAAM5C,MAAM,aAAa9B,YALR,CACjB,CAAC,OAAQ,SACT,CAAC,aAAc,aAGmC+B,YAAU,EAA5D,SACE,cAAC,GAAD,CAAoBuB,QAASuB,EAAWwI,WAAYA,MCV3C,SAASwI,GAAmB5W,GAAQ,IACzCiI,EAA2BjI,EAA3BiI,MAAOoI,EAAoBrQ,EAApBqQ,MAAO3K,EAAa1F,EAAb0F,SACtB,OACE,qBACE5F,KAAK,WACLwQ,OAAQrI,IAAUoI,EAClBjP,GAAE,8BAAyBiP,GAC3BE,kBAAA,yBAAmCF,GAJrC,SAMGpI,IAAUoI,GAAS,cAACrP,EAAA,EAAD,CAAKwP,EAAG,EAAR,SAAY9K,MC8BtC,SAASsG,GAAW6K,GAClB,MAAO,CACLhM,SAAS,EACTiM,WAAW,EACX/B,QAAQ,EACRC,cAAc,EACdlK,YAAa,CACXC,gBAAiB,UACjBC,WAAY,QAEdR,WAAW,EACXS,WAAW,EACX8L,cAAeF,EACfG,cAAeH,GAiBJ,SAASI,GAAUjX,GAAQ,IAChCkX,EAA4BlX,EAA5BkX,KAAML,EAAsB7W,EAAtB6W,WAAYhU,EAAU7C,EAAV6C,MAC1B,OACE,mCACE,eAAC7B,EAAA,EAAD,WACE,cAAC4K,GAAA,EAAD,UACE,cAAC,KAAD,CACE/I,MAAOA,EACPgJ,QA9DH,CACL,CACEhJ,MAAO,KACPyH,MAAO,KACP6M,UAAW,CAAEvQ,MAAO,QAEtB,CACE/D,MAAO,OACPyH,MAAO,WACP6M,UAAW,CAAEvQ,MAAO,QAEtB,CACE/D,MAAO,QACPyH,MAAO,QACP6M,UAAW,CAAEvQ,MAAO,QAEtB,CACE/D,MAAO,UACPyH,MAAO,UACPG,SAAS,IA4CHsB,KAAMmL,EACNtM,QAASoB,GAAW6K,GACpB3L,MAvBH,CACLiK,YACAC,YAAaC,KACblK,UAAWC,KACXkK,OAAQC,KACRlK,eACAC,cACAC,SAAUC,KACVC,aAAcC,UAkBV,qBAAKlJ,UAAU,uBAAf,SACG,cAAc0J,OACbC,KAAKC,iBAAiBC,kBAAkBC,iB,SCpFrC8K,G,iFAAf,WAAuBC,GAAvB,SAAAnU,EAAA,+EACSK,IACJ9D,IAAI4X,EAAU7X,KACdiE,MAAK,SAACC,GACL,OAAOO,QAAQqT,QACb5T,EAASqI,KAAKzN,KAAI,SAACiZ,GACjB,OAAO,IAAI/J,GAAQ+J,EAAInW,GAAImW,EAAI9J,SAAU8J,EAAI7J,MAAO6J,EAAIxT,gBAI7DF,OAAM,WACL,OAAO,IAAII,SAAQ,SAACqT,GAClB7F,GAAsB6F,UAZ9B,4C,sBAiBO,SAAetJ,KAAtB,gC,8CAAO,sBAAA9K,EAAA,+EACEkU,GAAQ5T,mDADV,4C,sBAIA,SAAegU,GAAtB,mC,8CAAO,WAA6BC,GAA7B,SAAAvU,EAAA,+EACEkU,GAAQ,GAAD,OAAI5T,iDAAJ,YAAiCiU,KAD1C,4C,sBD6EPR,GAAUpW,aAAe,CACvBgW,WAAY,OACZhU,MAAO,Q,IElGY6U,G,kDACnB,WAAY1X,GAAQ,IAAD,8BACjB,cAAMA,IACDmI,MAAQ,CACX+O,KAAM,IAER,EAAKvI,OAAS3O,EAAM2O,OACpB,EAAKgJ,iBAAmB,EAAKA,iBAAiB1X,KAAtB,gBANP,E,gEAUjB2X,GAAqBzX,KAAKwO,OAAO3B,cAAcvJ,KAAKtD,KAAKwX,oB,uCAG1CT,GACf/W,KAAKsI,SAAS,CACZyO,W,+BAIM,IACAA,EAAS/W,KAAKgI,MAAd+O,KACR,OACE,mCACE,cAACvR,EAAA,EAAD,CAAWnH,UAAW0K,KAAtB,SACE,cAAC+N,GAAD,CACEpU,MAAK,UAAK1C,KAAKwO,OAAO3B,aAAjB,SACLkK,KAAMA,EACNL,WAAW,iB,GA5BiClW,IAAMC,WCH/C,SAASiX,GAAwB7X,GAAQ,IAC9C+M,EAAW/M,EAAX+M,OACR,OAAO,cAACpH,EAAA,EAAD,CAAWnH,UAAW0K,KAAtB,SAA8B6D,I,wBCDxB,SAAS+K,GAAa9X,GAAQ,IACnC+X,EAAuD/X,EAAvD+X,eAAgBC,EAAuChY,EAAvCgY,WAAYC,EAA2BjY,EAA3BiY,QAASC,EAAkBlY,EAAlBkY,cAC7C,OACE,sBAAM1V,UAAU,qBAAqB6E,SAAU0Q,EAA/C,SACE,eAAC/W,EAAA,EAAD,CAAKwB,UAAU,eAAf,UACE,cAACgF,GAAA,EAAD,CACEpG,GAAG,aACHwG,KAAK,aACLF,UAAQ,EACRyQ,aAAcH,EACdjQ,SAAU,SAACT,GAAD,OAAW2Q,EAAQ3Q,EAAMU,OAAOC,UAE5C,sBAAKzF,UAAU,kBAAf,UACE,cAAC0C,EAAA,EAAD,CAAY9D,GAAG,gBAAgBmS,KAAK,QAAQjO,QAAS4S,EAArD,SACE,cAACE,GAAA,EAAD,MAGF,cAAClT,EAAA,EAAD,CAAY9D,GAAG,iBAAiBQ,KAAK,SAASJ,MAAM,UAApD,SACE,cAAC6W,GAAA,EAAD,c,cClBG,SAASC,GAAWtY,GAAQ,IACjCgY,EAA6BhY,EAA7BgY,WAAYO,EAAiBvY,EAAjBuY,aACpB,OACE,qCACGP,EACD,qBAAKxV,UAAU,kBAAf,SACE,cAAC0C,EAAA,EAAD,CACE9D,GAAG,UACHmS,KAAK,QACL/R,MAAM,SACN8D,QAASiT,EAJX,SAME,cAACC,GAAA,EAAD,W,ICXWC,G,kDACnB,WAAYzY,GAAQ,IAAD,8BACjB,cAAMA,IACDgY,WAAahY,EAAMgY,WACxB,EAAKlG,SAAW9R,EAAM8R,SACtB,EAAK3J,MAAQ,CACXuQ,SAAS,EACT9Q,KAAM,EAAKoQ,YAGb,EAAKW,UAAY,EAAKA,UAAU1Y,KAAf,gBACjB,EAAKiY,cAAgB,EAAKA,cAAcjY,KAAnB,gBACrB,EAAK8X,eAAiB,EAAKA,eAAe9X,KAApB,gBACtB,EAAKgY,QAAU,EAAKA,QAAQhY,KAAb,gBAZE,E,oDAeX+R,GACN7R,KAAKsI,SAAS,CAAEb,KAAMoK,M,kCAItB7R,KAAKsI,SAAS,CAAEiQ,SAAS,M,sCAIzBvY,KAAKsI,SAAS,CAAEb,KAAMzH,KAAK6X,aAC3B7X,KAAKsI,SAAS,CAAEiQ,SAAS,M,qCAGZpR,GAAQ,IAAD,OAEpBA,EAAMC,iBAFc,IAGNqR,EAAYzY,KAAKgI,MAAvBP,KACFiR,EAAU1Y,KAAK6X,WACrB7X,KAAK6X,WAAaY,EAClBzY,KAAKsI,SAAS,CAAEiQ,SAAS,IAEzB/F,GAA2BxS,KAAK2R,SAAU8G,GAAS/U,OAAM,WAEvD,EAAKmU,WAAaa,EAClB,EAAKC,mB,+BAIC,IACAJ,EAAYvY,KAAKgI,MAAjBuQ,QACR,OACE,mCACGA,EACC,cAACZ,GAAD,CACEC,eAAgB5X,KAAK4X,eACrBC,WAAY7X,KAAK6X,WACjBC,QAAS9X,KAAK8X,QACdC,cAAe/X,KAAK+X,gBAGtB,cAACI,GAAD,CACEN,WAAY7X,KAAK6X,WACjBO,aAAcpY,KAAKwY,kB,GA1DShY,IAAMC,WCKzBmY,G,uKA2CT,IAAD,EACyB5Y,KAAKH,MAA7B4H,EADD,EACCA,KAAMK,EADP,EACOA,MAAO0G,EADd,EACcA,OACrB,OACE,eAAC+B,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACGoI,EAAwBC,uBAAuBpR,KAElD,cAAC+I,GAAA,EAAD,CAAWjG,MAAM,SAAjB,SACGqO,EAAwBE,wBAAwBrR,EAAMK,EAAO0G,W,8CAlDxC/G,GAC5B,OAAQA,GACN,IAAK,eACH,MAAO,gBACT,IAAK,oBACH,MAAO,qBACT,IAAK,YACH,MAAO,qBACT,IAAK,WACH,MAAO,oBACT,IAAK,OACH,MAAO,OACT,IAAK,SACH,MAAO,SACT,IAAK,WACH,MAAO,WACT,QACE,MAAO,qB,uCAIWK,GACtB,OACE,cAAC2D,GAAA,EAAD,UACE,cAACiF,GAAD,CAAqBhE,SAAU5E,Q,8CAKNL,EAAMK,EAAO0G,GAC1C,OAAQ/G,GACN,IAAK,WACH,OAAOmR,EAAwBG,iBAAiBjR,GAClD,IAAK,SACH,OAAO,cAAC,GAAD,CAAiBjE,OAAQiE,IAClC,IAAK,OACH,OAAO,cAAC,GAAD,CAAY+P,WAAY/P,EAAO6J,SAAUnD,EAAO3B,eACzD,QACE,OAAO/E,O,GAvCsCtH,IAAMC,WCJ5C,SAASuY,GAA0BnZ,GAAQ,IAChD2O,EAAW3O,EAAX2O,OACR,OACE,mCACE,cAAC/C,GAAA,EAAD,CAAgBpN,UAAW0K,KAA3B,SACE,cAAC4H,GAAA,EAAD,UACE,cAACE,GAAA,EAAD,UACGzE,GAAW6M,uBAAuB9a,KAAI,SAAC+a,GAAD,OACrC,cAAC,GAAD,CACEzR,KAAMyR,EACNpR,MAAO0G,EAAO0K,GACd1K,OAAQA,GAHV,iBAIiB0K,e,ICTVC,G,kDACnB,WAAYtZ,GAAQ,IAAD,8BACjB,cAAMA,IACDmI,MAAQ,CACXF,MAAO,GAET,EAAKiO,kBAAoB,EAAKA,kBAAkBjW,KAAvB,gBALR,E,8DAQDqH,EAAO+O,GACvBlW,KAAKsI,SAAS,CACZR,MAAOoO,M,+BAkBD,IACApO,EAAU9H,KAAKgI,MAAfF,MADD,EAEkB9H,KAAKH,MAAtB2O,EAFD,EAECA,OAAQiH,EAFT,EAESA,KAChB,OACE,eAACjQ,EAAA,EAAD,WACE,cAACkQ,GAAA,EAAD,CACE5N,MAAOA,EACPF,SAAU5H,KAAK+V,kBACf1T,UAAU,mCACVuT,eAAe,UACfwD,UAAU,UALZ,SAOG3D,EAAKtX,KAAI,SAACkb,GAaT,MAXgB,aAAZA,EAEA,cAACxD,GAAA,EAAD,CACE3T,MAAOmX,EAEP5J,MAAO,CAAE6J,cAAe,SADnBD,GAKH,cAACxD,GAAA,EAAD,CAAK3T,MAAOmX,GAAcA,QAKrC5D,EAAKtX,KAAI,SAACkb,EAASnJ,GAClB,OACE,cAACuG,GAAD,CACE3O,MAAOA,EAEPoI,MAAOA,EACP1B,OAAQA,EAJV,SAMG2K,EAAsBI,iBAAiBF,EAAS7K,IAJ5C6K,Y,wCA9COA,EAAS7K,GAC/B,OAAQ6K,GACN,IAAK,WACH,OAAO,cAACL,GAAD,CAA2BxK,OAAQA,IAC5C,IAAK,eACH,OAAO,cAAC,GAAD,CAA4BA,OAAQA,IAC7C,IAAK,QACH,OAAO,cAACkJ,GAAD,CAAyB9K,OAAQ4B,EAAO5B,SAEjD,QACE,OAAO,gE,GAzBoCpM,IAAMC,WCF1C,SAAS+Y,GAA0B3Z,GAAQ,IAChD2O,EAAW3O,EAAX2O,OAGR,OACE,eAAC9F,GAAA,EAAD,CAAMG,WAAS,EAAf,UACE,cAACH,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,GAAD,CAAuB6M,KAAM,CAAC,YAAajH,OAAQA,MAErD,cAAC9F,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,GAAD,CAAuB6M,KARhB,CAAC,eAAgB,SAQWjH,OAAQA,SCVpC,SAASiL,GAAkB5Z,GAAQ,IAGnC2O,EAET3O,EAHFE,SACEiI,MAASwG,OAIP5N,EAAc,CAClB,CAAC,OAAQ,SACT,CAAC,aAAc,YACf,CAAC,iBAAD,2BAAuC4N,EAAO3B,gBAGhD,OACE,cAACvH,GAAD,CAAM5C,MAAM,iBAAiB9B,YAAaA,EAA1C,SACE,cAAC4Y,GAAD,CAA2BhL,OAAQA,MClB1B,SAASkL,KAKtB,OACE,cAACpU,GAAD,CAAM5C,MAAM,iBAAiB9B,YALX,CAClB,CAAC,OAAQ,SACT,CAAC,iBAAkB,aAGnB,SACE,cAAC,GAAD,CAAqBqN,WAAY0L,MFWvCH,GAA0B9Y,aAAe,CACvC8N,OAAQZ,MCIV6L,GAAkB/Y,aAAe,CAC/BX,SAAU,CAAEiI,MAAO,CAAEwG,OAAQZ,Q,kCExBVgM,G,kDACnB,WAAY/Z,GAAQ,IAAD,8BACjB,cAAMA,IACDqE,QAAUC,aAAW,SAACC,GAAD,MAAY,CACpCwQ,OAAO,cACL/P,SAAU,WACVgV,MAAO,EACPC,WAAY,GACX1V,EAAM2V,YAAYC,GAAG,MAAQ,CAC5BF,WAAY1V,EAAMG,QAAQ,GAC1BkC,MAAO,SAGXwT,WAAY,CACVnZ,QAASsD,EAAMG,QAAQ,EAAG,GAC1BvC,OAAQ,OACR6C,SAAU,WACVyU,cAAe,OACf/S,WAAY,OACZ2T,eAAgB,UAElBC,UAAW,CACT9Y,MAAO,eArBM,E,qDA2BjB,OACE,mCACE,qBAAKgB,UAAU,cAAf,SACE,cAACgF,GAAA,EAAD,CACE+S,YAAY,SACZC,WAAY,CACV,aAAc,SACdC,eACE,eAACC,GAAA,EAAD,CAAgB1V,SAAS,QAAzB,UACG,IACD,cAACmQ,GAAA,EAAD,QAIN5B,KAAK,QACL9L,QAAQ,qB,GA3CmB9G,IAAMC,W,wCCQxB+Z,G,kDACnB,WAAY3a,GAAQ,IAAD,8BACjB,cAAMA,IACDmI,MAAQ,CACXrC,MAAM,GAER,EAAKR,QAAU,EAAKA,QAAQrF,KAAb,gBALE,E,sDASjBE,KAAKsI,UAAS,SAACN,GAAD,MAAY,CAAErC,MAAOqC,EAAMrC,W,+BAGjC,IAAD,EAIH3F,KAAKH,MAJF,IAEL4a,cAAiB/N,EAFZ,EAEYA,SAAUjF,EAFtB,EAEsBA,KAC3BG,EAHK,EAGLA,SAEMjC,EAAS3F,KAAKgI,MAAdrC,KACR,OACE,qCACE,eAAC+U,GAAA,EAAD,CAAUtI,QAAM,EAACuI,OAAK,EAACxV,QAASnF,KAAKmF,QAArC,UACE,cAACyV,GAAA,EAAD,CAAcC,QAASpT,IACtB9B,EAAO,cAAC+O,GAAA,EAAD,IAAiB,cAACF,GAAA,EAAD,OAE3B,cAACsG,GAAA,EAAD,CAAUC,GAAIpV,EAAMqV,QAAQ,OAAOC,eAAa,EAAhD,SACE,cAACC,GAAA,EAAD,CAAM7c,UAAU,MAAM8c,gBAAc,EAAC1L,MAAO,CAAEhJ,MAAO,OAArD,SACE,eAACiU,GAAA,EAAD,CAAUnE,SAAO,EAAjB,UACE,cAACqE,GAAA,EAAD,CAAcQ,UAAU,mBACxB,cAACC,GAAA,EAAD,CAAQrD,aAAa,GAAGpQ,SAAUA,EAAlC,SACG8E,EAASvO,KAAI,SAAC0Q,GACb,OACE,cAACqD,GAAA,EAAD,CAAUpK,MAAO+G,EAAQ5N,GAAzB,SACG4N,EAAQ5B,MADX,UAAqCxF,EAArC,YAA6CoH,EAAQ5N,wB,GAhCvBT,IAAMC,WCLzC,SAAS6a,GAAmBzb,GAAQ,IACzCoO,EAA+BpO,EAA/BoO,WAAYxG,EAAmB5H,EAAnB4H,KAAMG,EAAa/H,EAAb+H,SAC1B,OACE,qCACE,qBAAKvF,UAAU,WAAf,SAA2BoF,IAC3B,cAAC,GAAD,IACA,qBAAKgI,MAAO,CAAEuE,UAAW,QAASuH,SAAU,QAA5C,SACE,cAACL,GAAA,EAAD,UACGjN,EAAW9P,KAAI,SAACqQ,GACf,OACE,cAAC,GAAD,CACEiM,cAAejM,EAEf5G,SAAUA,GADL4G,EAAO3B,wB,ICZP2O,G,kDACnB,WAAY3b,GAAQ,IAAD,8BACjB,cAAMA,IACDmI,MAAQ,CACXoJ,QAAS,GACTI,UAAW,GACXrC,iBAAkB,GAClBD,mBAAoB,IAGtB,EAAK8G,oBAAsB,EAAKA,oBAAoBlW,KAAzB,gBAC3B,EAAKmW,sBAAwB,EAAKA,sBAAsBnW,KAA3B,gBAE7B,EAAK2b,iBAAmB,EAAKA,iBAAiB3b,KAAtB,gBACxB,EAAK4b,mBAAqB,EAAKA,mBAAmB5b,KAAxB,gBAE1B,EAAK8G,aAAe,EAAKA,aAAa9G,KAAlB,gBAfH,E,gEAmBjB0S,GAAqBxS,KAAKgW,qBAC1BxD,GAAuBxS,KAAKiW,yB,0CAGV7E,GAClBpR,KAAKsI,SAAS,CACZ8I,c,4CAIkBI,GACpBxR,KAAKsI,SAAS,CACZkJ,gB,mCAISrK,GACXA,EAAMC,iBADY,MAE+BpH,KAAKgI,MAA9CkH,EAFU,EAEVA,mBAAoBC,EAFV,EAEUA,iBACD,KAAvBD,GAAkD,KAArBC,GAC/BF,GAAaC,EAAoBC,K,uCAIpBwM,GACf3b,KAAKsI,SAAS,CACZ6G,iBAAkBwM,EAAe9T,OAAOC,U,yCAIzB8T,GACjB5b,KAAKsI,SAAS,CACZ4G,mBAAoB0M,EAAiB/T,OAAOC,U,+BAItC,IAAD,EACwB9H,KAAKgI,MAA5BwJ,EADD,EACCA,UAAWJ,EADZ,EACYA,QACnB,OACE,mCACE,sBAAMlK,SAAUlH,KAAK4G,aAAc3F,GAAG,mBAAtC,SACE,eAACyH,GAAA,EAAD,CACEG,WAAS,EACTtE,QAAS,EACTsX,aAAa,SACbtV,WAAW,SACXmJ,QAAQ,SALV,UAOE,cAAChH,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,qBAAKvG,UAAU,iBAAiBpB,GAAG,cAAnC,SACE,cAACqa,GAAD,CACE7T,KAAK,iBACLwG,WAAYmD,EACZxJ,SAAU5H,KAAKyb,uBAIrB,cAAC/S,GAAA,EAAD,CACEG,WAAS,EACTF,MAAI,EACJC,GAAI,EACJ3H,GAAG,yBACHyO,QAAQ,SACRmM,aAAa,SACbtV,WAAW,SACXF,QAAQ,OARV,SAUE,cAAC7E,EAAD,CAAcP,GAAG,qBAAqBQ,KAAK,aAE7C,cAACiH,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,qBAAKvG,UAAU,iBAAiBpB,GAAG,gBAAnC,SACE,cAACqa,GAAD,CACE7T,KAAK,mBACLwG,WAAYuD,EACZ5J,SAAU5H,KAAK0b,oC,GA9FWlb,IAAMC,WCJnC,SAASqb,KAMtB,OACE,cAACxW,GAAD,CAAM5C,MAAM,kBAAkB9B,YANZ,CAClB,CAAC,OAAQ,SACT,CAAC,iBAAkB,YACnB,CAAC,aAAc,iBAGf,SACE,cAAC,GAAD,M,ICRemb,G,kDACnB,WAAYlc,GAAQ,IAAD,8BACjB,cAAMA,IACDmI,MAAQ,CACX+O,KAAM,IAER,EAAKiF,eAAiBnc,EAAMmc,eAC5B,EAAKxE,iBAAmB,EAAKA,iBAAiB1X,KAAtB,gBANP,E,gEAUjBE,KAAKgc,eAAenO,aAAavK,KAAKtD,KAAKwX,oB,uCAG5BT,GACf/W,KAAKsI,SAAS,CACZyO,W,+BAIM,IACAA,EAAS/W,KAAKgI,MAAd+O,KACR,OAAO,cAACD,GAAD,CAAWC,KAAMA,Q,GAtBkBvW,IAAMC,WCErC,SAASwb,KAMtB,OACE,cAAC3W,GAAD,CAAM5C,MAAM,OAAO9B,YAND,CAClB,CAAC,OAAQ,SACT,CAAC,OAAQ,UAIT,SACE,cAAC,GAAD,CAAkBob,eAAgBA,MCFzB,SAASE,GAAoBrc,GAAQ,IAC1C2O,EAAoB3O,EAApB2O,OAAQK,EAAYhP,EAAZgP,QAEhB,OACE,mCACE,cAACpD,GAAA,EAAD,CAAgBgE,MAAO,CAAEuE,UAAW,KAApC,SACE,cAACrD,GAAA,EAAD,UACE,eAACE,GAAA,EAAD,WACE,eAACN,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,UAAYhC,EAAO/G,UAErB,eAAC8I,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,4BACA,cAACA,GAAA,EAAD,UAAYhC,EAAO3B,kBAErB,eAAC0D,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,sBACA,cAACA,GAAA,EAAD,UAAY3B,gB,wDCzBX,SAASsN,GAAWtc,GAAQ,IACjC0F,EAAa1F,EAAb0F,SACR,OACE,cAAC,KAAD,UACE,cAAC,KAAD,CAAsBtE,GAAG,qBAAzB,SACGsE,MCLM,SAAS6W,GAAcvc,GAAQ,IACpCwc,EAAqBxc,EAArBwc,QAASC,EAAYzc,EAAZyc,QAEjB,OACE,eAAC,KAAD,WACE,cAACla,EAAA,EAAD,CAAQ+C,QAASkX,EAAQlX,QAAS9D,MAAM,UAAxC,SACGgb,EAAQ5U,OAEX,cAACrF,EAAA,EAAD,CAAQ+C,QAASmX,EAAQnX,QAAS9D,MAAM,YAAYsG,WAAS,EAA7D,SACG2U,EAAQ7U,U,ICNI8U,G,kDACnB,WAAY1c,GAAQ,IAAD,8BACjB,cAAMA,IACDmI,MAAQ,CACXrC,MAAM,GAER,EAAK6W,WAAa,EAAKA,WAAW1c,KAAhB,gBAClB,EAAK+F,YAAc,EAAKA,YAAY/F,KAAjB,gBANF,E,yDAUjB,OAAOE,KAAKsI,SAAS,CAAE3C,MAAM,M,oCAI7B,OAAO3F,KAAKsI,SAAS,CAAE3C,MAAM,M,+BAGrB,IAAD,OACD8W,EAAe,CACnBhV,KAAM,SACNtC,QAASnF,KAAK6F,aAHT,EAMmC7F,KAAKH,MAAvC6C,EAND,EAMCA,MAAOga,EANR,EAMQA,aAAcnX,EANtB,EAMsBA,SACrBI,EAAS3F,KAAKgI,MAAdrC,KACR,OACE,eAAC,KAAD,CACEA,KAAMA,EACNG,QAAS,kBAAM,EAAKD,aACpBuK,kBAAgB,eAChBmC,mBAAiB,qBACjBtR,GAAG,SALL,UAOE,cAAC8E,GAAA,EAAD,UAAcrD,IACd,cAACyZ,GAAD,UAAa5W,IACb,cAAC6W,GAAD,CAAeC,QAASI,EAAcH,QAASI,W,GApCnBlc,IAAMC,WCFrBkc,G,kDACnB,WAAY9c,GAAQ,IAAD,8BACjB,cAAMA,IAED+c,cAAgBpc,IAAMqc,YAC3B,EAAKC,YAAc,EAAKA,YAAYhd,KAAjB,gBACnB,EAAKid,cAAgB,EAAKA,cAAcjd,KAAnB,gBACrB,EAAK0c,WAAa,EAAKA,WAAW1c,KAAhB,gBAND,E,0DASJ,IACL2E,EAAYzE,KAAKH,MAAjB4E,QACRzE,KAAK4c,cAAcI,QAAQnX,cAC3BpB,EAAQE,KAAK,c,sCAKboK,GADqB/O,KAAKH,MAAlBwS,UACe/O,KAAKtD,KAAK8c,e,mCAKjC,OAAO9c,KAAK4c,cAAcI,QAAQR,e,+BAG1B,IACAnK,EAAarS,KAAKH,MAAlBwS,SAEFzO,EAAO,8CAA0CyO,EAA1C,KAEPqK,EAAe,CACnBjV,KAAM,UACNtC,QAASnF,KAAK+c,eAGhB,OACE,cAAC,GAAD,CACEE,IAAKjd,KAAK4c,cACVla,MAXU,iBAYVga,aAAcA,EAHhB,SAKG9Y,Q,GA1CuCpD,IAAMC,WCEhDyc,G,kDACJ,WAAYrd,GAAQ,IAAD,8BACjB,cAAMA,IAED+c,cAAgBpc,IAAMqc,YAC3B,EAAKL,WAAa,EAAKA,WAAW1c,KAAhB,gBAJD,E,yDAQjBE,KAAK4c,cAAcI,QAAQR,e,+BAGnB,IAAD,EACuBxc,KAAKH,MAA3BwS,EADD,EACCA,SAAU5N,EADX,EACWA,QAClB,OACE,qCACE,cAAC0Y,GAAA,EAAD,CAASza,MAAM,gBAAgB1B,aAAW,gBAA1C,SACE,cAACoB,EAAA,EAAD,CACEkF,QAAQ,YACRjG,MAAM,YACN+b,UAAW,cAAC,KAAD,IACXjY,QAASnF,KAAKwc,WAJhB,sBASF,cAAC,GAAD,CACES,IAAKjd,KAAK4c,cACVvK,SAAUA,EACV5N,QAASA,W,GA7BoBjE,IAAMC,WAoC9B4E,eAAW6X,ICnCX,SAASG,GAA0Bxd,GAAQ,IAChDkK,EAAWlK,EAAXkK,OACR,OACE,eAACvE,EAAA,EAAD,WACE,eAACkD,GAAA,EAAD,CAAMG,WAAS,EAACtE,QAAS,EAAzB,UACE,cAACmE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAACE,GAAD,CAAepG,MAAM,iBAArB,SACE,cAACwZ,GAAD,CACE1N,OAAQzE,EAAOR,OACfsF,QAAS9E,EAAON,oBAItB,cAACf,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAACE,GAAD,CAAepG,MAAM,mBAArB,SACE,cAACwZ,GAAD,CACE1N,OAAQzE,EAAOP,SACfqF,QAAS9E,EAAOL,mBAItB,cAAChB,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAACE,GAAD,CAAepG,MAAM,WAEvB,cAACgG,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAACE,GAAD,CAAepG,MAAM,oBAGzB,cAAC7B,EAAA,EAAD,CAAKwB,UAAU,wBAAf,SACE,cAAC,GAAD,CAA0BgQ,SAAUtI,EAAO9I,UC9BpC,SAASqc,GAAkBzd,GAAQ,IAGnCkK,EAETlK,EAHFE,SACEiI,MAAS+B,OAIPnJ,EAAc,CAClB,CAAC,OAAQ,SACT,CAAC,iBAAkB,YACnB,CAAC,iBAAD,2BAAuCmJ,EAAO9I,MAGhD,OACE,cAACqE,GAAD,CAAM5C,MAAM,iBAAiB9B,YAAaA,EAA1C,SACE,cAACyc,GAAD,CAA2BtT,OAAQA,MChB1B,SAASwT,KACtB,OACE,cAACjY,GAAD,CAAM5C,MAAM,4BAA4B9B,YAAa,GAArD,SACE,cAAC8H,GAAA,EAAD,CAAMG,WAAS,EAAC6G,QAAQ,SAASC,UAAU,MAAMpL,QAAS,EAA1D,SACE,cAACmE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAACE,GAAD,CAAepG,MAAM,kCAArB,SACGjD,IACC,cAACyJ,GAAD,CAAiB5H,KAAK,QAAtB,qBAEA,cAAC4H,GAAD,CAAiB5H,KAAK,SAAtB,iCCDC,SAASkc,KACtB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAgBld,KAAK,SAASJ,OAAQ,kBAAM,cAACqI,GAAD,OAC5C,cAAC,EAAD,CACEjI,KAAK,QACLL,wBAAsB,EACtBC,OAAQ,WACN,OAAO,cAAC8P,GAAD,OAGX,cAAC,EAAD,CACE1P,KAAK,iCACLL,wBAAsB,EACtBC,OAAQ,SAACH,GACP,OAAO,cAAC0Z,GAAD,CAAmB1Z,SAAUA,OAGxC,cAAC,EAAD,CACEO,KAAK,WACLL,wBAAsB,EACtBC,OAAQ,WACN,OAAO,cAACsW,GAAD,OAGX,cAAC,EAAD,CACElW,KAAK,eACLL,wBAAsB,EACtBC,OAAQ,WACN,OAAO,cAAC4b,GAAD,OAGX,cAAC,EAAD,CACExb,KAAK,6BACLL,wBAAsB,EACtBC,OAAQ,SAACH,GACP,OAAO,cAACud,GAAD,CAAmBvd,SAAUA,OAGxC,cAAC,EAAD,CACEO,KAAK,WACLL,wBAAsB,EACtBC,OAAQ,WACN,OAAO,cAACwZ,GAAD,OAGX,cAAC,EAAD,CACEpZ,KAAK,QACLL,wBAAsB,EACtBC,OAAQ,WACN,OAAO,cAAC+b,GAAD,OAGX,cAAC,IAAD,CAAO3b,KAAK,IAAZ,SACE,cAACid,GAAD,WF1CVD,GAAkB5c,aAAe,CAC/BX,SAAU,CAAEiI,MAAO,CAAE+B,OlDkXhB,WACL,IAAM0T,EAAe,IAAIrR,GACvB,eACA,KACA,UACA,WACA,SACAsB,GACA,UACAd,IAGI8Q,EAAiB,IAAItR,GACzB,eACA,KACA,UACA,aACA,SACAsB,GACA,UACAd,IAGF,OAAO,IAAItD,GACT,EACAmU,EACAC,EACAD,EAAa/Q,SAAS,GAAGO,KACzByQ,EAAehR,SAAS,GAAGO,MkD9YAqE,MGxB/BqM,IAASzd,OAAO,cAACsd,GAAD,IAAeI,SAASC,eAAe,W","file":"static/js/main.df5bbfbb.chunk.js","sourcesContent":["import Cookies from \"js-cookie\";\n\nfunction parseJwt(token) {\n  const base64Url = token.split(\".\")[1];\n  const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  const jsonPayload = decodeURIComponent(\n    atob(base64)\n      .split(\"\")\n      .map((c) => {\n        const component = `00${c.charCodeAt(0).toString(16)}`;\n        return `%${component.slice(-2)}`;\n      })\n      .join(\"\")\n  );\n\n  return JSON.parse(jsonPayload);\n}\n\nexport function saveToken(token) {\n  const tokenPayload = parseJwt(token.split(\" \")[1]);\n  const expiryDate = new Date(tokenPayload.exp * 1000);\n  Cookies.set(\"authToken\", token, { expires: expiryDate, SameSite: \"Strict\" });\n}\n\nexport function getAuthorizationHeader() {\n  const token = Cookies.get(\"authToken\");\n  return {\n    headers: { Authorization: `${token}` }\n  };\n}\n\nexport function isAuthenticated() {\n  return !!Cookies.get(\"authToken\");\n}\n\nexport function isAdmin() {\n  const token = Cookies.get(\"authToken\");\n  const tokenPayload = parseJwt(token.split(\" \")[1]);\n  return tokenPayload.role === \"ADMIN\" || tokenPayload.role === \"SUPERUSER\";\n}\n\nexport default {\n  saveToken,\n  getAuthorizationHeader\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\n\nexport default class ProtectedRoute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.component = this.component.bind(this);\n  }\n\n  component(location) {\n    const { authenticationRequired, render } = this.props;\n    const authenticated = isAuthenticated();\n\n    if (authenticationRequired) {\n      if (authenticated) {\n        return render(location);\n      }\n\n      return <Redirect to={{ pathname: \"/Login\" }} />;\n    }\n\n    if (authenticated) {\n      return <Redirect to={{ pathname: \"/Home\" }} />;\n    }\n\n    return render(location);\n  }\n\n  render() {\n    const { path } = this.props;\n    return (\n      <Route\n        exact\n        path={path}\n        render={({ location }) => this.component(location)}\n      />\n    );\n  }\n}\n\nProtectedRoute.propTypes = {\n  path: PropTypes.string.isRequired,\n  authenticationRequired: PropTypes.bool,\n  render: PropTypes.func.isRequired\n};\n\nProtectedRoute.defaultProps = {\n  authenticationRequired: false\n};\n","import React from \"react\";\nimport { Box, Breadcrumbs, Link, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default function DynamicBreadcrumb(props) {\n  const { breadcrumbs } = props;\n  return (\n    <Box padding=\"2em 0em 0em 1em\">\n      <Breadcrumbs aria-label=\"breadcrumb\" id=\"breadcrumbParent\">\n        {breadcrumbs.map((crumb, i) => {\n          return (\n            <Link\n              color=\"inherit\"\n              href={crumb[1]}\n              id={`breadcrumb${i}`}\n              key={`breadcrumb ${crumb[0]}`}\n            >\n              <Typography color=\"textPrimary\">{crumb[0]}</Typography>\n            </Link>\n          );\n        })}\n      </Breadcrumbs>\n    </Box>\n  );\n}\nDynamicBreadcrumb.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired\n};\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { SwapHoriz } from \"@material-ui/icons/\";\n\nexport default function StreamButton(props) {\n  const { type } = props;\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      padding: \"0 5px\",\n      margin: \"1em\"\n    },\n    label: {\n      textTransform: \"\"\n    }\n  })(Button);\n\n  return (\n    <StyledButton type={type}>\n      <div className=\"buttonText\">\n        <SwapHoriz />\n        Stream\n      </div>\n    </StyledButton>\n  );\n}\n\nStreamButton.propTypes = {\n  type: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport StreamButton from \"./Buttons/StreamButton\";\n\nexport default function TitleButtons() {\n  return (\n    <div className=\"alignRightFloat\">\n      <NavLink\n        to=\"/Streams\"\n        activeClassName=\"hideLinkStyle\"\n        className=\"hideLinkStyle\"\n        exact\n      >\n        <StreamButton type=\"submit\" />\n      </NavLink>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TitleButtons from \"./TitleButtons\";\n\nexport default function Title(props) {\n  const { title, deviceList } = props;\n  return (\n    <Box className=\"flexContents headerAreaUnderline\">\n      <div className=\"title\">{title}</div>\n      {deviceList ? <TitleButtons /> : <></>}\n    </Box>\n  );\n}\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  deviceList: PropTypes.bool.isRequired\n};\n","import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport * as AuthenticationUtil from \"./AuthenticationUtil\";\n\nexport const unknownErrorMessage =\n  \"An unknown error occurred. Please try again later.\";\nexport const incorrectCredentialsMessage =\n  \"Incorrect username and/or password. Please enter the correct credentials and try again.\";\n\nexport async function logIn(credentials) {\n  const authorizationHeader = {\n    auth: {\n      username: credentials.username,\n      password: credentials.password\n    }\n  };\n\n  return axios\n    .get(process.env.REACT_APP_TOKEN, authorizationHeader)\n    .then((response) => {\n      AuthenticationUtil.saveToken(response.headers.authorization);\n    })\n    .catch((error) => {\n      let message = unknownErrorMessage;\n      if (error.response && error.response.status === \"403\") {\n        message = incorrectCredentialsMessage;\n      }\n      return Promise.reject(new Error(message));\n    });\n}\n\nexport function logOut() {\n  Cookies.remove(\"authToken\");\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport { AppBar, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\nimport { AccountCircle, Home } from \"@material-ui/icons/\";\n\nimport { logOut } from \"../api/AuthenticationApi\";\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\n\nclass HeaderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      menuButton: {\n        marginRight: theme.spacing(2)\n      }\n    }));\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout() {\n    const { history } = this.props;\n    logOut();\n    history.push(\"/Login\");\n  }\n\n  render() {\n    return (\n      <div className=\"headerBar\">\n        <AppBar position=\"static\">\n          <Toolbar className=\"darkGrey\">\n            <div className=\"headerTitle\">\n              <NavLink to=\"/Home\" className=\"headerTitle\">\n                <IconButton\n                  edge=\"start\"\n                  className={this.classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"menu\"\n                >\n                  <Home />\n                </IconButton>\n              </NavLink>\n              Switchboard\n            </div>\n            <IconButton\n              id=\"acctBtn\"\n              color=\"inherit\"\n              disabled={!isAuthenticated()}\n              onClick={this.handleLogout}\n            >\n              <AccountCircle />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\nexport default withRouter(HeaderBar);\n\nHeaderBar.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Container } from \"@material-ui/core\";\nimport DynamicBreadcrumb from \"./DynamicBreadcrumb\";\nimport Title from \"./Title\";\nimport HeaderBar from \"./HeaderBar\";\n\nexport default function Page(props) {\n  const { breadcrumbs, title, deviceList, children } = props;\n  return (\n    <>\n      <HeaderBar />\n      <Container>\n        <DynamicBreadcrumb breadcrumbs={breadcrumbs} />\n        <Box className=\"areaUnderBreadcrumbs\">\n          <Title title={title} deviceList={deviceList} />\n          {children}\n        </Box>\n      </Container>\n    </>\n  );\n}\n\nPage.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n    .isRequired,\n  title: PropTypes.string.isRequired,\n  deviceList: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\nPage.defaultProps = {\n  deviceList: false\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    color: \"#ef5350\"\n  }\n}));\n\nexport default function LoginFailedDialog(props) {\n  const classes = useStyles();\n  const { open, setOpen, message } = props;\n\n  const closeDialog = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Dialog open={open} onClose={closeDialog}>\n        <DialogTitle id=\"login-failed-dialog-title\" className={classes.title}>\n          Login Failed\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"login-failed-dialog-description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nLoginFailedDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired\n};\n","import React, { useState } from \"react\";\nimport { Button, Container, makeStyles, TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function LoginConsole(props) {\n  const { handleSubmit } = props;\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit(username, password);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nLoginConsole.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport LoginFailedDialog from \"./LoginFailedDialog\";\nimport LoginConsole from \"./LoginConsole\";\nimport { logIn } from \"../api/AuthenticationApi\";\n\nexport default class LoginPageContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogOpen: false,\n      dialogMessage: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setDialogOpen = this.setDialogOpen.bind(this);\n    this.setDialogMessage = this.setDialogMessage.bind(this);\n  }\n\n  handleSubmit(username, password) {\n    const { history } = this.props;\n    logIn({ username, password })\n      .then(() => {\n        history.push(\"/Home\");\n      })\n      .catch((error) => {\n        this.setState({\n          dialogOpen: true,\n          dialogMessage: error.message\n        });\n      });\n  }\n\n  setDialogOpen(open) {\n    this.setState({\n      dialogOpen: open\n    });\n  }\n\n  setDialogMessage(message) {\n    this.setState({\n      dialogMessage: message\n    });\n  }\n\n  render() {\n    const { dialogOpen, dialogMessage } = this.state;\n    return (\n      <>\n        <LoginConsole handleSubmit={this.handleSubmit} />\n        <LoginFailedDialog\n          open={dialogOpen}\n          setOpen={this.setDialogOpen}\n          message={dialogMessage}\n        />\n      </>\n    );\n  }\n}\n\nLoginPageContents.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Page from \"../general/Page\";\nimport LoginPageContents from \"./LoginPageContents\";\n\nexport default function LoginPage() {\n  const history = useHistory();\n\n  return (\n    <Page title=\"Login\" breadcrumbs={[]}>\n      <LoginPageContents history={history} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function GridColumn(props) {\n  const { width, spacing, children } = props;\n  return (\n    <Grid item xs={width}>\n      <Grid container spacing={spacing}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\nGridColumn.propTypes = {\n  width: PropTypes.number.isRequired,\n  spacing: PropTypes.number,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nGridColumn.defaultProps = {\n  spacing: 3\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Typography, Paper } from \"@material-ui/core\";\n\nexport default function DashboardCard(props) {\n  const { title, children } = props;\n  return (\n    <>\n      <Paper className=\"dashboardCard\" elevation={2}>\n        <Typography variant=\"h5\" gutterBottom>\n          {title}\n        </Typography>\n        {children}\n      </Paper>\n    </>\n  );\n}\n\nDashboardCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nDashboardCard.defaultProps = {\n  children: \"\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboard.css\";\nimport { Link, Button, withStyles } from \"@material-ui/core\";\n\nexport default function DashboardButton(props) {\n  const { href, children } = props;\n\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #59bc31 30%, #59bc31 90%)\",\n      borderRadius: 90,\n      border: 0,\n      color: \"white\",\n      height: 40,\n      minWidth: 100,\n      maxWidth: 200,\n      padding: \"0 5px\",\n      textTransform: \"none\"\n    }\n  })(Button);\n  return (\n    <Link color=\"inherit\" href={href}>\n      <StyledButton>{children}</StyledButton>\n    </Link>\n  );\n}\n\nDashboardButton.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class StatusIndicator extends React.Component {\n  getStatusStyle() {\n    const { status } = this.props;\n    switch (status) {\n      case \"Online\":\n        return \"green statusIndicatorBody statusTextOnline \";\n      case \"Pending\":\n        return \"yellow statusIndicatorBody statusTextOnline\";\n      case \"Error\":\n        return \"red statusIndicatorBody statusTextOnline\";\n      default:\n        return \"lightGrey statusIndicatorBody statusTextOffline\";\n    }\n  }\n\n  render() {\n    const { status } = this.props;\n    return <div className={this.getStatusStyle()}>{status}</div>;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.oneOf([\"Online\", \"Offline\", \"Error\", \"Pending\"]).isRequired\n};\n","export default class StreamInfo {\n  // to be used once backend has date, status, type, and time fields\n  // constructor(id, date, sender, receiver, status, type, time, extras) {\n  //     this.id = id;\n  //     this.date = new Date(date).toString().split(\" \").slice(0, 5).join(\" \");\n  //     this.sender = sender;\n  //     this.receiver = receiver;\n  //     this.status = status;\n  //     this.type = type;\n  //     this.time = time;\n  //     this.extras = extras;\n  // }\n\n  // temporary with static fields until backend is up to snuff\n  constructor(id, sender, receiver, outputChannel, inputChannel) {\n    this.id = id;\n    this.date = new Date(\"2020-10-31T08:15:30\")\n      .toString()\n      .split(\" \")\n      .slice(0, 5)\n      .join(\" \");\n    this.sender = sender;\n    this.receiver = receiver;\n    this.outputChannel = outputChannel;\n    this.inputChannel = inputChannel;\n    this.status = \"Online\";\n    this.type = \"Type 1\";\n    this.time = \"00:34:44\";\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Description } from \"@material-ui/icons\";\nimport { NavLink } from \"react-router-dom\";\n\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default function StreamDetailsButton(props) {\n  const { streamInfo } = props;\n\n  return (\n    <>\n      <NavLink\n        to={{\n          pathname: `/Streams/Details/${streamInfo.id}`,\n          state: { stream: streamInfo }\n        }}\n      >\n        <IconButton>\n          <Description />\n        </IconButton>\n      </NavLink>\n    </>\n  );\n}\n\nStreamDetailsButton.propTypes = {\n  streamInfo: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  ArrowDownward,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\n\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport StreamDetailsButton from \"./StreamDetailsButton\";\nimport StreamInfo from \"../model/StreamInfo\";\n\nexport default class StreamsTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.columnInfo = [\n      {\n        title: \"ID\",\n        field: \"id\"\n      },\n      {\n        title: \"Date\",\n        field: \"date\"\n      },\n      {\n        title: \"Sender\",\n        field: \"sender.name\"\n      },\n      {\n        title: \"Receiver\",\n        field: \"receiver.name\"\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        render: function Status(rowData) {\n          return <StatusIndicator status={rowData.status} />;\n        }\n      },\n      {\n        title: \"Type\",\n        field: \"type\"\n      },\n      {\n        title: \"Time Elapsed\",\n        field: \"time\"\n      },\n      {\n        title: \"Actions\",\n        field: \"action\",\n        filtering: false,\n        sorting: false,\n        render: function Actions(rowData) {\n          return <StreamDetailsButton streamInfo={rowData} />;\n        },\n        align: \"center\",\n        export: false\n      }\n    ];\n    this.options = {\n      toolbar: false,\n      headerStyle: {\n        backgroundColor: \"#f1f1f1\",\n        fontWeight: \"bold\"\n      },\n      filtering: false,\n      draggable: false\n    };\n    this.icons = {\n      SortArrow: ArrowDownward,\n      FirstPage,\n      LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft\n    };\n  }\n\n  getColumnInfo() {\n    return this.columnInfo;\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  getIcons() {\n    return this.icons;\n  }\n\n  render() {\n    const { streams } = this.props;\n    return (\n      <>\n        <Box>\n          <TableContainer>\n            <MaterialTable\n              columns={this.getColumnInfo()}\n              data={streams}\n              options={this.getOptions()}\n              icons={this.getIcons()}\n            />\n          </TableContainer>\n          <div className=\"textAlignRightPadded\">\n            {\"Time Zone: \".concat(\n              Intl.DateTimeFormat().resolvedOptions().timeZone\n            )}\n          </div>\n        </Box>\n      </>\n    );\n  }\n}\n\nStreamsTable.propTypes = {\n  streams: PropTypes.arrayOf(PropTypes.instanceOf(StreamInfo)).isRequired\n};\n","export default class DeviceInfo {\n  constructor(\n    serial,\n    lastCommunication,\n    publicIpAddress,\n    privateIpAddress,\n    displayName,\n    status,\n    channels,\n    deviceType,\n    extras\n  ) {\n    this.serialNumber = serial;\n    this.lastCommunication = lastCommunication;\n    this.publicIp = publicIpAddress;\n    this.privateIp = privateIpAddress;\n    this.name = displayName;\n    this.status = status;\n    this.channels = channels;\n    this.deviceType = deviceType;\n    this.extras = extras;\n  }\n\n  static getConciseProperties() {\n    return [\n      \"name\",\n      \"serialNumber\",\n      \"status\",\n      \"publicIp\",\n      \"privateIp\",\n      \"channels\"\n    ];\n  }\n}\n","export default class OutputChannelInfo {\n  constructor(id, name, port, encoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.encoder = encoder;\n  }\n}\n","export default class InputChannelInfo {\n  constructor(id, name, port, decoder) {\n    this.id = id;\n    this.name = name;\n    this.port = port;\n    this.decoder = decoder;\n  }\n}\n","export default class LogInfo {\n  constructor(id, dateTime, level, message) {\n    this.id = id;\n    this.dateTime = new Date(dateTime)\n      .toString()\n      .split(\" \")\n      .slice(0, 5)\n      .join(\" \");\n    this.level = level;\n    this.message = message;\n  }\n}\n","import DeviceInfo from \"../model/DeviceInfo\";\nimport OutChannelInfo from \"../model/OutputChannelInfo\";\nimport InChannelInfo from \"../model/InputChannelInfo\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport LogInfo from \"../model/LogInfo\";\n\nconst extras = [\"Additional Device details go here\"];\nconst sampleInputChannels = [\n  new InChannelInfo(1, \"Input ch 1\", 500, null),\n  new InChannelInfo(2, \"Input ch 2\", 456, null),\n  new InChannelInfo(3, \"Input ch 3\", 800, null)\n];\nconst sampleOutputChannels = [\n  new OutChannelInfo(1, \"Output ch 1\", 500, null),\n  new OutChannelInfo(2, \"Output ch 2\", 456, null),\n  new OutChannelInfo(3, \"Output ch 3\", 800, null)\n];\n\nexport function getSenders(callback) {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:30:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 3\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:40:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 4\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:50:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 5\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:60:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 6\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:70:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 7\",\n      \"Offline\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:80:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 8\",\n      \"Pending\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:90:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 9\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n\n  callback(sampleSenders);\n}\n\nexport function getSampleSender() {\n  return new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n}\n\nexport function getReceivers(callback) {\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:03:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 3\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:04:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 4\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:05:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 5\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:06:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 6\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:07:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 7\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:08:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 8\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:09:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 9\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:11:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 11\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:21:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 12\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:31:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 13\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:41:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 14\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:51:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 15\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:61:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 16\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:71:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 17\",\n      \"Offline\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:81:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 18\",\n      \"Pending\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:91:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 19\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  callback(sampleReceivers);\n}\n\nexport function getAllStreams() {\n  const sampleSenders = [\n    new DeviceInfo(\n      \"1:10:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 1\",\n      \"Online\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:20:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Sender 2\",\n      \"Error\",\n      sampleOutputChannels,\n      \"encoder\",\n      extras\n    )\n  ];\n  const sampleReceivers = [\n    new DeviceInfo(\n      \"1:01:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 1\",\n      \"Online\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    ),\n    new DeviceInfo(\n      \"1:02:111:999\",\n      null,\n      \"175.214.12.96\",\n      \"123:456\",\n      \"Receiver 2\",\n      \"Error\",\n      sampleInputChannels,\n      \"decoder\",\n      extras\n    )\n  ];\n\n  return [\n    new StreamInfo(1, sampleSenders[0], sampleReceivers[0], 1, 2),\n    new StreamInfo(2, sampleSenders[1], sampleReceivers[1], 3, 4),\n    new StreamInfo(3, sampleSenders[1], sampleReceivers[0], 5, 6)\n  ];\n}\n\nexport function getSampleStream() {\n  const sampleSender = new DeviceInfo(\n    \"1:10:111:999\",\n    null,\n    \"123:456\",\n    \"Sender 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"encoder\",\n    extras\n  );\n\n  const sampleReceiver = new DeviceInfo(\n    \"1:22:333:989\",\n    null,\n    \"145:396\",\n    \"Receiver 1\",\n    \"Online\",\n    sampleOutputChannels,\n    \"decoder\",\n    extras\n  );\n\n  return new StreamInfo(\n    1,\n    sampleSender,\n    sampleReceiver,\n    sampleSender.channels[0].port,\n    sampleReceiver.channels[1].port\n  );\n}\n\nexport function getAllLogs(callback) {\n  const dates = [\n    new Date(\"2020-10-31T15:53:23\"),\n    new Date(\"2020-11-13T12:36:30\"),\n    new Date(\"2020-11-13T08:24:30\")\n  ];\n\n  const sampleLogs = [\n    new LogInfo(1, dates[0], \"Info\", \"Log 1 info\"),\n    new LogInfo(2, dates[1], \"Info\", \"Log 2 info\"),\n    new LogInfo(3, dates[2], \"Info\", \"Log 3 info\")\n  ];\n\n  callback(sampleLogs);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StreamsTable from \"./StreamsTable\";\nimport { getAllStreams } from \"../api/SampleData\";\n\nexport default class StreamsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: []\n    };\n    this.dataSource = props.dataSource;\n    this.handleStreamsChange = this.handleStreamsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataSource\n      .getAllStreams()\n      .then(this.handleStreamsChange)\n      .catch(() => {\n        this.handleStreamsChange(getAllStreams());\n      });\n  }\n\n  handleStreamsChange(streams) {\n    this.setState({\n      streams\n    });\n  }\n\n  render() {\n    const { streams } = this.state;\n    return <StreamsTable streams={streams} />;\n  }\n}\n\nStreamsTableWrapper.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import DeviceInfo from \"./DeviceInfo\";\n\nexport function convertToDataObject(databaseDevice) {\n  return new DeviceInfo(\n    databaseDevice.serialNumber,\n    databaseDevice.lastCommunication,\n    databaseDevice.device.publicIpAddress,\n    databaseDevice.device.privateIpAddress,\n    databaseDevice.device.displayName,\n    databaseDevice.device.status,\n    databaseDevice.inputs || databaseDevice.outputs,\n    databaseDevice.inputs ? \"receiver\" : \"sender\"\n  );\n}\n\nexport function convertToServiceObject(deviceInfo) {\n  const serviceObject = {\n    serialNumber: deviceInfo.serialNumber,\n    lastCommunication: deviceInfo.lastCommunication,\n    device: {\n      serialNumber: deviceInfo.serialNumber,\n      publicIpAddress: deviceInfo.publicIp,\n      privateIpAddress: deviceInfo.privateIp,\n      displayName: deviceInfo.name,\n      status: deviceInfo.status\n    }\n  };\n  if (deviceInfo.deviceType === \"sender\") {\n    serviceObject.outputs = deviceInfo.channels;\n  } else {\n    serviceObject.inputs = deviceInfo.channels;\n  }\n  return serviceObject;\n}\n","import axios from \"axios\";\nimport { convertToDataObject } from \"../model/ConvertDataFormat\";\nimport StreamInfo from \"../model/StreamInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nexport async function getStream(streamId) {\n  return axios\n    .get(\n      `${process.env.REACT_APP_STREAM}/${streamId}`,\n      getAuthorizationHeader()\n    )\n    .then((response) => {\n      const stream = response.data;\n      return new StreamInfo(\n        stream.id,\n        convertToDataObject(stream.outputChannel.encoder),\n        convertToDataObject(stream.inputChannel.decoder),\n        stream.outputChannel.channel.port,\n        stream.inputChannel.channel.port\n      );\n    });\n}\n\nexport async function getAllStreams() {\n  return axios\n    .get(process.env.REACT_APP_STREAM, getAuthorizationHeader())\n    .then((streams) => {\n      return Promise.all(\n        streams.data.map((streamId) => {\n          return getStream(streamId);\n        })\n      );\n    });\n}\n\nexport async function deleteStream(streamId) {\n  return axios.delete(\n    `${process.env.REACT_APP_STREAM}/${streamId}`,\n    getAuthorizationHeader()\n  );\n}\n\nexport async function createStream(selectedReceiverID, selectedSenderID) {\n  return axios.post(\n    process.env.REACT_APP_STREAM,\n    {\n      inputChannelId: selectedReceiverID,\n      outputChannelId: selectedSenderID\n    },\n    getAuthorizationHeader()\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\nimport StreamsTableWrapper from \"../streamlist/StreamsTableWrapper\";\n\nimport * as StreamApi from \"../api/StreamApi\";\n\nexport default function ActiveStreamCard() {\n  const dataSource = StreamApi;\n\n  return (\n    <DashboardCard title=\"Active Streams\" style={{ height: \"100%\" }}>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={12}>\n          <StreamsTableWrapper dataSource={dataSource} />\n        </Grid>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Streams\">See more</DashBoardButton>\n        </Grid>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Streams/New\">Start Stream</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function ActivityLogCard() {\n  return (\n    <DashboardCard title=\"Activity Logs\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Logs\">View All</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function DevicesCard() {\n  return (\n    <DashboardCard title=\"Devices\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Devices\">View Senders</DashBoardButton>\n        </Grid>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Devices\">View Receivers</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport DashBoardButton from \"../general/dashboard/DashboardButton\";\n\nexport default function AdminPanelCard() {\n  return (\n    <DashboardCard title=\"Admin Panel\">\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Admin\">View Users</DashBoardButton>\n        </Grid>\n        <Grid item xs={4}>\n          <DashBoardButton href=\"/Admin\">Create a User</DashBoardButton>\n        </Grid>\n      </Grid>\n    </DashboardCard>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport GridColumn from \"../general/dashboard/GridColumn\";\nimport ActiveStreamCard from \"./ActiveStreamCard\";\nimport ActivityLogCard from \"./ActivityLogCard\";\nimport DevicesCard from \"./DevicesCard\";\nimport AdminPanelCard from \"./AdminPanelCard\";\n\nimport { isAdmin } from \"../api/AuthenticationUtil\";\n\nexport default function HomePageContents() {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"stretch\"\n      direction=\"row\"\n      spacing={3}\n    >\n      <Grid item xs={6}>\n        <Grid style={{ height: \"100%\" }}>\n          <ActiveStreamCard />\n        </Grid>\n      </Grid>\n      <GridColumn width={6}>\n        <Grid item xs={12}>\n          <DevicesCard />\n        </Grid>\n        <Grid item xs={12}>\n          <ActivityLogCard />\n        </Grid>\n        {isAdmin() ? (\n          <Grid item xs={12}>\n            <AdminPanelCard />\n          </Grid>\n        ) : (\n          <div />\n        )}\n      </GridColumn>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport HomePageContents from \"./HomePageContents\";\n\nexport default function HomePage() {\n  return (\n    <Page title=\"Dashboard\" breadcrumbs={[[\"Home\", \"\"]]}>\n      <HomePageContents />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default function TabPanel(props) {\n  const { children, value, index } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n    >\n      {value === index && (\n        <Box p={0}>\n          <Typography component=\"span\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.element.isRequired,\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport default function ChannelDetailsTableHead() {\n  return (\n    <TableRow>\n      <TableCell className=\"lightGrey\">ID</TableCell>\n      <TableCell className=\"lightGrey\">Name</TableCell>\n      <TableCell className=\"lightGrey\">Port</TableCell>\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\n\nexport default function ChannelDetailsTableRow(props) {\n  const {\n    channel: { id, name, port }\n  } = props;\n  return (\n    <TableRow>\n      <TableCell>{id}</TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{port}</TableCell>\n    </TableRow>\n  );\n}\nChannelDetailsTableRow.propTypes = {\n  channel: PropTypes.oneOfType([\n    PropTypes.instanceOf(InputChannelInfo),\n    PropTypes.instanceOf(OutputChannelInfo)\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Table, TableBody, TableHead } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport ChannelDetailsTableHead from \"./ChannelDetailsTableHead\";\nimport ChannelDetailsTableRow from \"./ChannelDetailsTableRow\";\n\nexport default function ChannelDetailsTable(props) {\n  const { channels } = props;\n  return (\n    <Table className=\"flexContents\">\n      <TableHead>\n        <ChannelDetailsTableHead />\n      </TableHead>\n      <TableBody>\n        {channels.map((channel) => {\n          return (\n            <ChannelDetailsTableRow channel={channel} key={channel.name} />\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\nChannelDetailsTable.propTypes = {\n  channels: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.instanceOf(InputChannelInfo),\n      PropTypes.instanceOf(OutputChannelInfo)\n    ])\n  ).isRequired\n};\n","import axios from \"axios\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport * as SampleData from \"./SampleData\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\n\nfunction getStatus(lastCommunicationString) {\n  if (!lastCommunicationString) {\n    return \"Pending\";\n  }\n\n  const lastCommunicationDate = new Date(`${lastCommunicationString}Z`);\n  const diff = Date.now() - lastCommunicationDate.getTime();\n  const tenMinutes = 10 * 60 * 1000;\n  if (diff < tenMinutes) {\n    return \"Online\";\n  }\n  return \"Offline\";\n}\n\nexport function getSenders(callback) {\n  axios\n    .get(process.env.REACT_APP_ENCODER, getAuthorizationHeader())\n    .then((senders) => {\n      callback(\n        senders.data.map((sender) => {\n          let channels = [];\n          if (sender.output) {\n            channels = sender.output.map((output) => {\n              return new OutputChannelInfo(\n                output.id,\n                output.channel.name,\n                output.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            sender.lastCommunication == null\n              ? \"Never\"\n              : sender.lastCommunication;\n          return new DeviceInfo(\n            sender.serialNumber,\n            lastCommunication,\n            sender.device.publicIpAddress,\n            sender.device.privateIpAddress,\n            sender.device.displayName,\n            getStatus(sender.lastCommunication),\n            channels,\n            \"encoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getSenders(callback);\n    });\n}\n\nexport function getReceivers(callback) {\n  axios\n    .get(process.env.REACT_APP_DECODER, getAuthorizationHeader())\n    .then((receivers) => {\n      callback(\n        receivers.data.map((receiver) => {\n          let channels = [];\n          if (receiver.input) {\n            channels = receiver.input.map((input) => {\n              return new InputChannelInfo(\n                input.id,\n                input.channel.name,\n                input.channel.port,\n                null\n              );\n            });\n          }\n          const lastCommunication =\n            receiver.lastCommunication == null\n              ? \"Never\"\n              : receiver.lastCommunication;\n          return new DeviceInfo(\n            receiver.serialNumber,\n            lastCommunication,\n            receiver.device.publicIpAddress,\n            receiver.device.privateIpAddress,\n            receiver.device.displayName,\n            getStatus(receiver.lastCommunication),\n            channels,\n            \"decoder\",\n            [\"Additional Device details go here\"]\n          );\n        })\n      );\n    })\n    .catch(() => {\n      SampleData.getReceivers(callback);\n    });\n}\n\nexport function deleteDevice(deviceId) {\n  return axios\n    .delete(\n      `${process.env.REACT_APP_DEVICE}/${deviceId}`,\n      getAuthorizationHeader()\n    )\n    .catch(() => {});\n}\n\nexport async function updateDeviceName(deviceId, updatedName) {\n  return axios.put(\n    process.env.REACT_APP_DEVICE,\n    {\n      serialNumber: deviceId,\n      displayName: updatedName\n    },\n    getAuthorizationHeader()\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PropTypes from \"prop-types\";\nimport { MenuItem } from \"@material-ui/core\";\nimport * as DeviceApi from \"../../api/DeviceApi\";\n\nfunction renderDeleteButton(openDeleteDialog) {\n  return (\n    <Button\n      id=\"deleteBtn\"\n      variant=\"outlined\"\n      color=\"secondary\"\n      onClick={openDeleteDialog}\n    >\n      Delete\n    </Button>\n  );\n}\n\nfunction renderDeleteMenuItem(openDeleteDialog) {\n  return (\n    <MenuItem onClick={openDeleteDialog}>\n      <span className=\"warningText\">Delete</span>\n    </MenuItem>\n  );\n}\n\nexport default function DeleteDeviceButton(props) {\n  const { button, deleteId } = props;\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n\n  const openDeleteDialog = () => {\n    return setOpen(true);\n  };\n  const cancelDelete = () => {\n    return setOpen(false);\n  };\n  const confirmDelete = () => {\n    DeviceApi.deleteDevice(deleteId).then(() => {\n      if (history.location.pathname.endsWith(\"Devices\")) {\n        history.go(0);\n      } else {\n        history.push(\"/Devices\");\n      }\n    });\n    return setOpen(false);\n  };\n\n  return (\n    <>\n      {button\n        ? renderDeleteButton(openDeleteDialog)\n        : renderDeleteMenuItem(openDeleteDialog)}\n      <Dialog\n        open={open}\n        onClose={cancelDelete}\n        aria-labelledby=\"delete-stream-dialog-title\"\n        aria-describedby=\"delete-stream-dialog-description\"\n        id=\"delete-stream-dialog\"\n      >\n        <DialogTitle id=\"delete-stream-dialog-title\">\n          Confirm Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"delete-stream-dialog-description\">\n            Are you sure you want to delete this device?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button id=\"cancelDeleteBtn\" onClick={cancelDelete} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            id=\"confirmDeleteBtn\"\n            onClick={confirmDelete}\n            color=\"secondary\"\n            autoFocus\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nDeleteDeviceButton.propTypes = {\n  button: PropTypes.bool.isRequired,\n  deleteId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { MoreVert } from \"@material-ui/icons/\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeleteDeviceButton from \"../general/Buttons/DeleteDeviceButton\";\n\nexport default class ActionMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorElement: null\n    };\n\n    this.setAnchorElement = this.setAnchorElement.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick(event) {\n    this.setAnchorElement(event.currentTarget);\n  }\n\n  handleClose() {\n    this.setAnchorElement(null);\n  }\n\n  setAnchorElement(element) {\n    this.setState({\n      anchorElement: element\n    });\n  }\n\n  render() {\n    const { anchorElement } = this.state;\n    const { device } = this.props;\n    return (\n      <>\n        <IconButton\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n          size=\"small\"\n        >\n          <MoreVert />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorElement}\n          keepMounted\n          open={Boolean(anchorElement)}\n          onClose={this.handleClose}\n          anchorOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n          transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        >\n          <MenuItem onClick={this.handleClose}>\n            <NavLink\n              to={{\n                pathname: `/Devices/Details/${device.serialNumber}`,\n                state: { device }\n              }}\n              className=\"hideLinkStyle\"\n            >\n              View Details\n            </NavLink>\n          </MenuItem>\n          <MenuItem onClick={this.handleClose}>\n            Start stream with this as receiver\n          </MenuItem>\n          <DeleteDeviceButton button={false} deleteId={device.serialNumber} />\n        </Menu>\n      </>\n    );\n  }\n}\n\nActionMenu.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  FilterList,\n  Search,\n  ExpandLess,\n  ExpandMore,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable, { MTableToolbar } from \"material-table\";\n\nimport ChannelDetailsTable from \"./ChannelDetailsTable\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport ActionMenu from \"./ActionMenu\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nfunction getComponents() {\n  return {\n    /*  eslint-disable react/jsx-props-no-spreading */\n    Toolbar: function Components(props) {\n      return (\n        <div className=\"lightestGrey\">\n          <MTableToolbar {...props} />\n        </div>\n      );\n    }\n  };\n}\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"Name\",\n      field: \"name\"\n    },\n    {\n      title: \"Serial Number\",\n      field: \"serialNumber\"\n    },\n    {\n      title: \"Status\",\n      field: \"status\",\n      render: function Status(rowData) {\n        return <StatusIndicator status={rowData.status} />;\n      },\n      lookup: {\n        Online: \"Online\",\n        Pending: \"Pending\",\n        Error: \"Error\",\n        Offline: \"Offline\"\n      }\n    },\n    {\n      title: \"Private IP Address\",\n      field: \"privateIp\"\n    },\n    {\n      title: \"Public IP Address\",\n      field: \"publicIp\"\n    },\n    {\n      title: \"Actions\",\n      field: \"action\",\n      filtering: false,\n      sorting: false,\n      render: function Actions(rowData) {\n        return <ActionMenu device={rowData} />;\n      },\n      align: \"center\",\n      export: false\n    }\n  ];\n}\n\nfunction getDetailPanel() {\n  return [\n    {\n      icon: ExpandMore,\n      openIcon: ExpandLess,\n      tooltip: \"Show Device Details\",\n      render: function DetailPanel(rowData) {\n        return (\n          <div className=\"lightestGrey\" style={{ padding: \"1.5em\" }}>\n            <Typography variant=\"h6\">Channels</Typography>\n            <ChannelDetailsTable channels={rowData.channels} />\n          </div>\n        );\n      }\n    }\n  ];\n}\n\nfunction getOptions() {\n  return {\n    toolbar: true,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: true,\n    draggable: false\n  };\n}\n\nfunction getIcons() {\n  return {\n    Filter: FilterList,\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function DevicesTable(props) {\n  const { title, devices } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer style={{ maxHeight: 570 }}>\n          <MaterialTable\n            title={title}\n            components={getComponents()}\n            columns={getColumnInfo()}\n            data={devices}\n            detailPanel={getDetailPanel()}\n            options={getOptions()}\n            icons={getIcons()}\n          />\n        </TableContainer>\n      </Box>\n    </>\n  );\n}\n\nDevicesTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  devices: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired\n};\n","import React from \"react\";\nimport { Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport default class VerticalTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event, newTab) {\n    const { setValue } = this.props;\n    setValue(newTab);\n  }\n\n  render() {\n    const {\n      value,\n      classes: { tabs }\n    } = this.props;\n\n    return (\n      <>\n        <Tabs\n          value={value}\n          onChange={this.handleChange}\n          aria-label=\"Vertical tabs\"\n          className={`${tabs} lightGrey blackFont flexContents`}\n          orientation=\"vertical\"\n          indicatorColor=\"primary\"\n          variant=\"scrollable\"\n        >\n          <Tab\n            label=\"Senders\"\n            id=\"vertical-tab-0\"\n            aria-controls=\"vertical-tabpanel-0\"\n          />\n          <Tab\n            label=\"Receivers\"\n            id=\"vertical-tab-1\"\n            aria-controls=\"vertical-tabpanel-1\"\n          />\n        </Tabs>\n      </>\n    );\n  }\n}\n\nVerticalTabs.propTypes = {\n  setValue: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nimport TabPanel from \"./TabPanel\";\nimport DevicesTable from \"./DevicesTable\";\nimport VerticalTabs from \"../general/VerticalTabs\";\n\nexport default class DeviceListTabTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      value: 0\n    };\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { dataSource } = this.props;\n    dataSource.getSenders(this.handleSendersChange);\n    dataSource.getReceivers(this.handleReceiversChange);\n  }\n\n  handleValueChange(tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  render() {\n    const { receivers, senders, value } = this.state;\n    const { classes } = this.props;\n    return (\n      <>\n        <Box\n          style={{\n            display: \"flex\",\n            flexGrow: 1\n          }}\n        >\n          <VerticalTabs\n            value={value}\n            setValue={this.handleValueChange}\n            classes={classes}\n          />\n          <TabPanel value={value} index={0} className=\"lightGreyBorder\">\n            <DevicesTable devices={senders} title=\"List of Senders\" />\n          </TabPanel>\n          <TabPanel value={value} index={1} className=\"lightGreyBorder\">\n            <DevicesTable devices={receivers} title=\"List of Receivers\" />\n          </TabPanel>\n        </Box>\n      </>\n    );\n  }\n}\nDeviceListTabTable.propTypes = {\n  dataSource: PropTypes.objectOf(PropTypes.func).isRequired,\n  classes: PropTypes.shape({\n    tabs: PropTypes.string\n  }).isRequired\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default function defaultMakeStylesTheme() {\n  return makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.background.paper\n    },\n    tabs: {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }));\n}\n","import React from \"react\";\n\nimport Page from \"../general/Page\";\nimport DeviceListTabTable from \"./DeviceListTabTable\";\nimport * as useStyles from \"../DefaultMakeStylesTheme\";\nimport * as dataSource from \"../api/DeviceApi\";\n\nexport default function DeviceListPage() {\n  const breadcrumb = [\n    [\"Home\", \"/Home\"],\n    [\"My Devices\", \"/Devices\"]\n  ];\n  return (\n    <Page title=\"My Devices\" breadcrumbs={breadcrumb} deviceList>\n      <DeviceListTabTable classes={useStyles} dataSource={dataSource} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nexport default function HorizontalTabPanel(props) {\n  const { value, index, children } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </div>\n  );\n}\n\nHorizontalTabPanel.propTypes = {\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import React from \"react\";\nimport { Box, TableContainer } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Search,\n  ArrowDownward,\n  Clear,\n  SaveAlt,\n  FirstPage,\n  LastPage,\n  ChevronRight,\n  ChevronLeft\n} from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\nimport LogInfo from \"../model/LogInfo\";\n\nfunction getColumnInfo() {\n  return [\n    {\n      title: \"ID\",\n      field: \"id\",\n      cellStyle: { width: \"10%\" }\n    },\n    {\n      title: \"Date\",\n      field: \"dateTime\",\n      cellStyle: { width: \"15%\" }\n    },\n    {\n      title: \"Level\",\n      field: \"level\",\n      cellStyle: { width: \"10%\" }\n    },\n    {\n      title: \"Message\",\n      field: \"message\",\n      sorting: false\n    }\n  ];\n}\n\nfunction getOptions(bodyHeight) {\n  return {\n    toolbar: true,\n    showTitle: false,\n    search: true,\n    exportButton: true,\n    headerStyle: {\n      backgroundColor: \"#f1f1f1\",\n      fontWeight: \"bold\"\n    },\n    filtering: false,\n    draggable: false,\n    maxBodyHeight: bodyHeight,\n    minBodyHeight: bodyHeight\n  };\n}\n\nfunction getIcons() {\n  return {\n    Search,\n    ResetSearch: Clear,\n    SortArrow: ArrowDownward,\n    Export: SaveAlt,\n    FirstPage,\n    LastPage,\n    NextPage: ChevronRight,\n    PreviousPage: ChevronLeft\n  };\n}\n\nexport default function LogsTable(props) {\n  const { logs, bodyHeight, title } = props;\n  return (\n    <>\n      <Box>\n        <TableContainer>\n          <MaterialTable\n            title={title}\n            columns={getColumnInfo()}\n            data={logs}\n            options={getOptions(bodyHeight)}\n            icons={getIcons()}\n          />\n        </TableContainer>\n        <div className=\"textAlignRightPadded\">\n          {\"Time Zone: \".concat(\n            Intl.DateTimeFormat().resolvedOptions().timeZone\n          )}\n        </div>\n      </Box>\n    </>\n  );\n}\n\nLogsTable.propTypes = {\n  logs: PropTypes.arrayOf(PropTypes.instanceOf(LogInfo)).isRequired,\n  bodyHeight: PropTypes.string,\n  title: PropTypes.string\n};\n\nLogsTable.defaultProps = {\n  bodyHeight: \"auto\",\n  title: \"Logs\"\n};\n","import axios from \"axios\";\nimport LogInfo from \"../model/LogInfo\";\nimport { getAuthorizationHeader } from \"./AuthenticationUtil\";\nimport * as SampleData from \"./SampleData\";\n\nasync function getLogs(endpoint) {\n  return axios\n    .get(endpoint, getAuthorizationHeader())\n    .then((response) => {\n      return Promise.resolve(\n        response.data.map((log) => {\n          return new LogInfo(log.id, log.dateTime, log.level, log.message);\n        })\n      );\n    })\n    .catch(() => {\n      return new Promise((resolve) => {\n        SampleData.getAllLogs(resolve);\n      });\n    });\n}\n\nexport async function getAllLogs() {\n  return getLogs(process.env.REACT_APP_LOG);\n}\n\nexport async function getDeviceLogs(deviceSerialNumber) {\n  return getLogs(`${process.env.REACT_APP_LOG}/${deviceSerialNumber}`);\n}\n","import { Container, Paper } from \"@material-ui/core\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../../model/DeviceInfo\";\nimport LogsTable from \"../../loglist/LogsTable\";\nimport * as LogApi from \"../../api/LogApi\";\n\nexport default class DeviceDetailsActivityPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.device = props.device;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    LogApi.getDeviceLogs(this.device.serialNumber).then(this.handleLogsChange);\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return (\n      <>\n        <Container component={Paper}>\n          <LogsTable\n            title={`${this.device.serialNumber} Logs`}\n            logs={logs}\n            bodyHeight=\"35vh\"\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nDeviceDetailsActivityPanel.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Paper } from \"@material-ui/core\";\n\nexport default function DeviceDetailsNotesPanel(props) {\n  const { extras } = props;\n  return <Container component={Paper}>{extras}</Container>;\n}\n\nDeviceDetailsNotesPanel.propTypes = {\n  extras: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\nimport { Cancel, Save } from \"@material-ui/icons\";\n\nexport default function EditableName(props) {\n  const { confirmEditing, deviceName, setName, cancelEditing } = props;\n  return (\n    <form className=\"deviceNameEditForm\" onSubmit={confirmEditing}>\n      <Box className=\"flexContents\">\n        <TextField\n          id=\"deviceName\"\n          name=\"deviceName\"\n          required\n          defaultValue={deviceName}\n          onChange={(event) => setName(event.target.value)}\n        />\n        <div className=\"alignRightFloat\">\n          <IconButton id=\"cancelEditBtn\" size=\"small\" onClick={cancelEditing}>\n            <Cancel />\n          </IconButton>\n\n          <IconButton id=\"confirmEditBtn\" type=\"submit\" color=\"primary\">\n            <Save />\n          </IconButton>\n        </div>\n      </Box>\n    </form>\n  );\n}\n\nEditableName.propTypes = {\n  confirmEditing: PropTypes.func.isRequired,\n  deviceName: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired,\n  cancelEditing: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Edit } from \"@material-ui/icons\";\n\nexport default function StaticName(props) {\n  const { deviceName, startEditing } = props;\n  return (\n    <>\n      {deviceName}\n      <div className=\"alignRightFloat\">\n        <IconButton\n          id=\"editBtn\"\n          size=\"small\"\n          color=\"action\"\n          onClick={startEditing}\n        >\n          <Edit />\n        </IconButton>\n      </div>\n    </>\n  );\n}\n\nStaticName.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  startEditing: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as DeviceApi from \"../api/DeviceApi\";\nimport EditableName from \"./EditableName\";\nimport StaticName from \"./StaticName\";\n\nexport default class DeviceName extends React.Component {\n  constructor(props) {\n    super(props);\n    this.deviceName = props.deviceName;\n    this.deviceId = props.deviceId;\n    this.state = {\n      editing: false,\n      name: this.deviceName\n    };\n\n    this.startEdit = this.startEdit.bind(this);\n    this.cancelEditing = this.cancelEditing.bind(this);\n    this.confirmEditing = this.confirmEditing.bind(this);\n    this.setName = this.setName.bind(this);\n  }\n\n  setName(updatedName) {\n    this.setState({ name: updatedName });\n  }\n\n  startEdit() {\n    this.setState({ editing: true });\n  }\n\n  cancelEditing() {\n    this.setState({ name: this.deviceName });\n    this.setState({ editing: false });\n  }\n\n  confirmEditing(event) {\n    // api call\n    event.preventDefault();\n    const { name: newName } = this.state;\n    const oldName = this.deviceName;\n    this.deviceName = newName;\n    this.setState({ editing: false });\n\n    DeviceApi.updateDeviceName(this.deviceId, newName).catch(() => {\n      // If update was unsuccessful, return to the old name\n      this.deviceName = oldName;\n      this.forceUpdate();\n    });\n  }\n\n  render() {\n    const { editing } = this.state;\n    return (\n      <>\n        {editing ? (\n          <EditableName\n            confirmEditing={this.confirmEditing}\n            deviceName={this.deviceName}\n            setName={this.setName}\n            cancelEditing={this.cancelEditing}\n          />\n        ) : (\n          <StaticName\n            deviceName={this.deviceName}\n            startEditing={this.startEdit}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nDeviceName.propTypes = {\n  deviceName: PropTypes.string.isRequired,\n  deviceId: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\n\nimport { TableContainer, TableCell, TableRow } from \"@material-ui/core\";\nimport ChannelDetailsTable from \"../devicelist/ChannelDetailsTable\";\nimport InputChannelInfo from \"../model/InputChannelInfo\";\nimport OutputChannelInfo from \"../model/OutputChannelInfo\";\nimport StatusIndicator from \"../general/StatusIndicator\";\nimport DeviceName from \"./DeviceName\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class DeviceDetailsConciseRow extends React.Component {\n  static getPropertyDisplayName(name) {\n    switch (name) {\n      case \"serialNumber\":\n        return \"Serial Number\";\n      case \"lastCommunication\":\n        return \"Last Communication\";\n      case \"privateIp\":\n        return \"Private IP Address\";\n      case \"publicIp\":\n        return \"Public IP Address\";\n      case \"name\":\n        return \"Name\";\n      case \"status\":\n        return \"Status\";\n      case \"channels\":\n        return \"Channels\";\n      default:\n        return \"Additional Info\";\n    }\n  }\n\n  static createInnerTable(value) {\n    return (\n      <TableContainer>\n        <ChannelDetailsTable channels={value} />\n      </TableContainer>\n    );\n  }\n\n  static createTableCellContents(name, value, device) {\n    switch (name) {\n      case \"channels\":\n        return DeviceDetailsConciseRow.createInnerTable(value);\n      case \"status\":\n        return <StatusIndicator status={value} />;\n      case \"name\":\n        return <DeviceName deviceName={value} deviceId={device.serialNumber} />;\n      default:\n        return value;\n    }\n  }\n\n  render() {\n    const { name, value, device } = this.props;\n    return (\n      <TableRow>\n        <TableCell>\n          {DeviceDetailsConciseRow.getPropertyDisplayName(name)}\n        </TableCell>\n        <TableCell align=\"center\">\n          {DeviceDetailsConciseRow.createTableCellContents(name, value, device)}\n        </TableCell>\n      </TableRow>\n    );\n  }\n}\n\nDeviceDetailsConciseRow.propTypes = {\n  name: Proptypes.string.isRequired,\n  value: Proptypes.oneOfType([\n    Proptypes.string,\n    Proptypes.arrayOf(\n      Proptypes.oneOfType([InputChannelInfo, OutputChannelInfo])\n    )\n  ]).isRequired,\n  device: Proptypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { TableContainer, Table, TableBody, Paper } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport DeviceDetailsConciseRow from \"./DeviceDetailsConciseRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function DeviceDetailsConciseTable(props) {\n  const { device } = props;\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableBody>\n            {DeviceInfo.getConciseProperties().map((property) => (\n              <DeviceDetailsConciseRow\n                name={property}\n                value={device[property]}\n                device={device}\n                key={`device_${property}`}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nDeviceDetailsConciseTable.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport { Container, Tab, Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport HorizontalTabPanel from \"../general/HorizontalTabPanel\";\nimport DeviceDetailsActivityPanel from \"./TabPanels/DeviceDetailsActivityPanel\";\nimport DeviceDetailsNotesPanel from \"./TabPanels/DeviceDetailsNotesPanel\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport DeviceDetailsConciseTable from \"./DeviceDetailsConciseTable\";\n\nexport default class DeviceDetailsTabTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleValueChange(event, tabIndex) {\n    this.setState({\n      value: tabIndex\n    });\n  }\n\n  static getPanelContents(tabInfo, device) {\n    switch (tabInfo) {\n      case \"Overview\":\n        return <DeviceDetailsConciseTable device={device} />;\n      case \"Activity Log\":\n        return <DeviceDetailsActivityPanel device={device} />;\n      case \"Notes\":\n        return <DeviceDetailsNotesPanel extras={device.extras} />;\n\n      default:\n        return <div>Whoops not a valid value</div>;\n    }\n  }\n\n  render() {\n    const { value } = this.state;\n    const { device, tabs } = this.props;\n    return (\n      <Container>\n        <Tabs\n          value={value}\n          onChange={this.handleValueChange}\n          className=\"lightGrey blackFont flexContents\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {tabs.map((tabInfo) => {\n            let tab;\n            if (tabInfo === \"Overview\") {\n              tab = (\n                <Tab\n                  label={tabInfo}\n                  key={tabInfo}\n                  style={{ pointerEvents: \"none\" }}\n                />\n              );\n            } else {\n              tab = <Tab label={tabInfo} key={tabInfo} />;\n            }\n            return tab;\n          })}\n        </Tabs>\n        {tabs.map((tabInfo, index) => {\n          return (\n            <HorizontalTabPanel\n              value={value}\n              key={tabInfo}\n              index={index}\n              device={device}\n            >\n              {DeviceDetailsTabTable.getPanelContents(tabInfo, device)}\n            </HorizontalTabPanel>\n          );\n        })}\n      </Container>\n    );\n  }\n}\nDeviceDetailsTabTable.propTypes = {\n  tabs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  device: PropTypes.instanceOf(DeviceInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\n\nimport DeviceDetailsTabTable from \"./DeviceDetailsTabTable\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport { getSampleSender } from \"../api/SampleData\";\n\nexport default function DeviceDetailsPageContents(props) {\n  const { device } = props;\n  const tabs = [\"Activity Log\", \"Notes\"];\n\n  return (\n    <Grid container>\n      <Grid item xs={6}>\n        <DeviceDetailsTabTable tabs={[\"Overview\"]} device={device} />\n      </Grid>\n      <Grid item xs={6}>\n        <DeviceDetailsTabTable tabs={tabs} device={device} />\n      </Grid>\n    </Grid>\n  );\n}\nDeviceDetailsPageContents.defaultProps = {\n  device: getSampleSender()\n};\n\nDeviceDetailsPageContents.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo)\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Page from \"../general/Page\";\nimport DeviceDetailsPageContents from \"./DeviceDetailsPageContents\";\nimport DeviceInfo from \"../model/DeviceInfo\";\nimport { getSampleSender } from \"../api/SampleData\";\n\nexport default function DeviceDetailsPage(props) {\n  const {\n    location: {\n      state: { device }\n    }\n  } = props;\n\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"My Devices\", \"/Devices\"],\n    [\"Device Details\", `/Devices/Details/${device.serialNumber}`]\n  ];\n\n  return (\n    <Page title=\"Device Details\" breadcrumbs={breadcrumbs}>\n      <DeviceDetailsPageContents device={device} />\n    </Page>\n  );\n}\n\nDeviceDetailsPage.defaultProps = {\n  location: { state: { device: getSampleSender() } }\n};\n\nDeviceDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      device: PropTypes.instanceOf(DeviceInfo)\n    })\n  })\n};\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport StreamsTableWrapper from \"./StreamsTableWrapper\";\nimport * as streamDataSource from \"../api/StreamApi\";\n\nexport default function StreamListPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"]\n  ];\n  return (\n    <Page title=\"Active Streams\" breadcrumbs={breadcrumbs}>\n      <StreamsTableWrapper dataSource={streamDataSource} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { InputAdornment, makeStyles, TextField } from \"@material-ui/core\";\n\nimport { Search } from \"@material-ui/icons/\";\n\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = makeStyles((theme) => ({\n      search: {\n        position: \"relative\",\n        right: 0,\n        marginLeft: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n          marginLeft: theme.spacing(1),\n          width: \"auto\"\n        }\n      },\n      searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        alignItems: \"left\",\n        justifyContent: \"center\"\n      },\n      inputRoot: {\n        color: \"inherit\"\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"searchField\">\n          <TextField\n            placeholder=\"Search\"\n            InputProps={{\n              \"aria-label\": \"search\",\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {\" \"}\n                  <Search />\n                </InputAdornment>\n              )\n            }}\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n  MenuItem,\n  Select\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons/\";\nimport PropTypes from \"prop-types\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default class SelectDeviceTableRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState((state) => ({ open: !state.open }));\n  }\n\n  render() {\n    const {\n      deviceDetails: { channels, name },\n      onChange\n    } = this.props;\n    const { open } = this.state;\n    return (\n      <>\n        <ListItem button dense onClick={this.onClick}>\n          <ListItemText primary={name} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding style={{ width: \"96%\" }}>\n            <ListItem divider>\n              <ListItemText secondary=\"Select Channel\" />\n              <Select defaultValue=\"\" onChange={onChange}>\n                {channels.map((channel) => {\n                  return (\n                    <MenuItem value={channel.id} key={`${name}_${channel.id}`}>\n                      {channel.port}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </ListItem>\n          </List>\n        </Collapse>\n      </>\n    );\n  }\n}\nSelectDeviceTableRow.propTypes = {\n  deviceDetails: PropTypes.instanceOf(DeviceInfo).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { List } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport SearchBar from \"./SearchBar\";\nimport SelectDeviceTableRow from \"./SelectDeviceTableRow\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function SelectDevicesTable(props) {\n  const { dataSource, name, onChange } = props;\n  return (\n    <>\n      <div className=\"subtitle\">{name}</div>\n      <SearchBar />\n      <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n        <List>\n          {dataSource.map((device) => {\n            return (\n              <SelectDeviceTableRow\n                deviceDetails={device}\n                key={device.serialNumber}\n                onChange={onChange}\n              />\n            );\n          })}\n        </List>\n      </div>\n    </>\n  );\n}\n\nSelectDevicesTable.propTypes = {\n  name: PropTypes.string.isRequired,\n  dataSource: PropTypes.arrayOf(PropTypes.instanceOf(DeviceInfo)).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport SelectDevicesTable from \"./SelectDevicesTable\";\nimport StreamButton from \"../general/Buttons/StreamButton\";\n\nimport * as DeviceApi from \"../api/DeviceApi\";\nimport { createStream } from \"../api/StreamApi\";\n\nexport default class StreamingTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      senders: [],\n      receivers: [],\n      selectedSenderID: \"\",\n      selectedReceiverID: \"\"\n    };\n\n    this.handleSendersChange = this.handleSendersChange.bind(this);\n    this.handleReceiversChange = this.handleReceiversChange.bind(this);\n\n    this.onSenderSelected = this.onSenderSelected.bind(this);\n    this.onReceiverSelected = this.onReceiverSelected.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    DeviceApi.getSenders(this.handleSendersChange);\n    DeviceApi.getReceivers(this.handleReceiversChange);\n  }\n\n  handleSendersChange(senders) {\n    this.setState({\n      senders\n    });\n  }\n\n  handleReceiversChange(receivers) {\n    this.setState({\n      receivers\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { selectedReceiverID, selectedSenderID } = this.state;\n    if (selectedReceiverID !== \"\" && selectedSenderID !== \"\") {\n      createStream(selectedReceiverID, selectedSenderID);\n    }\n  }\n\n  onSenderSelected(selectedSender) {\n    this.setState({\n      selectedSenderID: selectedSender.target.value\n    });\n  }\n\n  onReceiverSelected(selectedReceiver) {\n    this.setState({\n      selectedReceiverID: selectedReceiver.target.value\n    });\n  }\n\n  render() {\n    const { receivers, senders } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} id=\"createStreamForm\">\n          <Grid\n            container\n            spacing={2}\n            alignContent=\"center\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"SenderTable\">\n                <SelectDevicesTable\n                  name=\"Sender Devices\"\n                  dataSource={senders}\n                  onChange={this.onSenderSelected}\n                />\n              </div>\n            </Grid>\n            <Grid\n              container\n              item\n              xs={2}\n              id=\"TableStartStreamingBtn\"\n              justify=\"center\"\n              alignContent=\"center\"\n              alignItems=\"center\"\n              display=\"flex\"\n            >\n              <StreamButton id=\"StreamingStreamBtn\" type=\"submit\" />\n            </Grid>\n            <Grid item xs={3}>\n              <div className=\"streamingTable\" id=\"ReceiverTable\">\n                <SelectDevicesTable\n                  name=\"Receiver Devices\"\n                  dataSource={receivers}\n                  onChange={this.onReceiverSelected}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </form>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport Page from \"../general/Page\";\nimport StreamingTable from \"./StreamingTable\";\n\nexport default function CreateStreamPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [\"New Stream\", \"/Streams/New\"]\n  ];\n  return (\n    <Page title=\"Create a Stream\" breadcrumbs={breadcrumbs}>\n      <StreamingTable />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LogsTable from \"./LogsTable\";\n\nexport default class LogsTableWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n    this.logsDataSource = props.logsDataSource;\n    this.handleLogsChange = this.handleLogsChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.logsDataSource.getAllLogs().then(this.handleLogsChange);\n  }\n\n  handleLogsChange(logs) {\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const { logs } = this.state;\n    return <LogsTable logs={logs} />;\n  }\n}\n\nLogsTableWrapper.propTypes = {\n  logsDataSource: PropTypes.objectOf(PropTypes.func).isRequired\n};\n","import React from \"react\";\n\nimport LogsTableWrapper from \"./LogsTableWrapper\";\nimport Page from \"../general/Page\";\nimport * as logsDataSource from \"../api/LogApi\";\n\nexport default function LogListPage() {\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Logs\", \"/Logs\"]\n  ];\n\n  return (\n    <Page title=\"Logs\" breadcrumbs={breadcrumbs}>\n      <LogsTableWrapper logsDataSource={logsDataSource} />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell\n} from \"@material-ui/core\";\nimport DeviceInfo from \"../model/DeviceInfo\";\n\nexport default function StreamDeviceDetails(props) {\n  const { device, channel } = props;\n\n  return (\n    <>\n      <TableContainer style={{ maxHeight: 300 }}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>{device.name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Serial Number</TableCell>\n              <TableCell>{device.serialNumber}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Channel</TableCell>\n              <TableCell>{channel}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nStreamDeviceDetails.propTypes = {\n  device: PropTypes.instanceOf(DeviceInfo).isRequired,\n  channel: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogContentText from \"@material-ui/core/DialogContentText\";\n\nexport default function DialogBody(props) {\n  const { children } = props;\n  return (\n    <MuiDialogContent>\n      <MuiDialogContentText id=\"dialog-description\">\n        {children}\n      </MuiDialogContentText>\n    </MuiDialogContent>\n  );\n}\nDialogBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\n\nexport default function DialogButtons(props) {\n  const { button1, button2 } = props;\n\n  return (\n    <MuiDialogActions>\n      <Button onClick={button1.onClick} color=\"primary\">\n        {button1.name}\n      </Button>\n      <Button onClick={button2.onClick} color=\"secondary\" autoFocus>\n        {button2.name}\n      </Button>\n    </MuiDialogActions>\n  );\n}\n\nDialogButtons.propTypes = {\n  button1: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired,\n  button2: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MuiDialog from \"@material-ui/core/Dialog/Dialog\";\nimport { DialogTitle } from \"@material-ui/core\";\nimport DialogBody from \"./DialogBody\";\nimport DialogButtons from \"./DialogButtons\";\n\nexport default class Dialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.openDialog = this.openDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n\n  openDialog() {\n    return this.setState({ open: true });\n  }\n\n  closeDialog() {\n    return this.setState({ open: false });\n  }\n\n  render() {\n    const cancelButton = {\n      name: \"Cancel\",\n      onClick: this.closeDialog\n    };\n\n    const { title, actionButton, children } = this.props;\n    const { open } = this.state;\n    return (\n      <MuiDialog\n        open={open}\n        onClose={() => this.closeDialog}\n        aria-labelledby=\"dialog-title\"\n        aria-describedby=\"dialog-description\"\n        id=\"dialog\"\n      >\n        <DialogTitle>{title}</DialogTitle>\n        <DialogBody>{children}</DialogBody>\n        <DialogButtons button1={cancelButton} button2={actionButton} />\n      </MuiDialog>\n    );\n  }\n}\n\nDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  actionButton: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../general/dialog/Dialog\";\nimport { deleteStream } from \"../api/StreamApi\";\n\nexport default class DeleteStreamDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.afterDelete = this.afterDelete.bind(this);\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  afterDelete() {\n    const { history } = this.props;\n    this.dialogElement.current.closeDialog();\n    history.push(\"/Streams\");\n  }\n\n  confirmDelete() {\n    const { deleteId } = this.props;\n    deleteStream(deleteId).then(this.afterDelete);\n  }\n\n  // used by Summoner to summon\n  openDialog() {\n    return this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId } = this.props;\n    const title = \"Confirm Delete\";\n    const message = `Are you sure you want to end stream ${deleteId}?`;\n\n    const actionButton = {\n      name: \"Confirm\",\n      onClick: this.confirmDelete\n    };\n\n    return (\n      <Dialog\n        ref={this.dialogElement}\n        title={title}\n        actionButton={actionButton}\n      >\n        {message}\n      </Dialog>\n    );\n  }\n}\n\nDeleteStreamDialog.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Tooltip } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withRouter } from \"react-router-dom\";\n\nimport DeleteStreamDialog from \"./DeleteStreamDialog\";\n\nclass DeleteStreamDialogOpener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogElement = React.createRef();\n    this.openDialog = this.openDialog.bind(this);\n  }\n\n  openDialog() {\n    this.dialogElement.current.openDialog();\n  }\n\n  render() {\n    const { deleteId, history } = this.props;\n    return (\n      <>\n        <Tooltip title=\"Delete Stream\" aria-label=\"delete stream\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<DeleteIcon />}\n            onClick={this.openDialog}\n          >\n            Delete\n          </Button>\n        </Tooltip>\n        <DeleteStreamDialog\n          ref={this.dialogElement}\n          deleteId={deleteId}\n          history={history}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(DeleteStreamDialogOpener);\n\nDeleteStreamDialogOpener.propTypes = {\n  deleteId: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    go: PropTypes.func.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Container, Grid } from \"@material-ui/core\";\n\nimport StreamInfo from \"../model/StreamInfo\";\nimport DashboardCard from \"../general/dashboard/DashboardCard\";\nimport StreamDeviceDetails from \"./StreamDeviceDetails\";\nimport DeleteStreamDialogOpener from \"./DeleteStreamDialogOpener\";\n\nexport default function StreamDetailsPageContents(props) {\n  const { stream } = props;\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <DashboardCard title=\"Sender Details\">\n            <StreamDeviceDetails\n              device={stream.sender}\n              channel={stream.outputChannel}\n            />\n          </DashboardCard>\n        </Grid>\n        <Grid item xs={6}>\n          <DashboardCard title=\"Receiver Details\">\n            <StreamDeviceDetails\n              device={stream.receiver}\n              channel={stream.inputChannel}\n            />\n          </DashboardCard>\n        </Grid>\n        <Grid item xs={7}>\n          <DashboardCard title=\"Logs\" />\n        </Grid>\n        <Grid item xs={5}>\n          <DashboardCard title=\"Statistics\" />\n        </Grid>\n      </Grid>\n      <Box className=\"alignRightFloatPadded\">\n        <DeleteStreamDialogOpener deleteId={stream.id} />\n      </Box>\n    </Container>\n  );\n}\n\nStreamDetailsPageContents.propTypes = {\n  stream: PropTypes.instanceOf(StreamInfo).isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StreamInfo from \"../model/StreamInfo\";\nimport * as SampleData from \"../api/SampleData\";\nimport StreamDetailsPageContents from \"./StreamDetailsPageContents\";\nimport Page from \"../general/Page\";\n\nexport default function StreamDetailsPage(props) {\n  const {\n    location: {\n      state: { stream }\n    }\n  } = props;\n\n  const breadcrumbs = [\n    [\"Home\", \"/Home\"],\n    [\"Active Streams\", \"/Streams\"],\n    [`Stream Details`, `/Streams/Details/${stream.id}`]\n  ];\n\n  return (\n    <Page title=\"Stream Details\" breadcrumbs={breadcrumbs}>\n      <StreamDetailsPageContents stream={stream} />\n    </Page>\n  );\n}\n\nStreamDetailsPage.defaultProps = {\n  location: { state: { stream: SampleData.getSampleStream() } }\n};\n\nStreamDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      stream: PropTypes.instanceOf(StreamInfo)\n    })\n  })\n};\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport DashboardButton from \"./dashboard/DashboardButton\";\nimport DashboardCard from \"./dashboard/DashboardCard\";\nimport Page from \"./Page\";\nimport { isAuthenticated } from \"../api/AuthenticationUtil\";\n\nexport default function PathNotFoundPage() {\n  return (\n    <Page title=\"Error 404: Path not found\" breadcrumbs={[]}>\n      <Grid container justify=\"center\" direction=\"row\" spacing={3}>\n        <Grid item xs={6}>\n          <DashboardCard title=\"Sorry, that page doesn't exist!\">\n            {isAuthenticated() ? (\n              <DashboardButton href=\"/Home\">Go Home</DashboardButton>\n            ) : (\n              <DashboardButton href=\"/Login\">Go to Login</DashboardButton>\n            )}\n          </DashboardCard>\n        </Grid>\n      </Grid>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport ProtectedRoute from \"./ProtectedRoute\";\n\nimport LoginPage from \"../login/LoginPage\";\nimport HomePage from \"../homepage/HomePage\";\nimport DeviceListPage from \"../devicelist/DeviceListPage\";\nimport DeviceDetailsPage from \"../deviceDetailsPage/DeviceDetailsPage\";\nimport StreamListPage from \"../streamlist/StreamListPage\";\nimport CreateStreamPage from \"../createStream/CreateStreamPage\";\nimport LogListPage from \"../loglist/LogListPage\";\nimport StreamDetailsPage from \"../streamDetails/StreamDetailsPage\";\nimport PathNotFoundPage from \"../general/PathNotFoundPage\";\n\nexport default function AppRouter() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <ProtectedRoute path=\"/Login\" render={() => <LoginPage />} />\n        <ProtectedRoute\n          path=\"/Home\"\n          authenticationRequired\n          render={() => {\n            return <HomePage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Devices/Details/:serialNumber\"\n          authenticationRequired\n          render={(location) => {\n            return <DeviceDetailsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Devices\"\n          authenticationRequired\n          render={() => {\n            return <DeviceListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/New\"\n          authenticationRequired\n          render={() => {\n            return <CreateStreamPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams/Details/:streamId\"\n          authenticationRequired\n          render={(location) => {\n            return <StreamDetailsPage location={location} />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Streams\"\n          authenticationRequired\n          render={() => {\n            return <StreamListPage />;\n          }}\n        />\n        <ProtectedRoute\n          path=\"/Logs\"\n          authenticationRequired\n          render={() => {\n            return <LogListPage />;\n          }}\n        />\n        <Route path=\"/\">\n          <PathNotFoundPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppRouter from \"./app/AppRouter\";\n\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n"],"sourceRoot":""}