openapi: 3.0.2

info:
  version: 1.0.0
  title: 'Switchboard API'
  description: 'API for the switchboard service'

servers:
  - url: http://localhost:8080/v1
    description: Local Enviorment

paths:
  /device:
    get:
      operationId: retrieveAllDevices
      description: Get a list of available devices
      tags:
        - Devices
      responses:
        '200':
          description: Successful retrival of device list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicesModel'
    post:
      operationId: createDevice
      description: Create a new device
      tags:
        - Devices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceRequest'
      responses:
        '200':
          description: Successful creation of device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceModel'
    put:
      operationId: updateDevice
      description: Update the properties of a device
      tags:
        - Devices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceModel'
      responses:
        '200':
          description: Succesful update of the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceModel'

  /device/{serialNumber}:
    get:
      operationId: retrieveDevice
      description: Retrieve a single device
      parameters:
        - $ref: '#/components/parameters/DeviceSerialNumber'
      tags:
        - Devices
      responses:
        '200':
          description: Succesful retrieval of the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceModel'
    delete:
      operationId: deleteDevice
      description: Deletes a device from the database
      parameters:
        - $ref: '#/components/parameters/DeviceSerialNumber'
      tags:
        - Devices
      responses:
        '200':
          description: Succesful deletion of the device
          content:
            application/json:
              schema:
                type: string
                example: 'Device with serial number BtmC8ckj deleted'

  /encoder:
    get:
      operationId: retrieveAllEncoders
      description: Get a list of available encoders
      tags:
        - Encoders
      responses:
        '200':
          description: Successful retrieval of encoder list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncodersModel'
    post:
      operationId: createEncoder
      description: Create a new encoder device
      tags:
        - Encoders
      requestBody:
        description: The serial number of the device which should be registered as an encoder
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEncoderRequest'
      responses:
        '200':
          description: Successful creation the encoder
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncoderModel'


  /encoder/{serialNumber}:
    get:
      operationId: getEncoderById
      description: Retrieve a specific encoder
      tags:
        - Encoders
      parameters:
        - $ref: '#/components/parameters/EncoderSerialNumber'
      responses:
        '200':
          description: Successful retrieval of the encoder
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncoderModel'
    put:
      operationId: updateEncoder
      description: Update a encoder's definition
      tags:
        - Encoders
      parameters:
        - $ref: '#/components/parameters/EncoderSerialNumber'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncoderModel'
      responses:
        '200':
          description: Successful update of the Encoder
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncoderModel'
    delete:
      operationId: deleteEncoder
      description: Delete a encoder
      tags:
        - Encoders
      parameters:
        - $ref: '#/components/parameters/EncoderSerialNumber'
      responses:
        '200':
          description: Successful deletion of the encoder

  /encoder/{serialNumber}/stream:
    get:
      operationId: getEncoderStreams
      description: Retrieve the sending streams for the encoder
      tags:
        - Encoders
        - Streams
      parameters:
        - $ref: '#/components/parameters/EncoderSerialNumber'
      responses:
        '200':
          description: Successful retrieval of video streams for an encoder
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StreamModel'

  /decoder:
    get:
      operationId: retrieveAllDecoders
      description: Get a list of available decoders serial numbers
      tags:
        - Decoders
      responses:
        '200':
          description: Successful retrieval of decoder list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecodersModel'
    post:
      operationId: createDecoder
      description: Create a new decoder client
      tags:
        - Decoders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDecoderRequest'
      responses:
        '200':
          description: Successful creation of the decoder
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecoderModel'

  /decoder/{serialNumber}:
    get:
      operationId: getDecoderById
      description: Retrieve a specific decoder
      tags:
        - Decoders
      parameters:
        - $ref: '#/components/parameters/DecoderSerialNumber'
      responses:
        '200':
          description: Successful retrieval of the decoder
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecoderModel'
    put:
      operationId: updateDecoder
      description: Update a decoder's definition
      tags:
        - Decoders
      parameters:
        - $ref: '#/components/parameters/DecoderSerialNumber'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecoderModel'
      responses:
        '200':
          description: Successful update of the decoder
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecoderModel'
    delete:
      operationId: deleteDecoder
      description: Delete a decoder
      tags:
        - Decoders
      parameters:
        - $ref: '#/components/parameters/DecoderSerialNumber'
      responses:
        '200':
          description: Successful deletion of the decoder

  /decoder/{serialNumber}/stream:
    get:
      operationId: getDecoderStreams
      description: Retrieve the sending streams for the decoder
      tags:
        - Decoders
        - Streams
      parameters:
        - $ref: '#/components/parameters/DecoderSerialNumber'
      responses:
        '200':
          description: Successful retrieval of video streams for a decoder
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StreamModel'

  /stream:
    get:
      operationId: getStreams
      description: Retrieve all the existing streams
      tags:
        - Streams
      responses:
        '200':
          description: Successful retrieval of video streams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamsModel'
    post:
      operationId: createStream
      description: Create a new stream between an input and output channel
      tags:
        - Streams
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStreamRequest'
      responses:
        '200':
          description: Successful creation of the stream
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamModel'
    put:
      operationId: updateStream
      description: update a stream's definition
      tags:
        - Streams
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamModel'
      responses:
        '200':
          description: Successful update of the stream
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamModel'

  /stream/{id}:
    get:
      operationId: getStreamById
      description: Retrieve a stream's definition
      tags:
        - Streams
      parameters:
        - $ref: '#/components/parameters/StreamId'
      responses:
        '200':
          description: Succesful retrieval of a stream
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamModel'
    delete:
      operationId: deleteStream
      description: Delete a stream
      tags:
        - Streams
      parameters:
        - $ref: '#/components/parameters/StreamId'
      responses:
        '200':
          description: Successful deletion of the stream

components:
  schemas:
    DevicesModel:
      description: A list of device serial numbers
      type: array
      items:
        $ref: '#/components/schemas/DeviceModel'

    DeviceModel:
      description: A device thats either an  encoder or decoder
      properties:
        serialNumber:
          type: string
          example: 'BtmC8ckj'
        publicIpAddress:
          type: string
          example: '178.156.52.3'
        privateIpAddress:
          type: string
          example: '192.168.0.129'
        displayName:
          type: string
          example: 'Device 1'
        status:
          type: string
          example: 'running'

    CreateDeviceRequest:
      description: A request to create a new device
      properties:
        serialNumber:
          type: string
          example: 'BtmC8ckj'
        privateIpAddress:
          type: string
          example: '192.168.0.129'
        displayName:
          type: string
          example: 'Device 1'
        status:
          type: string
          example: 'running'

    EncodersModel:
      description: A list of encoders registered to the service
      type: array
      items:
        $ref: '#/components/schemas/EncoderModel'

    EncoderModel:
      description: A client that sends a video stream
      properties:
        serialNumber:
          type: string
          example: 'BtmC8ckj'
        device:
          $ref: '#/components/schemas/DeviceModel'
        output:
          type: array
          items:
            $ref: '#/components/schemas/OutputChannelModel'

    CreateEncoderRequest:
      description: A client that sends a video stream
      properties:
        serialNumber:
          type: string
          example: 'BtmC8ckj'

    DecodersModel:
      description: A list of decoder UUIDs
      type: array
      items:
        $ref: '#/components/schemas/DecoderModel'

    DecoderModel:
      description: A client that receives a video stream
      properties:
        serialNumber:
          type: string
          example: 'v7BM3ejS'
        device:
          $ref: '#/components/schemas/DeviceModel'
        input:
          type: array
          items:
            $ref: '#/components/schemas/InputChannelModel'

    CreateDecoderRequest:
      description: Body for the creation of a decoder object
      properties:
        serialNumber:
          type: string
          example: 'v7BM3ejS'

    ChannelModel:
      description: Parent for input and output channels
      properties:
        id:
          type: integer
          format: int64
          example: '123'
        name:
          type: string
          example: 'box 2'
        port:
          type: integer
          example: '2'

    OutputChannelModel:
      description: A channel through which an encoder outputs a video stream
      properties:
        id:
          type: integer
          format: int64
          example: '123'
        channel:
          $ref: '#/components/schemas/ChannelModel'
        encoder:
          $ref: '#/components/schemas/EncoderModel'

    InputChannelModel:
      description: A channel through which a decoder receives a video stream
      properties:
        id:
          type: integer
          format: int64
          example: '123'
        channel:
          $ref: '#/components/schemas/ChannelModel'
        decoder:
          $ref: '#/components/schemas/DecoderModel'

    StreamModel:
      description: A video stream connecting an input and output channel
      properties:
        id:
          type: integer
          format: int64
          example: '1234'
        inputChannel:
          $ref: '#/components/schemas/InputChannelModel'
        outputChannel:
          $ref: '#/components/schemas/OutputChannelModel'
        isRendezvous:
          description: Flag that indicates that the clients should use SRT's Rendezvous mode
          type: boolean
          example: true

    StreamsModel:
      description: A list of stream IDs
      type: array
      items:
        type: integer
        format: int64
      example: ['1234']

    CreateStreamRequest:
      description: An object to request the creation of a stream between an input and output channel
      properties:
        inputChannelId:
          type: integer
          format: int64
          example: '1'
        outputChannelId:
          type: integer
          format: int64
          example: '2'

  parameters:
    DeviceSerialNumber:
      in: path
      name: serialNumber
      required: true
      description: The serial number of the device
      schema:
        type: string
        example: 'BtmC8ckj'
    EncoderSerialNumber:
      in: path
      name: uuid
      required: true
      description: The serial number of an encoder
      schema:
        type: string
        example: 'BtmC8ckj'
    DecoderSerialNumber:
      in: path
      name: uuid
      required: true
      description: The serial number of a decoder
      schema:
        type: string
        example: 'v7BM3ejS'
    StreamId:
      in: path
      name: id
      required: true
      description: The ID of a stream
      schema:
        type: integer
        format: int64
        example: '1234'

tags:
  - name: Devices
    description: Devices endpoints
  - name: Encoders
    description: Encoders endpoints
  - name: Decoders
    description: Decoders endpoints
  - name: Stream
    description: Streams endpoints